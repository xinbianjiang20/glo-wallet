{"version":3,"file":"static/chunks/af2e2c9b.50770a4aecc2ff16.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@injectivelabs/indexer-proto-ts/esm/injective_spot_exchange_rpc.js"],"sourcesContent":["/* eslint-disable */\nimport { grpc } from \"@injectivelabs/grpc-web\";\nimport { BrowserHeaders } from \"browser-headers\";\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Observable } from \"rxjs\";\nimport { share } from \"rxjs/operators\";\nexport const protobufPackage = \"injective_spot_exchange_rpc\";\nfunction createBaseMarketsRequest() {\n    return { marketStatus: \"\", baseDenom: \"\", quoteDenom: \"\", marketStatuses: [] };\n}\nexport const MarketsRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketStatus !== \"\") {\n            writer.uint32(10).string(message.marketStatus);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(18).string(message.baseDenom);\n        }\n        if (message.quoteDenom !== \"\") {\n            writer.uint32(26).string(message.quoteDenom);\n        }\n        for (const v of message.marketStatuses) {\n            writer.uint32(34).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMarketsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketStatus = reader.string();\n                    break;\n                case 2:\n                    message.baseDenom = reader.string();\n                    break;\n                case 3:\n                    message.quoteDenom = reader.string();\n                    break;\n                case 4:\n                    message.marketStatuses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketStatus: isSet(object.marketStatus) ? String(object.marketStatus) : \"\",\n            baseDenom: isSet(object.baseDenom) ? String(object.baseDenom) : \"\",\n            quoteDenom: isSet(object.quoteDenom) ? String(object.quoteDenom) : \"\",\n            marketStatuses: Array.isArray(object === null || object === void 0 ? void 0 : object.marketStatuses) ? object.marketStatuses.map((e) => String(e)) : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketStatus !== undefined && (obj.marketStatus = message.marketStatus);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        message.quoteDenom !== undefined && (obj.quoteDenom = message.quoteDenom);\n        if (message.marketStatuses) {\n            obj.marketStatuses = message.marketStatuses.map((e) => e);\n        }\n        else {\n            obj.marketStatuses = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return MarketsRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBaseMarketsRequest();\n        message.marketStatus = (_a = object.marketStatus) !== null && _a !== void 0 ? _a : \"\";\n        message.baseDenom = (_b = object.baseDenom) !== null && _b !== void 0 ? _b : \"\";\n        message.quoteDenom = (_c = object.quoteDenom) !== null && _c !== void 0 ? _c : \"\";\n        message.marketStatuses = ((_d = object.marketStatuses) === null || _d === void 0 ? void 0 : _d.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseMarketsResponse() {\n    return { markets: [] };\n}\nexport const MarketsResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.markets) {\n            SpotMarketInfo.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMarketsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.markets.push(SpotMarketInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            markets: Array.isArray(object === null || object === void 0 ? void 0 : object.markets) ? object.markets.map((e) => SpotMarketInfo.fromJSON(e)) : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.markets) {\n            obj.markets = message.markets.map((e) => e ? SpotMarketInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.markets = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return MarketsResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseMarketsResponse();\n        message.markets = ((_a = object.markets) === null || _a === void 0 ? void 0 : _a.map((e) => SpotMarketInfo.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseSpotMarketInfo() {\n    return {\n        marketId: \"\",\n        marketStatus: \"\",\n        ticker: \"\",\n        baseDenom: \"\",\n        baseTokenMeta: undefined,\n        quoteDenom: \"\",\n        quoteTokenMeta: undefined,\n        makerFeeRate: \"\",\n        takerFeeRate: \"\",\n        serviceProviderFee: \"\",\n        minPriceTickSize: \"\",\n        minQuantityTickSize: \"\",\n    };\n}\nexport const SpotMarketInfo = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.marketStatus !== \"\") {\n            writer.uint32(18).string(message.marketStatus);\n        }\n        if (message.ticker !== \"\") {\n            writer.uint32(26).string(message.ticker);\n        }\n        if (message.baseDenom !== \"\") {\n            writer.uint32(34).string(message.baseDenom);\n        }\n        if (message.baseTokenMeta !== undefined) {\n            TokenMeta.encode(message.baseTokenMeta, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.quoteDenom !== \"\") {\n            writer.uint32(50).string(message.quoteDenom);\n        }\n        if (message.quoteTokenMeta !== undefined) {\n            TokenMeta.encode(message.quoteTokenMeta, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.makerFeeRate !== \"\") {\n            writer.uint32(66).string(message.makerFeeRate);\n        }\n        if (message.takerFeeRate !== \"\") {\n            writer.uint32(74).string(message.takerFeeRate);\n        }\n        if (message.serviceProviderFee !== \"\") {\n            writer.uint32(82).string(message.serviceProviderFee);\n        }\n        if (message.minPriceTickSize !== \"\") {\n            writer.uint32(90).string(message.minPriceTickSize);\n        }\n        if (message.minQuantityTickSize !== \"\") {\n            writer.uint32(98).string(message.minQuantityTickSize);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSpotMarketInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.marketStatus = reader.string();\n                    break;\n                case 3:\n                    message.ticker = reader.string();\n                    break;\n                case 4:\n                    message.baseDenom = reader.string();\n                    break;\n                case 5:\n                    message.baseTokenMeta = TokenMeta.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.quoteDenom = reader.string();\n                    break;\n                case 7:\n                    message.quoteTokenMeta = TokenMeta.decode(reader, reader.uint32());\n                    break;\n                case 8:\n                    message.makerFeeRate = reader.string();\n                    break;\n                case 9:\n                    message.takerFeeRate = reader.string();\n                    break;\n                case 10:\n                    message.serviceProviderFee = reader.string();\n                    break;\n                case 11:\n                    message.minPriceTickSize = reader.string();\n                    break;\n                case 12:\n                    message.minQuantityTickSize = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            marketStatus: isSet(object.marketStatus) ? String(object.marketStatus) : \"\",\n            ticker: isSet(object.ticker) ? String(object.ticker) : \"\",\n            baseDenom: isSet(object.baseDenom) ? String(object.baseDenom) : \"\",\n            baseTokenMeta: isSet(object.baseTokenMeta) ? TokenMeta.fromJSON(object.baseTokenMeta) : undefined,\n            quoteDenom: isSet(object.quoteDenom) ? String(object.quoteDenom) : \"\",\n            quoteTokenMeta: isSet(object.quoteTokenMeta) ? TokenMeta.fromJSON(object.quoteTokenMeta) : undefined,\n            makerFeeRate: isSet(object.makerFeeRate) ? String(object.makerFeeRate) : \"\",\n            takerFeeRate: isSet(object.takerFeeRate) ? String(object.takerFeeRate) : \"\",\n            serviceProviderFee: isSet(object.serviceProviderFee) ? String(object.serviceProviderFee) : \"\",\n            minPriceTickSize: isSet(object.minPriceTickSize) ? String(object.minPriceTickSize) : \"\",\n            minQuantityTickSize: isSet(object.minQuantityTickSize) ? String(object.minQuantityTickSize) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.marketStatus !== undefined && (obj.marketStatus = message.marketStatus);\n        message.ticker !== undefined && (obj.ticker = message.ticker);\n        message.baseDenom !== undefined && (obj.baseDenom = message.baseDenom);\n        message.baseTokenMeta !== undefined &&\n            (obj.baseTokenMeta = message.baseTokenMeta ? TokenMeta.toJSON(message.baseTokenMeta) : undefined);\n        message.quoteDenom !== undefined && (obj.quoteDenom = message.quoteDenom);\n        message.quoteTokenMeta !== undefined &&\n            (obj.quoteTokenMeta = message.quoteTokenMeta ? TokenMeta.toJSON(message.quoteTokenMeta) : undefined);\n        message.makerFeeRate !== undefined && (obj.makerFeeRate = message.makerFeeRate);\n        message.takerFeeRate !== undefined && (obj.takerFeeRate = message.takerFeeRate);\n        message.serviceProviderFee !== undefined && (obj.serviceProviderFee = message.serviceProviderFee);\n        message.minPriceTickSize !== undefined && (obj.minPriceTickSize = message.minPriceTickSize);\n        message.minQuantityTickSize !== undefined && (obj.minQuantityTickSize = message.minQuantityTickSize);\n        return obj;\n    },\n    create(base) {\n        return SpotMarketInfo.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        const message = createBaseSpotMarketInfo();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketStatus = (_b = object.marketStatus) !== null && _b !== void 0 ? _b : \"\";\n        message.ticker = (_c = object.ticker) !== null && _c !== void 0 ? _c : \"\";\n        message.baseDenom = (_d = object.baseDenom) !== null && _d !== void 0 ? _d : \"\";\n        message.baseTokenMeta = (object.baseTokenMeta !== undefined && object.baseTokenMeta !== null)\n            ? TokenMeta.fromPartial(object.baseTokenMeta)\n            : undefined;\n        message.quoteDenom = (_e = object.quoteDenom) !== null && _e !== void 0 ? _e : \"\";\n        message.quoteTokenMeta = (object.quoteTokenMeta !== undefined && object.quoteTokenMeta !== null)\n            ? TokenMeta.fromPartial(object.quoteTokenMeta)\n            : undefined;\n        message.makerFeeRate = (_f = object.makerFeeRate) !== null && _f !== void 0 ? _f : \"\";\n        message.takerFeeRate = (_g = object.takerFeeRate) !== null && _g !== void 0 ? _g : \"\";\n        message.serviceProviderFee = (_h = object.serviceProviderFee) !== null && _h !== void 0 ? _h : \"\";\n        message.minPriceTickSize = (_j = object.minPriceTickSize) !== null && _j !== void 0 ? _j : \"\";\n        message.minQuantityTickSize = (_k = object.minQuantityTickSize) !== null && _k !== void 0 ? _k : \"\";\n        return message;\n    },\n};\nfunction createBaseTokenMeta() {\n    return { name: \"\", address: \"\", symbol: \"\", logo: \"\", decimals: 0, updatedAt: \"0\" };\n}\nexport const TokenMeta = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.name !== \"\") {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(18).string(message.address);\n        }\n        if (message.symbol !== \"\") {\n            writer.uint32(26).string(message.symbol);\n        }\n        if (message.logo !== \"\") {\n            writer.uint32(34).string(message.logo);\n        }\n        if (message.decimals !== 0) {\n            writer.uint32(40).sint32(message.decimals);\n        }\n        if (message.updatedAt !== \"0\") {\n            writer.uint32(48).sint64(message.updatedAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTokenMeta();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.address = reader.string();\n                    break;\n                case 3:\n                    message.symbol = reader.string();\n                    break;\n                case 4:\n                    message.logo = reader.string();\n                    break;\n                case 5:\n                    message.decimals = reader.sint32();\n                    break;\n                case 6:\n                    message.updatedAt = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            name: isSet(object.name) ? String(object.name) : \"\",\n            address: isSet(object.address) ? String(object.address) : \"\",\n            symbol: isSet(object.symbol) ? String(object.symbol) : \"\",\n            logo: isSet(object.logo) ? String(object.logo) : \"\",\n            decimals: isSet(object.decimals) ? Number(object.decimals) : 0,\n            updatedAt: isSet(object.updatedAt) ? String(object.updatedAt) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.address !== undefined && (obj.address = message.address);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.logo !== undefined && (obj.logo = message.logo);\n        message.decimals !== undefined && (obj.decimals = Math.round(message.decimals));\n        message.updatedAt !== undefined && (obj.updatedAt = message.updatedAt);\n        return obj;\n    },\n    create(base) {\n        return TokenMeta.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f;\n        const message = createBaseTokenMeta();\n        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : \"\";\n        message.address = (_b = object.address) !== null && _b !== void 0 ? _b : \"\";\n        message.symbol = (_c = object.symbol) !== null && _c !== void 0 ? _c : \"\";\n        message.logo = (_d = object.logo) !== null && _d !== void 0 ? _d : \"\";\n        message.decimals = (_e = object.decimals) !== null && _e !== void 0 ? _e : 0;\n        message.updatedAt = (_f = object.updatedAt) !== null && _f !== void 0 ? _f : \"0\";\n        return message;\n    },\n};\nfunction createBaseMarketRequest() {\n    return { marketId: \"\" };\n}\nexport const MarketRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMarketRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketId: isSet(object.marketId) ? String(object.marketId) : \"\" };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        return obj;\n    },\n    create(base) {\n        return MarketRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseMarketRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        return message;\n    },\n};\nfunction createBaseMarketResponse() {\n    return { market: undefined };\n}\nexport const MarketResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.market !== undefined) {\n            SpotMarketInfo.encode(message.market, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMarketResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.market = SpotMarketInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { market: isSet(object.market) ? SpotMarketInfo.fromJSON(object.market) : undefined };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.market !== undefined && (obj.market = message.market ? SpotMarketInfo.toJSON(message.market) : undefined);\n        return obj;\n    },\n    create(base) {\n        return MarketResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        const message = createBaseMarketResponse();\n        message.market = (object.market !== undefined && object.market !== null)\n            ? SpotMarketInfo.fromPartial(object.market)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseStreamMarketsRequest() {\n    return { marketIds: [] };\n}\nexport const StreamMarketsRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.marketIds) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamMarketsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [] };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return StreamMarketsRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseStreamMarketsRequest();\n        message.marketIds = ((_a = object.marketIds) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseStreamMarketsResponse() {\n    return { market: undefined, operationType: \"\", timestamp: \"0\" };\n}\nexport const StreamMarketsResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.market !== undefined) {\n            SpotMarketInfo.encode(message.market, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamMarketsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.market = SpotMarketInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            market: isSet(object.market) ? SpotMarketInfo.fromJSON(object.market) : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.market !== undefined && (obj.market = message.market ? SpotMarketInfo.toJSON(message.market) : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return StreamMarketsResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseStreamMarketsResponse();\n        message.market = (object.market !== undefined && object.market !== null)\n            ? SpotMarketInfo.fromPartial(object.market)\n            : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nfunction createBaseOrderbookV2Request() {\n    return { marketId: \"\" };\n}\nexport const OrderbookV2Request = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrderbookV2Request();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketId: isSet(object.marketId) ? String(object.marketId) : \"\" };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        return obj;\n    },\n    create(base) {\n        return OrderbookV2Request.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseOrderbookV2Request();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        return message;\n    },\n};\nfunction createBaseOrderbookV2Response() {\n    return { orderbook: undefined };\n}\nexport const OrderbookV2Response = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.orderbook !== undefined) {\n            SpotLimitOrderbookV2.encode(message.orderbook, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrderbookV2Response();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderbook = SpotLimitOrderbookV2.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { orderbook: isSet(object.orderbook) ? SpotLimitOrderbookV2.fromJSON(object.orderbook) : undefined };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.orderbook !== undefined &&\n            (obj.orderbook = message.orderbook ? SpotLimitOrderbookV2.toJSON(message.orderbook) : undefined);\n        return obj;\n    },\n    create(base) {\n        return OrderbookV2Response.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        const message = createBaseOrderbookV2Response();\n        message.orderbook = (object.orderbook !== undefined && object.orderbook !== null)\n            ? SpotLimitOrderbookV2.fromPartial(object.orderbook)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseSpotLimitOrderbookV2() {\n    return { buys: [], sells: [], sequence: \"0\", timestamp: \"0\" };\n}\nexport const SpotLimitOrderbookV2 = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.buys) {\n            PriceLevel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.sells) {\n            PriceLevel.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.sequence !== \"0\") {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(32).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSpotLimitOrderbookV2();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.buys.push(PriceLevel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.sells.push(PriceLevel.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.sequence = longToString(reader.uint64());\n                    break;\n                case 4:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            buys: Array.isArray(object === null || object === void 0 ? void 0 : object.buys) ? object.buys.map((e) => PriceLevel.fromJSON(e)) : [],\n            sells: Array.isArray(object === null || object === void 0 ? void 0 : object.sells) ? object.sells.map((e) => PriceLevel.fromJSON(e)) : [],\n            sequence: isSet(object.sequence) ? String(object.sequence) : \"0\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.buys) {\n            obj.buys = message.buys.map((e) => e ? PriceLevel.toJSON(e) : undefined);\n        }\n        else {\n            obj.buys = [];\n        }\n        if (message.sells) {\n            obj.sells = message.sells.map((e) => e ? PriceLevel.toJSON(e) : undefined);\n        }\n        else {\n            obj.sells = [];\n        }\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return SpotLimitOrderbookV2.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBaseSpotLimitOrderbookV2();\n        message.buys = ((_a = object.buys) === null || _a === void 0 ? void 0 : _a.map((e) => PriceLevel.fromPartial(e))) || [];\n        message.sells = ((_b = object.sells) === null || _b === void 0 ? void 0 : _b.map((e) => PriceLevel.fromPartial(e))) || [];\n        message.sequence = (_c = object.sequence) !== null && _c !== void 0 ? _c : \"0\";\n        message.timestamp = (_d = object.timestamp) !== null && _d !== void 0 ? _d : \"0\";\n        return message;\n    },\n};\nfunction createBasePriceLevel() {\n    return { price: \"\", quantity: \"\", timestamp: \"0\" };\n}\nexport const PriceLevel = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.price !== \"\") {\n            writer.uint32(10).string(message.price);\n        }\n        if (message.quantity !== \"\") {\n            writer.uint32(18).string(message.quantity);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePriceLevel();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.price = reader.string();\n                    break;\n                case 2:\n                    message.quantity = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            price: isSet(object.price) ? String(object.price) : \"\",\n            quantity: isSet(object.quantity) ? String(object.quantity) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.price !== undefined && (obj.price = message.price);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return PriceLevel.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBasePriceLevel();\n        message.price = (_a = object.price) !== null && _a !== void 0 ? _a : \"\";\n        message.quantity = (_b = object.quantity) !== null && _b !== void 0 ? _b : \"\";\n        message.timestamp = (_c = object.timestamp) !== null && _c !== void 0 ? _c : \"0\";\n        return message;\n    },\n};\nfunction createBaseOrderbooksV2Request() {\n    return { marketIds: [] };\n}\nexport const OrderbooksV2Request = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.marketIds) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrderbooksV2Request();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [] };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return OrderbooksV2Request.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseOrderbooksV2Request();\n        message.marketIds = ((_a = object.marketIds) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseOrderbooksV2Response() {\n    return { orderbooks: [] };\n}\nexport const OrderbooksV2Response = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.orderbooks) {\n            SingleSpotLimitOrderbookV2.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrderbooksV2Response();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderbooks.push(SingleSpotLimitOrderbookV2.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orderbooks: Array.isArray(object === null || object === void 0 ? void 0 : object.orderbooks)\n                ? object.orderbooks.map((e) => SingleSpotLimitOrderbookV2.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.orderbooks) {\n            obj.orderbooks = message.orderbooks.map((e) => e ? SingleSpotLimitOrderbookV2.toJSON(e) : undefined);\n        }\n        else {\n            obj.orderbooks = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return OrderbooksV2Response.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseOrderbooksV2Response();\n        message.orderbooks = ((_a = object.orderbooks) === null || _a === void 0 ? void 0 : _a.map((e) => SingleSpotLimitOrderbookV2.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseSingleSpotLimitOrderbookV2() {\n    return { marketId: \"\", orderbook: undefined };\n}\nexport const SingleSpotLimitOrderbookV2 = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.orderbook !== undefined) {\n            SpotLimitOrderbookV2.encode(message.orderbook, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSingleSpotLimitOrderbookV2();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.orderbook = SpotLimitOrderbookV2.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            orderbook: isSet(object.orderbook) ? SpotLimitOrderbookV2.fromJSON(object.orderbook) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.orderbook !== undefined &&\n            (obj.orderbook = message.orderbook ? SpotLimitOrderbookV2.toJSON(message.orderbook) : undefined);\n        return obj;\n    },\n    create(base) {\n        return SingleSpotLimitOrderbookV2.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseSingleSpotLimitOrderbookV2();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.orderbook = (object.orderbook !== undefined && object.orderbook !== null)\n            ? SpotLimitOrderbookV2.fromPartial(object.orderbook)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseStreamOrderbookV2Request() {\n    return { marketIds: [] };\n}\nexport const StreamOrderbookV2Request = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.marketIds) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrderbookV2Request();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [] };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return StreamOrderbookV2Request.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseStreamOrderbookV2Request();\n        message.marketIds = ((_a = object.marketIds) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseStreamOrderbookV2Response() {\n    return { orderbook: undefined, operationType: \"\", timestamp: \"0\", marketId: \"\" };\n}\nexport const StreamOrderbookV2Response = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.orderbook !== undefined) {\n            SpotLimitOrderbookV2.encode(message.orderbook, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(34).string(message.marketId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrderbookV2Response();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderbook = SpotLimitOrderbookV2.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                case 4:\n                    message.marketId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orderbook: isSet(object.orderbook) ? SpotLimitOrderbookV2.fromJSON(object.orderbook) : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.orderbook !== undefined &&\n            (obj.orderbook = message.orderbook ? SpotLimitOrderbookV2.toJSON(message.orderbook) : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        return obj;\n    },\n    create(base) {\n        return StreamOrderbookV2Response.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseStreamOrderbookV2Response();\n        message.orderbook = (object.orderbook !== undefined && object.orderbook !== null)\n            ? SpotLimitOrderbookV2.fromPartial(object.orderbook)\n            : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        message.marketId = (_c = object.marketId) !== null && _c !== void 0 ? _c : \"\";\n        return message;\n    },\n};\nfunction createBaseStreamOrderbookUpdateRequest() {\n    return { marketIds: [] };\n}\nexport const StreamOrderbookUpdateRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.marketIds) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrderbookUpdateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [] };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return StreamOrderbookUpdateRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseStreamOrderbookUpdateRequest();\n        message.marketIds = ((_a = object.marketIds) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseStreamOrderbookUpdateResponse() {\n    return { orderbookLevelUpdates: undefined, operationType: \"\", timestamp: \"0\", marketId: \"\" };\n}\nexport const StreamOrderbookUpdateResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.orderbookLevelUpdates !== undefined) {\n            OrderbookLevelUpdates.encode(message.orderbookLevelUpdates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(34).string(message.marketId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrderbookUpdateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderbookLevelUpdates = OrderbookLevelUpdates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                case 4:\n                    message.marketId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orderbookLevelUpdates: isSet(object.orderbookLevelUpdates)\n                ? OrderbookLevelUpdates.fromJSON(object.orderbookLevelUpdates)\n                : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.orderbookLevelUpdates !== undefined && (obj.orderbookLevelUpdates = message.orderbookLevelUpdates\n            ? OrderbookLevelUpdates.toJSON(message.orderbookLevelUpdates)\n            : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        return obj;\n    },\n    create(base) {\n        return StreamOrderbookUpdateResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseStreamOrderbookUpdateResponse();\n        message.orderbookLevelUpdates =\n            (object.orderbookLevelUpdates !== undefined && object.orderbookLevelUpdates !== null)\n                ? OrderbookLevelUpdates.fromPartial(object.orderbookLevelUpdates)\n                : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        message.marketId = (_c = object.marketId) !== null && _c !== void 0 ? _c : \"\";\n        return message;\n    },\n};\nfunction createBaseOrderbookLevelUpdates() {\n    return { marketId: \"\", sequence: \"0\", buys: [], sells: [], updatedAt: \"0\" };\n}\nexport const OrderbookLevelUpdates = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.sequence !== \"0\") {\n            writer.uint32(16).uint64(message.sequence);\n        }\n        for (const v of message.buys) {\n            PriceLevelUpdate.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.sells) {\n            PriceLevelUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.updatedAt !== \"0\") {\n            writer.uint32(40).sint64(message.updatedAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrderbookLevelUpdates();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.sequence = longToString(reader.uint64());\n                    break;\n                case 3:\n                    message.buys.push(PriceLevelUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.sells.push(PriceLevelUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.updatedAt = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            sequence: isSet(object.sequence) ? String(object.sequence) : \"0\",\n            buys: Array.isArray(object === null || object === void 0 ? void 0 : object.buys) ? object.buys.map((e) => PriceLevelUpdate.fromJSON(e)) : [],\n            sells: Array.isArray(object === null || object === void 0 ? void 0 : object.sells) ? object.sells.map((e) => PriceLevelUpdate.fromJSON(e)) : [],\n            updatedAt: isSet(object.updatedAt) ? String(object.updatedAt) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        if (message.buys) {\n            obj.buys = message.buys.map((e) => e ? PriceLevelUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.buys = [];\n        }\n        if (message.sells) {\n            obj.sells = message.sells.map((e) => e ? PriceLevelUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.sells = [];\n        }\n        message.updatedAt !== undefined && (obj.updatedAt = message.updatedAt);\n        return obj;\n    },\n    create(base) {\n        return OrderbookLevelUpdates.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e;\n        const message = createBaseOrderbookLevelUpdates();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.sequence = (_b = object.sequence) !== null && _b !== void 0 ? _b : \"0\";\n        message.buys = ((_c = object.buys) === null || _c === void 0 ? void 0 : _c.map((e) => PriceLevelUpdate.fromPartial(e))) || [];\n        message.sells = ((_d = object.sells) === null || _d === void 0 ? void 0 : _d.map((e) => PriceLevelUpdate.fromPartial(e))) || [];\n        message.updatedAt = (_e = object.updatedAt) !== null && _e !== void 0 ? _e : \"0\";\n        return message;\n    },\n};\nfunction createBasePriceLevelUpdate() {\n    return { price: \"\", quantity: \"\", isActive: false, timestamp: \"0\" };\n}\nexport const PriceLevelUpdate = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.price !== \"\") {\n            writer.uint32(10).string(message.price);\n        }\n        if (message.quantity !== \"\") {\n            writer.uint32(18).string(message.quantity);\n        }\n        if (message.isActive === true) {\n            writer.uint32(24).bool(message.isActive);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(32).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePriceLevelUpdate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.price = reader.string();\n                    break;\n                case 2:\n                    message.quantity = reader.string();\n                    break;\n                case 3:\n                    message.isActive = reader.bool();\n                    break;\n                case 4:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            price: isSet(object.price) ? String(object.price) : \"\",\n            quantity: isSet(object.quantity) ? String(object.quantity) : \"\",\n            isActive: isSet(object.isActive) ? Boolean(object.isActive) : false,\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.price !== undefined && (obj.price = message.price);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.isActive !== undefined && (obj.isActive = message.isActive);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return PriceLevelUpdate.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBasePriceLevelUpdate();\n        message.price = (_a = object.price) !== null && _a !== void 0 ? _a : \"\";\n        message.quantity = (_b = object.quantity) !== null && _b !== void 0 ? _b : \"\";\n        message.isActive = (_c = object.isActive) !== null && _c !== void 0 ? _c : false;\n        message.timestamp = (_d = object.timestamp) !== null && _d !== void 0 ? _d : \"0\";\n        return message;\n    },\n};\nfunction createBaseOrdersRequest() {\n    return {\n        marketId: \"\",\n        orderSide: \"\",\n        subaccountId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        includeInactive: false,\n        subaccountTotalOrders: false,\n        tradeId: \"\",\n        cid: \"\",\n    };\n}\nexport const OrdersRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.orderSide !== \"\") {\n            writer.uint32(18).string(message.orderSide);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(26).string(message.subaccountId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(32).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(48).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(56).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(66).string(v);\n        }\n        if (message.includeInactive === true) {\n            writer.uint32(72).bool(message.includeInactive);\n        }\n        if (message.subaccountTotalOrders === true) {\n            writer.uint32(80).bool(message.subaccountTotalOrders);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(90).string(message.tradeId);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(98).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrdersRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.orderSide = reader.string();\n                    break;\n                case 3:\n                    message.subaccountId = reader.string();\n                    break;\n                case 4:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = reader.sint32();\n                    break;\n                case 6:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 7:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 9:\n                    message.includeInactive = reader.bool();\n                    break;\n                case 10:\n                    message.subaccountTotalOrders = reader.bool();\n                    break;\n                case 11:\n                    message.tradeId = reader.string();\n                    break;\n                case 12:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            orderSide: isSet(object.orderSide) ? String(object.orderSide) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            includeInactive: isSet(object.includeInactive) ? Boolean(object.includeInactive) : false,\n            subaccountTotalOrders: isSet(object.subaccountTotalOrders) ? Boolean(object.subaccountTotalOrders) : false,\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.orderSide !== undefined && (obj.orderSide = message.orderSide);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        message.includeInactive !== undefined && (obj.includeInactive = message.includeInactive);\n        message.subaccountTotalOrders !== undefined && (obj.subaccountTotalOrders = message.subaccountTotalOrders);\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return OrdersRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        const message = createBaseOrdersRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.orderSide = (_b = object.orderSide) !== null && _b !== void 0 ? _b : \"\";\n        message.subaccountId = (_c = object.subaccountId) !== null && _c !== void 0 ? _c : \"\";\n        message.skip = (_d = object.skip) !== null && _d !== void 0 ? _d : \"0\";\n        message.limit = (_e = object.limit) !== null && _e !== void 0 ? _e : 0;\n        message.startTime = (_f = object.startTime) !== null && _f !== void 0 ? _f : \"0\";\n        message.endTime = (_g = object.endTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.marketIds = ((_h = object.marketIds) === null || _h === void 0 ? void 0 : _h.map((e) => e)) || [];\n        message.includeInactive = (_j = object.includeInactive) !== null && _j !== void 0 ? _j : false;\n        message.subaccountTotalOrders = (_k = object.subaccountTotalOrders) !== null && _k !== void 0 ? _k : false;\n        message.tradeId = (_l = object.tradeId) !== null && _l !== void 0 ? _l : \"\";\n        message.cid = (_m = object.cid) !== null && _m !== void 0 ? _m : \"\";\n        return message;\n    },\n};\nfunction createBaseOrdersResponse() {\n    return { orders: [], paging: undefined };\n}\nexport const OrdersResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.orders) {\n            SpotLimitOrder.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrdersResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orders.push(SpotLimitOrder.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orders: Array.isArray(object === null || object === void 0 ? void 0 : object.orders) ? object.orders.map((e) => SpotLimitOrder.fromJSON(e)) : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.orders) {\n            obj.orders = message.orders.map((e) => e ? SpotLimitOrder.toJSON(e) : undefined);\n        }\n        else {\n            obj.orders = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return OrdersResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseOrdersResponse();\n        message.orders = ((_a = object.orders) === null || _a === void 0 ? void 0 : _a.map((e) => SpotLimitOrder.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseSpotLimitOrder() {\n    return {\n        orderHash: \"\",\n        orderSide: \"\",\n        marketId: \"\",\n        subaccountId: \"\",\n        price: \"\",\n        quantity: \"\",\n        unfilledQuantity: \"\",\n        triggerPrice: \"\",\n        feeRecipient: \"\",\n        state: \"\",\n        createdAt: \"0\",\n        updatedAt: \"0\",\n        txHash: \"\",\n        cid: \"\",\n    };\n}\nexport const SpotLimitOrder = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.orderHash !== \"\") {\n            writer.uint32(10).string(message.orderHash);\n        }\n        if (message.orderSide !== \"\") {\n            writer.uint32(18).string(message.orderSide);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(26).string(message.marketId);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(34).string(message.subaccountId);\n        }\n        if (message.price !== \"\") {\n            writer.uint32(42).string(message.price);\n        }\n        if (message.quantity !== \"\") {\n            writer.uint32(50).string(message.quantity);\n        }\n        if (message.unfilledQuantity !== \"\") {\n            writer.uint32(58).string(message.unfilledQuantity);\n        }\n        if (message.triggerPrice !== \"\") {\n            writer.uint32(66).string(message.triggerPrice);\n        }\n        if (message.feeRecipient !== \"\") {\n            writer.uint32(74).string(message.feeRecipient);\n        }\n        if (message.state !== \"\") {\n            writer.uint32(82).string(message.state);\n        }\n        if (message.createdAt !== \"0\") {\n            writer.uint32(88).sint64(message.createdAt);\n        }\n        if (message.updatedAt !== \"0\") {\n            writer.uint32(96).sint64(message.updatedAt);\n        }\n        if (message.txHash !== \"\") {\n            writer.uint32(106).string(message.txHash);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(114).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSpotLimitOrder();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderHash = reader.string();\n                    break;\n                case 2:\n                    message.orderSide = reader.string();\n                    break;\n                case 3:\n                    message.marketId = reader.string();\n                    break;\n                case 4:\n                    message.subaccountId = reader.string();\n                    break;\n                case 5:\n                    message.price = reader.string();\n                    break;\n                case 6:\n                    message.quantity = reader.string();\n                    break;\n                case 7:\n                    message.unfilledQuantity = reader.string();\n                    break;\n                case 8:\n                    message.triggerPrice = reader.string();\n                    break;\n                case 9:\n                    message.feeRecipient = reader.string();\n                    break;\n                case 10:\n                    message.state = reader.string();\n                    break;\n                case 11:\n                    message.createdAt = longToString(reader.sint64());\n                    break;\n                case 12:\n                    message.updatedAt = longToString(reader.sint64());\n                    break;\n                case 13:\n                    message.txHash = reader.string();\n                    break;\n                case 14:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orderHash: isSet(object.orderHash) ? String(object.orderHash) : \"\",\n            orderSide: isSet(object.orderSide) ? String(object.orderSide) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            price: isSet(object.price) ? String(object.price) : \"\",\n            quantity: isSet(object.quantity) ? String(object.quantity) : \"\",\n            unfilledQuantity: isSet(object.unfilledQuantity) ? String(object.unfilledQuantity) : \"\",\n            triggerPrice: isSet(object.triggerPrice) ? String(object.triggerPrice) : \"\",\n            feeRecipient: isSet(object.feeRecipient) ? String(object.feeRecipient) : \"\",\n            state: isSet(object.state) ? String(object.state) : \"\",\n            createdAt: isSet(object.createdAt) ? String(object.createdAt) : \"0\",\n            updatedAt: isSet(object.updatedAt) ? String(object.updatedAt) : \"0\",\n            txHash: isSet(object.txHash) ? String(object.txHash) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.orderHash !== undefined && (obj.orderHash = message.orderHash);\n        message.orderSide !== undefined && (obj.orderSide = message.orderSide);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.price !== undefined && (obj.price = message.price);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.unfilledQuantity !== undefined && (obj.unfilledQuantity = message.unfilledQuantity);\n        message.triggerPrice !== undefined && (obj.triggerPrice = message.triggerPrice);\n        message.feeRecipient !== undefined && (obj.feeRecipient = message.feeRecipient);\n        message.state !== undefined && (obj.state = message.state);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        message.updatedAt !== undefined && (obj.updatedAt = message.updatedAt);\n        message.txHash !== undefined && (obj.txHash = message.txHash);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return SpotLimitOrder.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const message = createBaseSpotLimitOrder();\n        message.orderHash = (_a = object.orderHash) !== null && _a !== void 0 ? _a : \"\";\n        message.orderSide = (_b = object.orderSide) !== null && _b !== void 0 ? _b : \"\";\n        message.marketId = (_c = object.marketId) !== null && _c !== void 0 ? _c : \"\";\n        message.subaccountId = (_d = object.subaccountId) !== null && _d !== void 0 ? _d : \"\";\n        message.price = (_e = object.price) !== null && _e !== void 0 ? _e : \"\";\n        message.quantity = (_f = object.quantity) !== null && _f !== void 0 ? _f : \"\";\n        message.unfilledQuantity = (_g = object.unfilledQuantity) !== null && _g !== void 0 ? _g : \"\";\n        message.triggerPrice = (_h = object.triggerPrice) !== null && _h !== void 0 ? _h : \"\";\n        message.feeRecipient = (_j = object.feeRecipient) !== null && _j !== void 0 ? _j : \"\";\n        message.state = (_k = object.state) !== null && _k !== void 0 ? _k : \"\";\n        message.createdAt = (_l = object.createdAt) !== null && _l !== void 0 ? _l : \"0\";\n        message.updatedAt = (_m = object.updatedAt) !== null && _m !== void 0 ? _m : \"0\";\n        message.txHash = (_o = object.txHash) !== null && _o !== void 0 ? _o : \"\";\n        message.cid = (_p = object.cid) !== null && _p !== void 0 ? _p : \"\";\n        return message;\n    },\n};\nfunction createBasePaging() {\n    return { total: \"0\", from: 0, to: 0, countBySubaccount: \"0\", next: [] };\n}\nexport const Paging = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.total !== \"0\") {\n            writer.uint32(8).sint64(message.total);\n        }\n        if (message.from !== 0) {\n            writer.uint32(16).sint32(message.from);\n        }\n        if (message.to !== 0) {\n            writer.uint32(24).sint32(message.to);\n        }\n        if (message.countBySubaccount !== \"0\") {\n            writer.uint32(32).sint64(message.countBySubaccount);\n        }\n        for (const v of message.next) {\n            writer.uint32(42).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePaging();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToString(reader.sint64());\n                    break;\n                case 2:\n                    message.from = reader.sint32();\n                    break;\n                case 3:\n                    message.to = reader.sint32();\n                    break;\n                case 4:\n                    message.countBySubaccount = longToString(reader.sint64());\n                    break;\n                case 5:\n                    message.next.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            total: isSet(object.total) ? String(object.total) : \"0\",\n            from: isSet(object.from) ? Number(object.from) : 0,\n            to: isSet(object.to) ? Number(object.to) : 0,\n            countBySubaccount: isSet(object.countBySubaccount) ? String(object.countBySubaccount) : \"0\",\n            next: Array.isArray(object === null || object === void 0 ? void 0 : object.next) ? object.next.map((e) => String(e)) : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.from !== undefined && (obj.from = Math.round(message.from));\n        message.to !== undefined && (obj.to = Math.round(message.to));\n        message.countBySubaccount !== undefined && (obj.countBySubaccount = message.countBySubaccount);\n        if (message.next) {\n            obj.next = message.next.map((e) => e);\n        }\n        else {\n            obj.next = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return Paging.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e;\n        const message = createBasePaging();\n        message.total = (_a = object.total) !== null && _a !== void 0 ? _a : \"0\";\n        message.from = (_b = object.from) !== null && _b !== void 0 ? _b : 0;\n        message.to = (_c = object.to) !== null && _c !== void 0 ? _c : 0;\n        message.countBySubaccount = (_d = object.countBySubaccount) !== null && _d !== void 0 ? _d : \"0\";\n        message.next = ((_e = object.next) === null || _e === void 0 ? void 0 : _e.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseStreamOrdersRequest() {\n    return {\n        marketId: \"\",\n        orderSide: \"\",\n        subaccountId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        includeInactive: false,\n        subaccountTotalOrders: false,\n        tradeId: \"\",\n        cid: \"\",\n    };\n}\nexport const StreamOrdersRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.orderSide !== \"\") {\n            writer.uint32(18).string(message.orderSide);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(26).string(message.subaccountId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(32).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(48).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(56).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(66).string(v);\n        }\n        if (message.includeInactive === true) {\n            writer.uint32(72).bool(message.includeInactive);\n        }\n        if (message.subaccountTotalOrders === true) {\n            writer.uint32(80).bool(message.subaccountTotalOrders);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(90).string(message.tradeId);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(98).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrdersRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.orderSide = reader.string();\n                    break;\n                case 3:\n                    message.subaccountId = reader.string();\n                    break;\n                case 4:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = reader.sint32();\n                    break;\n                case 6:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 7:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 9:\n                    message.includeInactive = reader.bool();\n                    break;\n                case 10:\n                    message.subaccountTotalOrders = reader.bool();\n                    break;\n                case 11:\n                    message.tradeId = reader.string();\n                    break;\n                case 12:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            orderSide: isSet(object.orderSide) ? String(object.orderSide) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            includeInactive: isSet(object.includeInactive) ? Boolean(object.includeInactive) : false,\n            subaccountTotalOrders: isSet(object.subaccountTotalOrders) ? Boolean(object.subaccountTotalOrders) : false,\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.orderSide !== undefined && (obj.orderSide = message.orderSide);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        message.includeInactive !== undefined && (obj.includeInactive = message.includeInactive);\n        message.subaccountTotalOrders !== undefined && (obj.subaccountTotalOrders = message.subaccountTotalOrders);\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return StreamOrdersRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        const message = createBaseStreamOrdersRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.orderSide = (_b = object.orderSide) !== null && _b !== void 0 ? _b : \"\";\n        message.subaccountId = (_c = object.subaccountId) !== null && _c !== void 0 ? _c : \"\";\n        message.skip = (_d = object.skip) !== null && _d !== void 0 ? _d : \"0\";\n        message.limit = (_e = object.limit) !== null && _e !== void 0 ? _e : 0;\n        message.startTime = (_f = object.startTime) !== null && _f !== void 0 ? _f : \"0\";\n        message.endTime = (_g = object.endTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.marketIds = ((_h = object.marketIds) === null || _h === void 0 ? void 0 : _h.map((e) => e)) || [];\n        message.includeInactive = (_j = object.includeInactive) !== null && _j !== void 0 ? _j : false;\n        message.subaccountTotalOrders = (_k = object.subaccountTotalOrders) !== null && _k !== void 0 ? _k : false;\n        message.tradeId = (_l = object.tradeId) !== null && _l !== void 0 ? _l : \"\";\n        message.cid = (_m = object.cid) !== null && _m !== void 0 ? _m : \"\";\n        return message;\n    },\n};\nfunction createBaseStreamOrdersResponse() {\n    return { order: undefined, operationType: \"\", timestamp: \"0\" };\n}\nexport const StreamOrdersResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.order !== undefined) {\n            SpotLimitOrder.encode(message.order, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrdersResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.order = SpotLimitOrder.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            order: isSet(object.order) ? SpotLimitOrder.fromJSON(object.order) : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.order !== undefined && (obj.order = message.order ? SpotLimitOrder.toJSON(message.order) : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return StreamOrdersResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseStreamOrdersResponse();\n        message.order = (object.order !== undefined && object.order !== null)\n            ? SpotLimitOrder.fromPartial(object.order)\n            : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nfunction createBaseTradesRequest() {\n    return {\n        marketId: \"\",\n        executionSide: \"\",\n        direction: \"\",\n        subaccountId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        subaccountIds: [],\n        executionTypes: [],\n        tradeId: \"\",\n        accountAddress: \"\",\n        cid: \"\",\n    };\n}\nexport const TradesRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.executionSide !== \"\") {\n            writer.uint32(18).string(message.executionSide);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(26).string(message.direction);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(34).string(message.subaccountId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(40).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(48).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(56).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(64).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(74).string(v);\n        }\n        for (const v of message.subaccountIds) {\n            writer.uint32(82).string(v);\n        }\n        for (const v of message.executionTypes) {\n            writer.uint32(90).string(v);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(98).string(message.tradeId);\n        }\n        if (message.accountAddress !== \"\") {\n            writer.uint32(106).string(message.accountAddress);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(114).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTradesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.executionSide = reader.string();\n                    break;\n                case 3:\n                    message.direction = reader.string();\n                    break;\n                case 4:\n                    message.subaccountId = reader.string();\n                    break;\n                case 5:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 6:\n                    message.limit = reader.sint32();\n                    break;\n                case 7:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 9:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 10:\n                    message.subaccountIds.push(reader.string());\n                    break;\n                case 11:\n                    message.executionTypes.push(reader.string());\n                    break;\n                case 12:\n                    message.tradeId = reader.string();\n                    break;\n                case 13:\n                    message.accountAddress = reader.string();\n                    break;\n                case 14:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            executionSide: isSet(object.executionSide) ? String(object.executionSide) : \"\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            subaccountIds: Array.isArray(object === null || object === void 0 ? void 0 : object.subaccountIds) ? object.subaccountIds.map((e) => String(e)) : [],\n            executionTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.executionTypes) ? object.executionTypes.map((e) => String(e)) : [],\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            accountAddress: isSet(object.accountAddress) ? String(object.accountAddress) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.executionSide !== undefined && (obj.executionSide = message.executionSide);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        if (message.subaccountIds) {\n            obj.subaccountIds = message.subaccountIds.map((e) => e);\n        }\n        else {\n            obj.subaccountIds = [];\n        }\n        if (message.executionTypes) {\n            obj.executionTypes = message.executionTypes.map((e) => e);\n        }\n        else {\n            obj.executionTypes = [];\n        }\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return TradesRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const message = createBaseTradesRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.executionSide = (_b = object.executionSide) !== null && _b !== void 0 ? _b : \"\";\n        message.direction = (_c = object.direction) !== null && _c !== void 0 ? _c : \"\";\n        message.subaccountId = (_d = object.subaccountId) !== null && _d !== void 0 ? _d : \"\";\n        message.skip = (_e = object.skip) !== null && _e !== void 0 ? _e : \"0\";\n        message.limit = (_f = object.limit) !== null && _f !== void 0 ? _f : 0;\n        message.startTime = (_g = object.startTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.endTime = (_h = object.endTime) !== null && _h !== void 0 ? _h : \"0\";\n        message.marketIds = ((_j = object.marketIds) === null || _j === void 0 ? void 0 : _j.map((e) => e)) || [];\n        message.subaccountIds = ((_k = object.subaccountIds) === null || _k === void 0 ? void 0 : _k.map((e) => e)) || [];\n        message.executionTypes = ((_l = object.executionTypes) === null || _l === void 0 ? void 0 : _l.map((e) => e)) || [];\n        message.tradeId = (_m = object.tradeId) !== null && _m !== void 0 ? _m : \"\";\n        message.accountAddress = (_o = object.accountAddress) !== null && _o !== void 0 ? _o : \"\";\n        message.cid = (_p = object.cid) !== null && _p !== void 0 ? _p : \"\";\n        return message;\n    },\n};\nfunction createBaseTradesResponse() {\n    return { trades: [], paging: undefined };\n}\nexport const TradesResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.trades) {\n            SpotTrade.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTradesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.trades.push(SpotTrade.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            trades: Array.isArray(object === null || object === void 0 ? void 0 : object.trades) ? object.trades.map((e) => SpotTrade.fromJSON(e)) : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.trades) {\n            obj.trades = message.trades.map((e) => e ? SpotTrade.toJSON(e) : undefined);\n        }\n        else {\n            obj.trades = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return TradesResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseTradesResponse();\n        message.trades = ((_a = object.trades) === null || _a === void 0 ? void 0 : _a.map((e) => SpotTrade.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseSpotTrade() {\n    return {\n        orderHash: \"\",\n        subaccountId: \"\",\n        marketId: \"\",\n        tradeExecutionType: \"\",\n        tradeDirection: \"\",\n        price: undefined,\n        fee: \"\",\n        executedAt: \"0\",\n        feeRecipient: \"\",\n        tradeId: \"\",\n        executionSide: \"\",\n        cid: \"\",\n    };\n}\nexport const SpotTrade = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.orderHash !== \"\") {\n            writer.uint32(10).string(message.orderHash);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(18).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(26).string(message.marketId);\n        }\n        if (message.tradeExecutionType !== \"\") {\n            writer.uint32(34).string(message.tradeExecutionType);\n        }\n        if (message.tradeDirection !== \"\") {\n            writer.uint32(42).string(message.tradeDirection);\n        }\n        if (message.price !== undefined) {\n            PriceLevel.encode(message.price, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.fee !== \"\") {\n            writer.uint32(58).string(message.fee);\n        }\n        if (message.executedAt !== \"0\") {\n            writer.uint32(64).sint64(message.executedAt);\n        }\n        if (message.feeRecipient !== \"\") {\n            writer.uint32(74).string(message.feeRecipient);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(82).string(message.tradeId);\n        }\n        if (message.executionSide !== \"\") {\n            writer.uint32(90).string(message.executionSide);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(98).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSpotTrade();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderHash = reader.string();\n                    break;\n                case 2:\n                    message.subaccountId = reader.string();\n                    break;\n                case 3:\n                    message.marketId = reader.string();\n                    break;\n                case 4:\n                    message.tradeExecutionType = reader.string();\n                    break;\n                case 5:\n                    message.tradeDirection = reader.string();\n                    break;\n                case 6:\n                    message.price = PriceLevel.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.fee = reader.string();\n                    break;\n                case 8:\n                    message.executedAt = longToString(reader.sint64());\n                    break;\n                case 9:\n                    message.feeRecipient = reader.string();\n                    break;\n                case 10:\n                    message.tradeId = reader.string();\n                    break;\n                case 11:\n                    message.executionSide = reader.string();\n                    break;\n                case 12:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orderHash: isSet(object.orderHash) ? String(object.orderHash) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            tradeExecutionType: isSet(object.tradeExecutionType) ? String(object.tradeExecutionType) : \"\",\n            tradeDirection: isSet(object.tradeDirection) ? String(object.tradeDirection) : \"\",\n            price: isSet(object.price) ? PriceLevel.fromJSON(object.price) : undefined,\n            fee: isSet(object.fee) ? String(object.fee) : \"\",\n            executedAt: isSet(object.executedAt) ? String(object.executedAt) : \"0\",\n            feeRecipient: isSet(object.feeRecipient) ? String(object.feeRecipient) : \"\",\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            executionSide: isSet(object.executionSide) ? String(object.executionSide) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.orderHash !== undefined && (obj.orderHash = message.orderHash);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.tradeExecutionType !== undefined && (obj.tradeExecutionType = message.tradeExecutionType);\n        message.tradeDirection !== undefined && (obj.tradeDirection = message.tradeDirection);\n        message.price !== undefined && (obj.price = message.price ? PriceLevel.toJSON(message.price) : undefined);\n        message.fee !== undefined && (obj.fee = message.fee);\n        message.executedAt !== undefined && (obj.executedAt = message.executedAt);\n        message.feeRecipient !== undefined && (obj.feeRecipient = message.feeRecipient);\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.executionSide !== undefined && (obj.executionSide = message.executionSide);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return SpotTrade.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n        const message = createBaseSpotTrade();\n        message.orderHash = (_a = object.orderHash) !== null && _a !== void 0 ? _a : \"\";\n        message.subaccountId = (_b = object.subaccountId) !== null && _b !== void 0 ? _b : \"\";\n        message.marketId = (_c = object.marketId) !== null && _c !== void 0 ? _c : \"\";\n        message.tradeExecutionType = (_d = object.tradeExecutionType) !== null && _d !== void 0 ? _d : \"\";\n        message.tradeDirection = (_e = object.tradeDirection) !== null && _e !== void 0 ? _e : \"\";\n        message.price = (object.price !== undefined && object.price !== null)\n            ? PriceLevel.fromPartial(object.price)\n            : undefined;\n        message.fee = (_f = object.fee) !== null && _f !== void 0 ? _f : \"\";\n        message.executedAt = (_g = object.executedAt) !== null && _g !== void 0 ? _g : \"0\";\n        message.feeRecipient = (_h = object.feeRecipient) !== null && _h !== void 0 ? _h : \"\";\n        message.tradeId = (_j = object.tradeId) !== null && _j !== void 0 ? _j : \"\";\n        message.executionSide = (_k = object.executionSide) !== null && _k !== void 0 ? _k : \"\";\n        message.cid = (_l = object.cid) !== null && _l !== void 0 ? _l : \"\";\n        return message;\n    },\n};\nfunction createBaseStreamTradesRequest() {\n    return {\n        marketId: \"\",\n        executionSide: \"\",\n        direction: \"\",\n        subaccountId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        subaccountIds: [],\n        executionTypes: [],\n        tradeId: \"\",\n        accountAddress: \"\",\n        cid: \"\",\n    };\n}\nexport const StreamTradesRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.executionSide !== \"\") {\n            writer.uint32(18).string(message.executionSide);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(26).string(message.direction);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(34).string(message.subaccountId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(40).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(48).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(56).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(64).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(74).string(v);\n        }\n        for (const v of message.subaccountIds) {\n            writer.uint32(82).string(v);\n        }\n        for (const v of message.executionTypes) {\n            writer.uint32(90).string(v);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(98).string(message.tradeId);\n        }\n        if (message.accountAddress !== \"\") {\n            writer.uint32(106).string(message.accountAddress);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(114).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamTradesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.executionSide = reader.string();\n                    break;\n                case 3:\n                    message.direction = reader.string();\n                    break;\n                case 4:\n                    message.subaccountId = reader.string();\n                    break;\n                case 5:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 6:\n                    message.limit = reader.sint32();\n                    break;\n                case 7:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 9:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 10:\n                    message.subaccountIds.push(reader.string());\n                    break;\n                case 11:\n                    message.executionTypes.push(reader.string());\n                    break;\n                case 12:\n                    message.tradeId = reader.string();\n                    break;\n                case 13:\n                    message.accountAddress = reader.string();\n                    break;\n                case 14:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            executionSide: isSet(object.executionSide) ? String(object.executionSide) : \"\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            subaccountIds: Array.isArray(object === null || object === void 0 ? void 0 : object.subaccountIds) ? object.subaccountIds.map((e) => String(e)) : [],\n            executionTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.executionTypes) ? object.executionTypes.map((e) => String(e)) : [],\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            accountAddress: isSet(object.accountAddress) ? String(object.accountAddress) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.executionSide !== undefined && (obj.executionSide = message.executionSide);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        if (message.subaccountIds) {\n            obj.subaccountIds = message.subaccountIds.map((e) => e);\n        }\n        else {\n            obj.subaccountIds = [];\n        }\n        if (message.executionTypes) {\n            obj.executionTypes = message.executionTypes.map((e) => e);\n        }\n        else {\n            obj.executionTypes = [];\n        }\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return StreamTradesRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const message = createBaseStreamTradesRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.executionSide = (_b = object.executionSide) !== null && _b !== void 0 ? _b : \"\";\n        message.direction = (_c = object.direction) !== null && _c !== void 0 ? _c : \"\";\n        message.subaccountId = (_d = object.subaccountId) !== null && _d !== void 0 ? _d : \"\";\n        message.skip = (_e = object.skip) !== null && _e !== void 0 ? _e : \"0\";\n        message.limit = (_f = object.limit) !== null && _f !== void 0 ? _f : 0;\n        message.startTime = (_g = object.startTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.endTime = (_h = object.endTime) !== null && _h !== void 0 ? _h : \"0\";\n        message.marketIds = ((_j = object.marketIds) === null || _j === void 0 ? void 0 : _j.map((e) => e)) || [];\n        message.subaccountIds = ((_k = object.subaccountIds) === null || _k === void 0 ? void 0 : _k.map((e) => e)) || [];\n        message.executionTypes = ((_l = object.executionTypes) === null || _l === void 0 ? void 0 : _l.map((e) => e)) || [];\n        message.tradeId = (_m = object.tradeId) !== null && _m !== void 0 ? _m : \"\";\n        message.accountAddress = (_o = object.accountAddress) !== null && _o !== void 0 ? _o : \"\";\n        message.cid = (_p = object.cid) !== null && _p !== void 0 ? _p : \"\";\n        return message;\n    },\n};\nfunction createBaseStreamTradesResponse() {\n    return { trade: undefined, operationType: \"\", timestamp: \"0\" };\n}\nexport const StreamTradesResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.trade !== undefined) {\n            SpotTrade.encode(message.trade, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamTradesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.trade = SpotTrade.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            trade: isSet(object.trade) ? SpotTrade.fromJSON(object.trade) : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.trade !== undefined && (obj.trade = message.trade ? SpotTrade.toJSON(message.trade) : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return StreamTradesResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseStreamTradesResponse();\n        message.trade = (object.trade !== undefined && object.trade !== null)\n            ? SpotTrade.fromPartial(object.trade)\n            : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nfunction createBaseTradesV2Request() {\n    return {\n        marketId: \"\",\n        executionSide: \"\",\n        direction: \"\",\n        subaccountId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        subaccountIds: [],\n        executionTypes: [],\n        tradeId: \"\",\n        accountAddress: \"\",\n        cid: \"\",\n    };\n}\nexport const TradesV2Request = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.executionSide !== \"\") {\n            writer.uint32(18).string(message.executionSide);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(26).string(message.direction);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(34).string(message.subaccountId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(40).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(48).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(56).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(64).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(74).string(v);\n        }\n        for (const v of message.subaccountIds) {\n            writer.uint32(82).string(v);\n        }\n        for (const v of message.executionTypes) {\n            writer.uint32(90).string(v);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(98).string(message.tradeId);\n        }\n        if (message.accountAddress !== \"\") {\n            writer.uint32(106).string(message.accountAddress);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(114).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTradesV2Request();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.executionSide = reader.string();\n                    break;\n                case 3:\n                    message.direction = reader.string();\n                    break;\n                case 4:\n                    message.subaccountId = reader.string();\n                    break;\n                case 5:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 6:\n                    message.limit = reader.sint32();\n                    break;\n                case 7:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 9:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 10:\n                    message.subaccountIds.push(reader.string());\n                    break;\n                case 11:\n                    message.executionTypes.push(reader.string());\n                    break;\n                case 12:\n                    message.tradeId = reader.string();\n                    break;\n                case 13:\n                    message.accountAddress = reader.string();\n                    break;\n                case 14:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            executionSide: isSet(object.executionSide) ? String(object.executionSide) : \"\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            subaccountIds: Array.isArray(object === null || object === void 0 ? void 0 : object.subaccountIds) ? object.subaccountIds.map((e) => String(e)) : [],\n            executionTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.executionTypes) ? object.executionTypes.map((e) => String(e)) : [],\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            accountAddress: isSet(object.accountAddress) ? String(object.accountAddress) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.executionSide !== undefined && (obj.executionSide = message.executionSide);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        if (message.subaccountIds) {\n            obj.subaccountIds = message.subaccountIds.map((e) => e);\n        }\n        else {\n            obj.subaccountIds = [];\n        }\n        if (message.executionTypes) {\n            obj.executionTypes = message.executionTypes.map((e) => e);\n        }\n        else {\n            obj.executionTypes = [];\n        }\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return TradesV2Request.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const message = createBaseTradesV2Request();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.executionSide = (_b = object.executionSide) !== null && _b !== void 0 ? _b : \"\";\n        message.direction = (_c = object.direction) !== null && _c !== void 0 ? _c : \"\";\n        message.subaccountId = (_d = object.subaccountId) !== null && _d !== void 0 ? _d : \"\";\n        message.skip = (_e = object.skip) !== null && _e !== void 0 ? _e : \"0\";\n        message.limit = (_f = object.limit) !== null && _f !== void 0 ? _f : 0;\n        message.startTime = (_g = object.startTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.endTime = (_h = object.endTime) !== null && _h !== void 0 ? _h : \"0\";\n        message.marketIds = ((_j = object.marketIds) === null || _j === void 0 ? void 0 : _j.map((e) => e)) || [];\n        message.subaccountIds = ((_k = object.subaccountIds) === null || _k === void 0 ? void 0 : _k.map((e) => e)) || [];\n        message.executionTypes = ((_l = object.executionTypes) === null || _l === void 0 ? void 0 : _l.map((e) => e)) || [];\n        message.tradeId = (_m = object.tradeId) !== null && _m !== void 0 ? _m : \"\";\n        message.accountAddress = (_o = object.accountAddress) !== null && _o !== void 0 ? _o : \"\";\n        message.cid = (_p = object.cid) !== null && _p !== void 0 ? _p : \"\";\n        return message;\n    },\n};\nfunction createBaseTradesV2Response() {\n    return { trades: [], paging: undefined };\n}\nexport const TradesV2Response = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.trades) {\n            SpotTrade.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTradesV2Response();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.trades.push(SpotTrade.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            trades: Array.isArray(object === null || object === void 0 ? void 0 : object.trades) ? object.trades.map((e) => SpotTrade.fromJSON(e)) : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.trades) {\n            obj.trades = message.trades.map((e) => e ? SpotTrade.toJSON(e) : undefined);\n        }\n        else {\n            obj.trades = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return TradesV2Response.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseTradesV2Response();\n        message.trades = ((_a = object.trades) === null || _a === void 0 ? void 0 : _a.map((e) => SpotTrade.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseStreamTradesV2Request() {\n    return {\n        marketId: \"\",\n        executionSide: \"\",\n        direction: \"\",\n        subaccountId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        subaccountIds: [],\n        executionTypes: [],\n        tradeId: \"\",\n        accountAddress: \"\",\n        cid: \"\",\n    };\n}\nexport const StreamTradesV2Request = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.executionSide !== \"\") {\n            writer.uint32(18).string(message.executionSide);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(26).string(message.direction);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(34).string(message.subaccountId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(40).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(48).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(56).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(64).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(74).string(v);\n        }\n        for (const v of message.subaccountIds) {\n            writer.uint32(82).string(v);\n        }\n        for (const v of message.executionTypes) {\n            writer.uint32(90).string(v);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(98).string(message.tradeId);\n        }\n        if (message.accountAddress !== \"\") {\n            writer.uint32(106).string(message.accountAddress);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(114).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamTradesV2Request();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.executionSide = reader.string();\n                    break;\n                case 3:\n                    message.direction = reader.string();\n                    break;\n                case 4:\n                    message.subaccountId = reader.string();\n                    break;\n                case 5:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 6:\n                    message.limit = reader.sint32();\n                    break;\n                case 7:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 9:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 10:\n                    message.subaccountIds.push(reader.string());\n                    break;\n                case 11:\n                    message.executionTypes.push(reader.string());\n                    break;\n                case 12:\n                    message.tradeId = reader.string();\n                    break;\n                case 13:\n                    message.accountAddress = reader.string();\n                    break;\n                case 14:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            executionSide: isSet(object.executionSide) ? String(object.executionSide) : \"\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            subaccountIds: Array.isArray(object === null || object === void 0 ? void 0 : object.subaccountIds) ? object.subaccountIds.map((e) => String(e)) : [],\n            executionTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.executionTypes) ? object.executionTypes.map((e) => String(e)) : [],\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            accountAddress: isSet(object.accountAddress) ? String(object.accountAddress) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.executionSide !== undefined && (obj.executionSide = message.executionSide);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        if (message.subaccountIds) {\n            obj.subaccountIds = message.subaccountIds.map((e) => e);\n        }\n        else {\n            obj.subaccountIds = [];\n        }\n        if (message.executionTypes) {\n            obj.executionTypes = message.executionTypes.map((e) => e);\n        }\n        else {\n            obj.executionTypes = [];\n        }\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return StreamTradesV2Request.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const message = createBaseStreamTradesV2Request();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.executionSide = (_b = object.executionSide) !== null && _b !== void 0 ? _b : \"\";\n        message.direction = (_c = object.direction) !== null && _c !== void 0 ? _c : \"\";\n        message.subaccountId = (_d = object.subaccountId) !== null && _d !== void 0 ? _d : \"\";\n        message.skip = (_e = object.skip) !== null && _e !== void 0 ? _e : \"0\";\n        message.limit = (_f = object.limit) !== null && _f !== void 0 ? _f : 0;\n        message.startTime = (_g = object.startTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.endTime = (_h = object.endTime) !== null && _h !== void 0 ? _h : \"0\";\n        message.marketIds = ((_j = object.marketIds) === null || _j === void 0 ? void 0 : _j.map((e) => e)) || [];\n        message.subaccountIds = ((_k = object.subaccountIds) === null || _k === void 0 ? void 0 : _k.map((e) => e)) || [];\n        message.executionTypes = ((_l = object.executionTypes) === null || _l === void 0 ? void 0 : _l.map((e) => e)) || [];\n        message.tradeId = (_m = object.tradeId) !== null && _m !== void 0 ? _m : \"\";\n        message.accountAddress = (_o = object.accountAddress) !== null && _o !== void 0 ? _o : \"\";\n        message.cid = (_p = object.cid) !== null && _p !== void 0 ? _p : \"\";\n        return message;\n    },\n};\nfunction createBaseStreamTradesV2Response() {\n    return { trade: undefined, operationType: \"\", timestamp: \"0\" };\n}\nexport const StreamTradesV2Response = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.trade !== undefined) {\n            SpotTrade.encode(message.trade, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamTradesV2Response();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.trade = SpotTrade.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            trade: isSet(object.trade) ? SpotTrade.fromJSON(object.trade) : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.trade !== undefined && (obj.trade = message.trade ? SpotTrade.toJSON(message.trade) : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return StreamTradesV2Response.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseStreamTradesV2Response();\n        message.trade = (object.trade !== undefined && object.trade !== null)\n            ? SpotTrade.fromPartial(object.trade)\n            : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nfunction createBaseSubaccountOrdersListRequest() {\n    return { subaccountId: \"\", marketId: \"\", skip: \"0\", limit: 0 };\n}\nexport const SubaccountOrdersListRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.subaccountId !== \"\") {\n            writer.uint32(10).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(24).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(32).sint32(message.limit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSubaccountOrdersListRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subaccountId = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 4:\n                    message.limit = reader.sint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        return obj;\n    },\n    create(base) {\n        return SubaccountOrdersListRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBaseSubaccountOrdersListRequest();\n        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.skip = (_c = object.skip) !== null && _c !== void 0 ? _c : \"0\";\n        message.limit = (_d = object.limit) !== null && _d !== void 0 ? _d : 0;\n        return message;\n    },\n};\nfunction createBaseSubaccountOrdersListResponse() {\n    return { orders: [], paging: undefined };\n}\nexport const SubaccountOrdersListResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.orders) {\n            SpotLimitOrder.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSubaccountOrdersListResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orders.push(SpotLimitOrder.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orders: Array.isArray(object === null || object === void 0 ? void 0 : object.orders) ? object.orders.map((e) => SpotLimitOrder.fromJSON(e)) : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.orders) {\n            obj.orders = message.orders.map((e) => e ? SpotLimitOrder.toJSON(e) : undefined);\n        }\n        else {\n            obj.orders = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return SubaccountOrdersListResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseSubaccountOrdersListResponse();\n        message.orders = ((_a = object.orders) === null || _a === void 0 ? void 0 : _a.map((e) => SpotLimitOrder.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseSubaccountTradesListRequest() {\n    return { subaccountId: \"\", marketId: \"\", executionType: \"\", direction: \"\", skip: \"0\", limit: 0 };\n}\nexport const SubaccountTradesListRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.subaccountId !== \"\") {\n            writer.uint32(10).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.executionType !== \"\") {\n            writer.uint32(26).string(message.executionType);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(34).string(message.direction);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(40).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(48).sint32(message.limit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSubaccountTradesListRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subaccountId = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.executionType = reader.string();\n                    break;\n                case 4:\n                    message.direction = reader.string();\n                    break;\n                case 5:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 6:\n                    message.limit = reader.sint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            executionType: isSet(object.executionType) ? String(object.executionType) : \"\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.executionType !== undefined && (obj.executionType = message.executionType);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        return obj;\n    },\n    create(base) {\n        return SubaccountTradesListRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f;\n        const message = createBaseSubaccountTradesListRequest();\n        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.executionType = (_c = object.executionType) !== null && _c !== void 0 ? _c : \"\";\n        message.direction = (_d = object.direction) !== null && _d !== void 0 ? _d : \"\";\n        message.skip = (_e = object.skip) !== null && _e !== void 0 ? _e : \"0\";\n        message.limit = (_f = object.limit) !== null && _f !== void 0 ? _f : 0;\n        return message;\n    },\n};\nfunction createBaseSubaccountTradesListResponse() {\n    return { trades: [] };\n}\nexport const SubaccountTradesListResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.trades) {\n            SpotTrade.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSubaccountTradesListResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.trades.push(SpotTrade.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { trades: Array.isArray(object === null || object === void 0 ? void 0 : object.trades) ? object.trades.map((e) => SpotTrade.fromJSON(e)) : [] };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.trades) {\n            obj.trades = message.trades.map((e) => e ? SpotTrade.toJSON(e) : undefined);\n        }\n        else {\n            obj.trades = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return SubaccountTradesListResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseSubaccountTradesListResponse();\n        message.trades = ((_a = object.trades) === null || _a === void 0 ? void 0 : _a.map((e) => SpotTrade.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseOrdersHistoryRequest() {\n    return {\n        subaccountId: \"\",\n        marketId: \"\",\n        skip: \"0\",\n        limit: 0,\n        orderTypes: [],\n        direction: \"\",\n        startTime: \"0\",\n        endTime: \"0\",\n        state: \"\",\n        executionTypes: [],\n        marketIds: [],\n        tradeId: \"\",\n        activeMarketsOnly: false,\n        cid: \"\",\n    };\n}\nexport const OrdersHistoryRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.subaccountId !== \"\") {\n            writer.uint32(10).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(24).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(32).sint32(message.limit);\n        }\n        for (const v of message.orderTypes) {\n            writer.uint32(42).string(v);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(50).string(message.direction);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(56).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(64).sint64(message.endTime);\n        }\n        if (message.state !== \"\") {\n            writer.uint32(74).string(message.state);\n        }\n        for (const v of message.executionTypes) {\n            writer.uint32(82).string(v);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(90).string(v);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(98).string(message.tradeId);\n        }\n        if (message.activeMarketsOnly === true) {\n            writer.uint32(104).bool(message.activeMarketsOnly);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(114).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrdersHistoryRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subaccountId = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 4:\n                    message.limit = reader.sint32();\n                    break;\n                case 5:\n                    message.orderTypes.push(reader.string());\n                    break;\n                case 6:\n                    message.direction = reader.string();\n                    break;\n                case 7:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 9:\n                    message.state = reader.string();\n                    break;\n                case 10:\n                    message.executionTypes.push(reader.string());\n                    break;\n                case 11:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 12:\n                    message.tradeId = reader.string();\n                    break;\n                case 13:\n                    message.activeMarketsOnly = reader.bool();\n                    break;\n                case 14:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            orderTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.orderTypes) ? object.orderTypes.map((e) => String(e)) : [],\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            state: isSet(object.state) ? String(object.state) : \"\",\n            executionTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.executionTypes) ? object.executionTypes.map((e) => String(e)) : [],\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            activeMarketsOnly: isSet(object.activeMarketsOnly) ? Boolean(object.activeMarketsOnly) : false,\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        if (message.orderTypes) {\n            obj.orderTypes = message.orderTypes.map((e) => e);\n        }\n        else {\n            obj.orderTypes = [];\n        }\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.state !== undefined && (obj.state = message.state);\n        if (message.executionTypes) {\n            obj.executionTypes = message.executionTypes.map((e) => e);\n        }\n        else {\n            obj.executionTypes = [];\n        }\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.activeMarketsOnly !== undefined && (obj.activeMarketsOnly = message.activeMarketsOnly);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return OrdersHistoryRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const message = createBaseOrdersHistoryRequest();\n        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.skip = (_c = object.skip) !== null && _c !== void 0 ? _c : \"0\";\n        message.limit = (_d = object.limit) !== null && _d !== void 0 ? _d : 0;\n        message.orderTypes = ((_e = object.orderTypes) === null || _e === void 0 ? void 0 : _e.map((e) => e)) || [];\n        message.direction = (_f = object.direction) !== null && _f !== void 0 ? _f : \"\";\n        message.startTime = (_g = object.startTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.endTime = (_h = object.endTime) !== null && _h !== void 0 ? _h : \"0\";\n        message.state = (_j = object.state) !== null && _j !== void 0 ? _j : \"\";\n        message.executionTypes = ((_k = object.executionTypes) === null || _k === void 0 ? void 0 : _k.map((e) => e)) || [];\n        message.marketIds = ((_l = object.marketIds) === null || _l === void 0 ? void 0 : _l.map((e) => e)) || [];\n        message.tradeId = (_m = object.tradeId) !== null && _m !== void 0 ? _m : \"\";\n        message.activeMarketsOnly = (_o = object.activeMarketsOnly) !== null && _o !== void 0 ? _o : false;\n        message.cid = (_p = object.cid) !== null && _p !== void 0 ? _p : \"\";\n        return message;\n    },\n};\nfunction createBaseOrdersHistoryResponse() {\n    return { orders: [], paging: undefined };\n}\nexport const OrdersHistoryResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.orders) {\n            SpotOrderHistory.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrdersHistoryResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orders.push(SpotOrderHistory.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orders: Array.isArray(object === null || object === void 0 ? void 0 : object.orders) ? object.orders.map((e) => SpotOrderHistory.fromJSON(e)) : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.orders) {\n            obj.orders = message.orders.map((e) => e ? SpotOrderHistory.toJSON(e) : undefined);\n        }\n        else {\n            obj.orders = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return OrdersHistoryResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseOrdersHistoryResponse();\n        message.orders = ((_a = object.orders) === null || _a === void 0 ? void 0 : _a.map((e) => SpotOrderHistory.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseSpotOrderHistory() {\n    return {\n        orderHash: \"\",\n        marketId: \"\",\n        isActive: false,\n        subaccountId: \"\",\n        executionType: \"\",\n        orderType: \"\",\n        price: \"\",\n        triggerPrice: \"\",\n        quantity: \"\",\n        filledQuantity: \"\",\n        state: \"\",\n        createdAt: \"0\",\n        updatedAt: \"0\",\n        direction: \"\",\n        txHash: \"\",\n        cid: \"\",\n    };\n}\nexport const SpotOrderHistory = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.orderHash !== \"\") {\n            writer.uint32(10).string(message.orderHash);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.isActive === true) {\n            writer.uint32(24).bool(message.isActive);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(34).string(message.subaccountId);\n        }\n        if (message.executionType !== \"\") {\n            writer.uint32(42).string(message.executionType);\n        }\n        if (message.orderType !== \"\") {\n            writer.uint32(50).string(message.orderType);\n        }\n        if (message.price !== \"\") {\n            writer.uint32(58).string(message.price);\n        }\n        if (message.triggerPrice !== \"\") {\n            writer.uint32(66).string(message.triggerPrice);\n        }\n        if (message.quantity !== \"\") {\n            writer.uint32(74).string(message.quantity);\n        }\n        if (message.filledQuantity !== \"\") {\n            writer.uint32(82).string(message.filledQuantity);\n        }\n        if (message.state !== \"\") {\n            writer.uint32(90).string(message.state);\n        }\n        if (message.createdAt !== \"0\") {\n            writer.uint32(96).sint64(message.createdAt);\n        }\n        if (message.updatedAt !== \"0\") {\n            writer.uint32(104).sint64(message.updatedAt);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(114).string(message.direction);\n        }\n        if (message.txHash !== \"\") {\n            writer.uint32(122).string(message.txHash);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(130).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSpotOrderHistory();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderHash = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.isActive = reader.bool();\n                    break;\n                case 4:\n                    message.subaccountId = reader.string();\n                    break;\n                case 5:\n                    message.executionType = reader.string();\n                    break;\n                case 6:\n                    message.orderType = reader.string();\n                    break;\n                case 7:\n                    message.price = reader.string();\n                    break;\n                case 8:\n                    message.triggerPrice = reader.string();\n                    break;\n                case 9:\n                    message.quantity = reader.string();\n                    break;\n                case 10:\n                    message.filledQuantity = reader.string();\n                    break;\n                case 11:\n                    message.state = reader.string();\n                    break;\n                case 12:\n                    message.createdAt = longToString(reader.sint64());\n                    break;\n                case 13:\n                    message.updatedAt = longToString(reader.sint64());\n                    break;\n                case 14:\n                    message.direction = reader.string();\n                    break;\n                case 15:\n                    message.txHash = reader.string();\n                    break;\n                case 16:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orderHash: isSet(object.orderHash) ? String(object.orderHash) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            isActive: isSet(object.isActive) ? Boolean(object.isActive) : false,\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            executionType: isSet(object.executionType) ? String(object.executionType) : \"\",\n            orderType: isSet(object.orderType) ? String(object.orderType) : \"\",\n            price: isSet(object.price) ? String(object.price) : \"\",\n            triggerPrice: isSet(object.triggerPrice) ? String(object.triggerPrice) : \"\",\n            quantity: isSet(object.quantity) ? String(object.quantity) : \"\",\n            filledQuantity: isSet(object.filledQuantity) ? String(object.filledQuantity) : \"\",\n            state: isSet(object.state) ? String(object.state) : \"\",\n            createdAt: isSet(object.createdAt) ? String(object.createdAt) : \"0\",\n            updatedAt: isSet(object.updatedAt) ? String(object.updatedAt) : \"0\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            txHash: isSet(object.txHash) ? String(object.txHash) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.orderHash !== undefined && (obj.orderHash = message.orderHash);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.isActive !== undefined && (obj.isActive = message.isActive);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.executionType !== undefined && (obj.executionType = message.executionType);\n        message.orderType !== undefined && (obj.orderType = message.orderType);\n        message.price !== undefined && (obj.price = message.price);\n        message.triggerPrice !== undefined && (obj.triggerPrice = message.triggerPrice);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.filledQuantity !== undefined && (obj.filledQuantity = message.filledQuantity);\n        message.state !== undefined && (obj.state = message.state);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        message.updatedAt !== undefined && (obj.updatedAt = message.updatedAt);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.txHash !== undefined && (obj.txHash = message.txHash);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return SpotOrderHistory.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n        const message = createBaseSpotOrderHistory();\n        message.orderHash = (_a = object.orderHash) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.isActive = (_c = object.isActive) !== null && _c !== void 0 ? _c : false;\n        message.subaccountId = (_d = object.subaccountId) !== null && _d !== void 0 ? _d : \"\";\n        message.executionType = (_e = object.executionType) !== null && _e !== void 0 ? _e : \"\";\n        message.orderType = (_f = object.orderType) !== null && _f !== void 0 ? _f : \"\";\n        message.price = (_g = object.price) !== null && _g !== void 0 ? _g : \"\";\n        message.triggerPrice = (_h = object.triggerPrice) !== null && _h !== void 0 ? _h : \"\";\n        message.quantity = (_j = object.quantity) !== null && _j !== void 0 ? _j : \"\";\n        message.filledQuantity = (_k = object.filledQuantity) !== null && _k !== void 0 ? _k : \"\";\n        message.state = (_l = object.state) !== null && _l !== void 0 ? _l : \"\";\n        message.createdAt = (_m = object.createdAt) !== null && _m !== void 0 ? _m : \"0\";\n        message.updatedAt = (_o = object.updatedAt) !== null && _o !== void 0 ? _o : \"0\";\n        message.direction = (_p = object.direction) !== null && _p !== void 0 ? _p : \"\";\n        message.txHash = (_q = object.txHash) !== null && _q !== void 0 ? _q : \"\";\n        message.cid = (_r = object.cid) !== null && _r !== void 0 ? _r : \"\";\n        return message;\n    },\n};\nfunction createBaseStreamOrdersHistoryRequest() {\n    return { subaccountId: \"\", marketId: \"\", orderTypes: [], direction: \"\", state: \"\", executionTypes: [] };\n}\nexport const StreamOrdersHistoryRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.subaccountId !== \"\") {\n            writer.uint32(10).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        for (const v of message.orderTypes) {\n            writer.uint32(26).string(v);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(34).string(message.direction);\n        }\n        if (message.state !== \"\") {\n            writer.uint32(42).string(message.state);\n        }\n        for (const v of message.executionTypes) {\n            writer.uint32(50).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrdersHistoryRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subaccountId = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.orderTypes.push(reader.string());\n                    break;\n                case 4:\n                    message.direction = reader.string();\n                    break;\n                case 5:\n                    message.state = reader.string();\n                    break;\n                case 6:\n                    message.executionTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            orderTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.orderTypes) ? object.orderTypes.map((e) => String(e)) : [],\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            state: isSet(object.state) ? String(object.state) : \"\",\n            executionTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.executionTypes) ? object.executionTypes.map((e) => String(e)) : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        if (message.orderTypes) {\n            obj.orderTypes = message.orderTypes.map((e) => e);\n        }\n        else {\n            obj.orderTypes = [];\n        }\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.state !== undefined && (obj.state = message.state);\n        if (message.executionTypes) {\n            obj.executionTypes = message.executionTypes.map((e) => e);\n        }\n        else {\n            obj.executionTypes = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return StreamOrdersHistoryRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f;\n        const message = createBaseStreamOrdersHistoryRequest();\n        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.orderTypes = ((_c = object.orderTypes) === null || _c === void 0 ? void 0 : _c.map((e) => e)) || [];\n        message.direction = (_d = object.direction) !== null && _d !== void 0 ? _d : \"\";\n        message.state = (_e = object.state) !== null && _e !== void 0 ? _e : \"\";\n        message.executionTypes = ((_f = object.executionTypes) === null || _f === void 0 ? void 0 : _f.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseStreamOrdersHistoryResponse() {\n    return { order: undefined, operationType: \"\", timestamp: \"0\" };\n}\nexport const StreamOrdersHistoryResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.order !== undefined) {\n            SpotOrderHistory.encode(message.order, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrdersHistoryResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.order = SpotOrderHistory.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            order: isSet(object.order) ? SpotOrderHistory.fromJSON(object.order) : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.order !== undefined && (obj.order = message.order ? SpotOrderHistory.toJSON(message.order) : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return StreamOrdersHistoryResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseStreamOrdersHistoryResponse();\n        message.order = (object.order !== undefined && object.order !== null)\n            ? SpotOrderHistory.fromPartial(object.order)\n            : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nfunction createBaseAtomicSwapHistoryRequest() {\n    return { address: \"\", contractAddress: \"\", skip: 0, limit: 0, fromNumber: 0, toNumber: 0 };\n}\nexport const AtomicSwapHistoryRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.address !== \"\") {\n            writer.uint32(10).string(message.address);\n        }\n        if (message.contractAddress !== \"\") {\n            writer.uint32(18).string(message.contractAddress);\n        }\n        if (message.skip !== 0) {\n            writer.uint32(24).sint32(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(32).sint32(message.limit);\n        }\n        if (message.fromNumber !== 0) {\n            writer.uint32(40).sint32(message.fromNumber);\n        }\n        if (message.toNumber !== 0) {\n            writer.uint32(48).sint32(message.toNumber);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAtomicSwapHistoryRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.address = reader.string();\n                    break;\n                case 2:\n                    message.contractAddress = reader.string();\n                    break;\n                case 3:\n                    message.skip = reader.sint32();\n                    break;\n                case 4:\n                    message.limit = reader.sint32();\n                    break;\n                case 5:\n                    message.fromNumber = reader.sint32();\n                    break;\n                case 6:\n                    message.toNumber = reader.sint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            address: isSet(object.address) ? String(object.address) : \"\",\n            contractAddress: isSet(object.contractAddress) ? String(object.contractAddress) : \"\",\n            skip: isSet(object.skip) ? Number(object.skip) : 0,\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            fromNumber: isSet(object.fromNumber) ? Number(object.fromNumber) : 0,\n            toNumber: isSet(object.toNumber) ? Number(object.toNumber) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.address !== undefined && (obj.address = message.address);\n        message.contractAddress !== undefined && (obj.contractAddress = message.contractAddress);\n        message.skip !== undefined && (obj.skip = Math.round(message.skip));\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.fromNumber !== undefined && (obj.fromNumber = Math.round(message.fromNumber));\n        message.toNumber !== undefined && (obj.toNumber = Math.round(message.toNumber));\n        return obj;\n    },\n    create(base) {\n        return AtomicSwapHistoryRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f;\n        const message = createBaseAtomicSwapHistoryRequest();\n        message.address = (_a = object.address) !== null && _a !== void 0 ? _a : \"\";\n        message.contractAddress = (_b = object.contractAddress) !== null && _b !== void 0 ? _b : \"\";\n        message.skip = (_c = object.skip) !== null && _c !== void 0 ? _c : 0;\n        message.limit = (_d = object.limit) !== null && _d !== void 0 ? _d : 0;\n        message.fromNumber = (_e = object.fromNumber) !== null && _e !== void 0 ? _e : 0;\n        message.toNumber = (_f = object.toNumber) !== null && _f !== void 0 ? _f : 0;\n        return message;\n    },\n};\nfunction createBaseAtomicSwapHistoryResponse() {\n    return { paging: undefined, data: [] };\n}\nexport const AtomicSwapHistoryResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.data) {\n            AtomicSwap.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAtomicSwapHistoryResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.data.push(AtomicSwap.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n            data: Array.isArray(object === null || object === void 0 ? void 0 : object.data) ? object.data.map((e) => AtomicSwap.fromJSON(e)) : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        if (message.data) {\n            obj.data = message.data.map((e) => e ? AtomicSwap.toJSON(e) : undefined);\n        }\n        else {\n            obj.data = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return AtomicSwapHistoryResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseAtomicSwapHistoryResponse();\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        message.data = ((_a = object.data) === null || _a === void 0 ? void 0 : _a.map((e) => AtomicSwap.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseAtomicSwap() {\n    return {\n        sender: \"\",\n        route: \"\",\n        sourceCoin: undefined,\n        destCoin: undefined,\n        fees: [],\n        contractAddress: \"\",\n        indexBySender: 0,\n        indexBySenderContract: 0,\n        txHash: \"\",\n        executedAt: \"0\",\n        refundAmount: \"\",\n    };\n}\nexport const AtomicSwap = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.sender !== \"\") {\n            writer.uint32(10).string(message.sender);\n        }\n        if (message.route !== \"\") {\n            writer.uint32(18).string(message.route);\n        }\n        if (message.sourceCoin !== undefined) {\n            Coin.encode(message.sourceCoin, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.destCoin !== undefined) {\n            Coin.encode(message.destCoin, writer.uint32(34).fork()).ldelim();\n        }\n        for (const v of message.fees) {\n            Coin.encode(v, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.contractAddress !== \"\") {\n            writer.uint32(50).string(message.contractAddress);\n        }\n        if (message.indexBySender !== 0) {\n            writer.uint32(56).sint32(message.indexBySender);\n        }\n        if (message.indexBySenderContract !== 0) {\n            writer.uint32(64).sint32(message.indexBySenderContract);\n        }\n        if (message.txHash !== \"\") {\n            writer.uint32(74).string(message.txHash);\n        }\n        if (message.executedAt !== \"0\") {\n            writer.uint32(80).sint64(message.executedAt);\n        }\n        if (message.refundAmount !== \"\") {\n            writer.uint32(90).string(message.refundAmount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseAtomicSwap();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.sender = reader.string();\n                    break;\n                case 2:\n                    message.route = reader.string();\n                    break;\n                case 3:\n                    message.sourceCoin = Coin.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    message.destCoin = Coin.decode(reader, reader.uint32());\n                    break;\n                case 5:\n                    message.fees.push(Coin.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.contractAddress = reader.string();\n                    break;\n                case 7:\n                    message.indexBySender = reader.sint32();\n                    break;\n                case 8:\n                    message.indexBySenderContract = reader.sint32();\n                    break;\n                case 9:\n                    message.txHash = reader.string();\n                    break;\n                case 10:\n                    message.executedAt = longToString(reader.sint64());\n                    break;\n                case 11:\n                    message.refundAmount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            sender: isSet(object.sender) ? String(object.sender) : \"\",\n            route: isSet(object.route) ? String(object.route) : \"\",\n            sourceCoin: isSet(object.sourceCoin) ? Coin.fromJSON(object.sourceCoin) : undefined,\n            destCoin: isSet(object.destCoin) ? Coin.fromJSON(object.destCoin) : undefined,\n            fees: Array.isArray(object === null || object === void 0 ? void 0 : object.fees) ? object.fees.map((e) => Coin.fromJSON(e)) : [],\n            contractAddress: isSet(object.contractAddress) ? String(object.contractAddress) : \"\",\n            indexBySender: isSet(object.indexBySender) ? Number(object.indexBySender) : 0,\n            indexBySenderContract: isSet(object.indexBySenderContract) ? Number(object.indexBySenderContract) : 0,\n            txHash: isSet(object.txHash) ? String(object.txHash) : \"\",\n            executedAt: isSet(object.executedAt) ? String(object.executedAt) : \"0\",\n            refundAmount: isSet(object.refundAmount) ? String(object.refundAmount) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.sender !== undefined && (obj.sender = message.sender);\n        message.route !== undefined && (obj.route = message.route);\n        message.sourceCoin !== undefined &&\n            (obj.sourceCoin = message.sourceCoin ? Coin.toJSON(message.sourceCoin) : undefined);\n        message.destCoin !== undefined && (obj.destCoin = message.destCoin ? Coin.toJSON(message.destCoin) : undefined);\n        if (message.fees) {\n            obj.fees = message.fees.map((e) => e ? Coin.toJSON(e) : undefined);\n        }\n        else {\n            obj.fees = [];\n        }\n        message.contractAddress !== undefined && (obj.contractAddress = message.contractAddress);\n        message.indexBySender !== undefined && (obj.indexBySender = Math.round(message.indexBySender));\n        message.indexBySenderContract !== undefined &&\n            (obj.indexBySenderContract = Math.round(message.indexBySenderContract));\n        message.txHash !== undefined && (obj.txHash = message.txHash);\n        message.executedAt !== undefined && (obj.executedAt = message.executedAt);\n        message.refundAmount !== undefined && (obj.refundAmount = message.refundAmount);\n        return obj;\n    },\n    create(base) {\n        return AtomicSwap.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j;\n        const message = createBaseAtomicSwap();\n        message.sender = (_a = object.sender) !== null && _a !== void 0 ? _a : \"\";\n        message.route = (_b = object.route) !== null && _b !== void 0 ? _b : \"\";\n        message.sourceCoin = (object.sourceCoin !== undefined && object.sourceCoin !== null)\n            ? Coin.fromPartial(object.sourceCoin)\n            : undefined;\n        message.destCoin = (object.destCoin !== undefined && object.destCoin !== null)\n            ? Coin.fromPartial(object.destCoin)\n            : undefined;\n        message.fees = ((_c = object.fees) === null || _c === void 0 ? void 0 : _c.map((e) => Coin.fromPartial(e))) || [];\n        message.contractAddress = (_d = object.contractAddress) !== null && _d !== void 0 ? _d : \"\";\n        message.indexBySender = (_e = object.indexBySender) !== null && _e !== void 0 ? _e : 0;\n        message.indexBySenderContract = (_f = object.indexBySenderContract) !== null && _f !== void 0 ? _f : 0;\n        message.txHash = (_g = object.txHash) !== null && _g !== void 0 ? _g : \"\";\n        message.executedAt = (_h = object.executedAt) !== null && _h !== void 0 ? _h : \"0\";\n        message.refundAmount = (_j = object.refundAmount) !== null && _j !== void 0 ? _j : \"\";\n        return message;\n    },\n};\nfunction createBaseCoin() {\n    return { denom: \"\", amount: \"\" };\n}\nexport const Coin = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.denom !== \"\") {\n            writer.uint32(10).string(message.denom);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(18).string(message.amount);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseCoin();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.denom = reader.string();\n                    break;\n                case 2:\n                    message.amount = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            denom: isSet(object.denom) ? String(object.denom) : \"\",\n            amount: isSet(object.amount) ? String(object.amount) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.denom !== undefined && (obj.denom = message.denom);\n        message.amount !== undefined && (obj.amount = message.amount);\n        return obj;\n    },\n    create(base) {\n        return Coin.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseCoin();\n        message.denom = (_a = object.denom) !== null && _a !== void 0 ? _a : \"\";\n        message.amount = (_b = object.amount) !== null && _b !== void 0 ? _b : \"\";\n        return message;\n    },\n};\nexport class InjectiveSpotExchangeRPCClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Markets = this.Markets.bind(this);\n        this.Market = this.Market.bind(this);\n        this.StreamMarkets = this.StreamMarkets.bind(this);\n        this.OrderbookV2 = this.OrderbookV2.bind(this);\n        this.OrderbooksV2 = this.OrderbooksV2.bind(this);\n        this.StreamOrderbookV2 = this.StreamOrderbookV2.bind(this);\n        this.StreamOrderbookUpdate = this.StreamOrderbookUpdate.bind(this);\n        this.Orders = this.Orders.bind(this);\n        this.StreamOrders = this.StreamOrders.bind(this);\n        this.Trades = this.Trades.bind(this);\n        this.StreamTrades = this.StreamTrades.bind(this);\n        this.TradesV2 = this.TradesV2.bind(this);\n        this.StreamTradesV2 = this.StreamTradesV2.bind(this);\n        this.SubaccountOrdersList = this.SubaccountOrdersList.bind(this);\n        this.SubaccountTradesList = this.SubaccountTradesList.bind(this);\n        this.OrdersHistory = this.OrdersHistory.bind(this);\n        this.StreamOrdersHistory = this.StreamOrdersHistory.bind(this);\n        this.AtomicSwapHistory = this.AtomicSwapHistory.bind(this);\n    }\n    Markets(request, metadata) {\n        return this.rpc.unary(InjectiveSpotExchangeRPCMarketsDesc, MarketsRequest.fromPartial(request), metadata);\n    }\n    Market(request, metadata) {\n        return this.rpc.unary(InjectiveSpotExchangeRPCMarketDesc, MarketRequest.fromPartial(request), metadata);\n    }\n    StreamMarkets(request, metadata) {\n        return this.rpc.invoke(InjectiveSpotExchangeRPCStreamMarketsDesc, StreamMarketsRequest.fromPartial(request), metadata);\n    }\n    OrderbookV2(request, metadata) {\n        return this.rpc.unary(InjectiveSpotExchangeRPCOrderbookV2Desc, OrderbookV2Request.fromPartial(request), metadata);\n    }\n    OrderbooksV2(request, metadata) {\n        return this.rpc.unary(InjectiveSpotExchangeRPCOrderbooksV2Desc, OrderbooksV2Request.fromPartial(request), metadata);\n    }\n    StreamOrderbookV2(request, metadata) {\n        return this.rpc.invoke(InjectiveSpotExchangeRPCStreamOrderbookV2Desc, StreamOrderbookV2Request.fromPartial(request), metadata);\n    }\n    StreamOrderbookUpdate(request, metadata) {\n        return this.rpc.invoke(InjectiveSpotExchangeRPCStreamOrderbookUpdateDesc, StreamOrderbookUpdateRequest.fromPartial(request), metadata);\n    }\n    Orders(request, metadata) {\n        return this.rpc.unary(InjectiveSpotExchangeRPCOrdersDesc, OrdersRequest.fromPartial(request), metadata);\n    }\n    StreamOrders(request, metadata) {\n        return this.rpc.invoke(InjectiveSpotExchangeRPCStreamOrdersDesc, StreamOrdersRequest.fromPartial(request), metadata);\n    }\n    Trades(request, metadata) {\n        return this.rpc.unary(InjectiveSpotExchangeRPCTradesDesc, TradesRequest.fromPartial(request), metadata);\n    }\n    StreamTrades(request, metadata) {\n        return this.rpc.invoke(InjectiveSpotExchangeRPCStreamTradesDesc, StreamTradesRequest.fromPartial(request), metadata);\n    }\n    TradesV2(request, metadata) {\n        return this.rpc.unary(InjectiveSpotExchangeRPCTradesV2Desc, TradesV2Request.fromPartial(request), metadata);\n    }\n    StreamTradesV2(request, metadata) {\n        return this.rpc.invoke(InjectiveSpotExchangeRPCStreamTradesV2Desc, StreamTradesV2Request.fromPartial(request), metadata);\n    }\n    SubaccountOrdersList(request, metadata) {\n        return this.rpc.unary(InjectiveSpotExchangeRPCSubaccountOrdersListDesc, SubaccountOrdersListRequest.fromPartial(request), metadata);\n    }\n    SubaccountTradesList(request, metadata) {\n        return this.rpc.unary(InjectiveSpotExchangeRPCSubaccountTradesListDesc, SubaccountTradesListRequest.fromPartial(request), metadata);\n    }\n    OrdersHistory(request, metadata) {\n        return this.rpc.unary(InjectiveSpotExchangeRPCOrdersHistoryDesc, OrdersHistoryRequest.fromPartial(request), metadata);\n    }\n    StreamOrdersHistory(request, metadata) {\n        return this.rpc.invoke(InjectiveSpotExchangeRPCStreamOrdersHistoryDesc, StreamOrdersHistoryRequest.fromPartial(request), metadata);\n    }\n    AtomicSwapHistory(request, metadata) {\n        return this.rpc.unary(InjectiveSpotExchangeRPCAtomicSwapHistoryDesc, AtomicSwapHistoryRequest.fromPartial(request), metadata);\n    }\n}\nexport const InjectiveSpotExchangeRPCDesc = { serviceName: \"injective_spot_exchange_rpc.InjectiveSpotExchangeRPC\" };\nexport const InjectiveSpotExchangeRPCMarketsDesc = {\n    methodName: \"Markets\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return MarketsRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = MarketsResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCMarketDesc = {\n    methodName: \"Market\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return MarketRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = MarketResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCStreamMarketsDesc = {\n    methodName: \"StreamMarkets\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamMarketsRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamMarketsResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCOrderbookV2Desc = {\n    methodName: \"OrderbookV2\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return OrderbookV2Request.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = OrderbookV2Response.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCOrderbooksV2Desc = {\n    methodName: \"OrderbooksV2\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return OrderbooksV2Request.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = OrderbooksV2Response.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCStreamOrderbookV2Desc = {\n    methodName: \"StreamOrderbookV2\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamOrderbookV2Request.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamOrderbookV2Response.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCStreamOrderbookUpdateDesc = {\n    methodName: \"StreamOrderbookUpdate\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamOrderbookUpdateRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamOrderbookUpdateResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCOrdersDesc = {\n    methodName: \"Orders\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return OrdersRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = OrdersResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCStreamOrdersDesc = {\n    methodName: \"StreamOrders\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamOrdersRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamOrdersResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCTradesDesc = {\n    methodName: \"Trades\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return TradesRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = TradesResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCStreamTradesDesc = {\n    methodName: \"StreamTrades\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamTradesRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamTradesResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCTradesV2Desc = {\n    methodName: \"TradesV2\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return TradesV2Request.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = TradesV2Response.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCStreamTradesV2Desc = {\n    methodName: \"StreamTradesV2\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamTradesV2Request.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamTradesV2Response.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCSubaccountOrdersListDesc = {\n    methodName: \"SubaccountOrdersList\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return SubaccountOrdersListRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = SubaccountOrdersListResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCSubaccountTradesListDesc = {\n    methodName: \"SubaccountTradesList\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return SubaccountTradesListRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = SubaccountTradesListResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCOrdersHistoryDesc = {\n    methodName: \"OrdersHistory\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return OrdersHistoryRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = OrdersHistoryResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCStreamOrdersHistoryDesc = {\n    methodName: \"StreamOrdersHistory\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamOrdersHistoryRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamOrdersHistoryResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveSpotExchangeRPCAtomicSwapHistoryDesc = {\n    methodName: \"AtomicSwapHistory\",\n    service: InjectiveSpotExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return AtomicSwapHistoryRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = AtomicSwapHistoryResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport class GrpcWebImpl {\n    constructor(host, options) {\n        this.host = host;\n        this.options = options;\n    }\n    unary(methodDesc, _request, metadata) {\n        var _a;\n        const request = Object.assign(Object.assign({}, _request), methodDesc.requestType);\n        const maybeCombinedMetadata = metadata && this.options.metadata\n            ? new BrowserHeaders(Object.assign(Object.assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap))\n            : metadata || this.options.metadata;\n        return new Promise((resolve, reject) => {\n            grpc.unary(methodDesc, {\n                request,\n                host: this.host,\n                metadata: maybeCombinedMetadata,\n                transport: this.options.transport,\n                debug: this.options.debug,\n                onEnd: function (response) {\n                    if (response.status === grpc.Code.OK) {\n                        resolve(response.message.toObject());\n                    }\n                    else {\n                        const err = new GrpcWebError(response.statusMessage, response.status, response.trailers);\n                        reject(err);\n                    }\n                },\n            });\n        });\n    }\n    invoke(methodDesc, _request, metadata) {\n        var _a;\n        const upStreamCodes = this.options.upStreamRetryCodes || [];\n        const DEFAULT_TIMEOUT_TIME = 3000;\n        const request = Object.assign(Object.assign({}, _request), methodDesc.requestType);\n        const maybeCombinedMetadata = metadata && this.options.metadata\n            ? new BrowserHeaders(Object.assign(Object.assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap))\n            : metadata || this.options.metadata;\n        return new Observable((observer) => {\n            const upStream = (() => {\n                const client = grpc.invoke(methodDesc, {\n                    host: this.host,\n                    request,\n                    transport: this.options.streamingTransport || this.options.transport,\n                    metadata: maybeCombinedMetadata,\n                    debug: this.options.debug,\n                    onMessage: (next) => observer.next(next),\n                    onEnd: (code, message, trailers) => {\n                        if (code === 0) {\n                            observer.complete();\n                        }\n                        else if (upStreamCodes.includes(code)) {\n                            setTimeout(upStream, DEFAULT_TIMEOUT_TIME);\n                        }\n                        else {\n                            const err = new Error(message);\n                            err.code = code;\n                            err.metadata = trailers;\n                            observer.error(err);\n                        }\n                    },\n                });\n                observer.add(() => client.close());\n            });\n            upStream();\n        }).pipe(share());\n    }\n}\nvar tsProtoGlobalThis = (() => {\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis;\n    }\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    if (typeof global !== \"undefined\") {\n        return global;\n    }\n    throw \"Unable to locate global object\";\n})();\nfunction longToString(long) {\n    return long.toString();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long;\n    _m0.configure();\n}\nfunction isSet(value) {\n    return value !== null && value !== undefined;\n}\nexport class GrpcWebError extends tsProtoGlobalThis.Error {\n    constructor(message, code, metadata) {\n        super(message);\n        this.code = code;\n        this.metadata = metadata;\n    }\n}\n"],"names":["protobufPackage","MarketsRequest","encode","message","writer","create","marketStatus","uint32","string","baseDenom","quoteDenom","v","marketStatuses","decode","input","length","reader","end","undefined","len","pos","tag","push","skipType","fromJSON","object","isSet","String","Array","isArray","map","e","toJSON","obj","base","fromPartial","_a","_b","_c","_d","MarketsResponse","markets","SpotMarketInfo","fork","ldelim","marketId","ticker","baseTokenMeta","TokenMeta","quoteTokenMeta","makerFeeRate","takerFeeRate","serviceProviderFee","minPriceTickSize","minQuantityTickSize","_e","_f","_g","_h","_j","_k","name","address","symbol","logo","decimals","sint32","updatedAt","sint64","longToString","Number","Math","round","MarketRequest","MarketResponse","market","StreamMarketsRequest","marketIds","StreamMarketsResponse","operationType","timestamp","OrderbookV2Request","OrderbookV2Response","orderbook","SpotLimitOrderbookV2","buys","PriceLevel","sells","sequence","uint64","price","quantity","OrderbooksV2Request","OrderbooksV2Response","orderbooks","SingleSpotLimitOrderbookV2","StreamOrderbookV2Request","StreamOrderbookV2Response","StreamOrderbookUpdateRequest","StreamOrderbookUpdateResponse","orderbookLevelUpdates","OrderbookLevelUpdates","PriceLevelUpdate","isActive","bool","Boolean","OrdersRequest","orderSide","subaccountId","skip","limit","startTime","endTime","includeInactive","subaccountTotalOrders","tradeId","cid","_l","_m","OrdersResponse","orders","SpotLimitOrder","paging","Paging","orderHash","unfilledQuantity","triggerPrice","feeRecipient","state","createdAt","txHash","_o","_p","total","from","to","countBySubaccount","next","StreamOrdersRequest","StreamOrdersResponse","order","TradesRequest","executionSide","direction","subaccountIds","executionTypes","accountAddress","TradesResponse","trades","SpotTrade","tradeExecutionType","tradeDirection","fee","executedAt","StreamTradesRequest","StreamTradesResponse","trade","TradesV2Request","TradesV2Response","StreamTradesV2Request","StreamTradesV2Response","SubaccountOrdersListRequest","SubaccountOrdersListResponse","SubaccountTradesListRequest","executionType","SubaccountTradesListResponse","OrdersHistoryRequest","orderTypes","activeMarketsOnly","OrdersHistoryResponse","SpotOrderHistory","orderType","filledQuantity","_q","_r","StreamOrdersHistoryRequest","StreamOrdersHistoryResponse","AtomicSwapHistoryRequest","contractAddress","fromNumber","toNumber","AtomicSwapHistoryResponse","data","AtomicSwap","sender","route","sourceCoin","Coin","destCoin","fees","indexBySender","indexBySenderContract","refundAmount","denom","amount","InjectiveSpotExchangeRPCClientImpl","constructor","rpc","this","Markets","bind","Market","StreamMarkets","OrderbookV2","OrderbooksV2","StreamOrderbookV2","StreamOrderbookUpdate","Orders","StreamOrders","Trades","StreamTrades","TradesV2","StreamTradesV2","SubaccountOrdersList","SubaccountTradesList","OrdersHistory","StreamOrdersHistory","AtomicSwapHistory","request","metadata","unary","InjectiveSpotExchangeRPCMarketsDesc","InjectiveSpotExchangeRPCMarketDesc","invoke","InjectiveSpotExchangeRPCStreamMarketsDesc","InjectiveSpotExchangeRPCOrderbookV2Desc","InjectiveSpotExchangeRPCOrderbooksV2Desc","InjectiveSpotExchangeRPCStreamOrderbookV2Desc","InjectiveSpotExchangeRPCStreamOrderbookUpdateDesc","InjectiveSpotExchangeRPCOrdersDesc","InjectiveSpotExchangeRPCStreamOrdersDesc","InjectiveSpotExchangeRPCTradesDesc","InjectiveSpotExchangeRPCStreamTradesDesc","InjectiveSpotExchangeRPCTradesV2Desc","InjectiveSpotExchangeRPCStreamTradesV2Desc","InjectiveSpotExchangeRPCSubaccountOrdersListDesc","InjectiveSpotExchangeRPCSubaccountTradesListDesc","InjectiveSpotExchangeRPCOrdersHistoryDesc","InjectiveSpotExchangeRPCStreamOrdersHistoryDesc","InjectiveSpotExchangeRPCAtomicSwapHistoryDesc","InjectiveSpotExchangeRPCDesc","serviceName","methodName","service","requestStream","responseStream","requestType","serializeBinary","finish","responseType","deserializeBinary","value","Object","assign","toObject","GrpcWebImpl","host","options","methodDesc","_request","maybeCombinedMetadata","BrowserHeaders","headersMap","Promise","resolve","reject","grpc","transport","debug","onEnd","response","status","Code","OK","err","GrpcWebError","statusMessage","trailers","upStreamCodes","upStreamRetryCodes","observer","upStream","client","streamingTransport","onMessage","code","complete","includes","setTimeout","Error","error","add","close","pipe","tsProtoGlobalThis","globalThis","self","window","global","long","toString","Long","super"],"sourceRoot":""}