"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7777],{77777:function(e,t,s){Object.defineProperty(t,"__esModule",{value:!0}),t.SafeAppProvider=void 0;var a=s(7352);Object.defineProperty(t,"SafeAppProvider",{enumerable:!0,get:function(){return a.SafeAppProvider}})},7352:function(e,t,s){Object.defineProperty(t,"__esModule",{value:!0}),t.SafeAppProvider=void 0;const a=s(31764),r=s(17187),n=s(93080);class i extends r.EventEmitter{constructor(e,t){super(),this.submittedTxs=new Map,this.safe=e,this.sdk=t}async connect(){this.emit("connect",{chainId:this.chainId})}async disconnect(){}get chainId(){return this.safe.chainId}async request(e){const{method:t,params:s=[]}=e;switch(t){case"eth_accounts":return[this.safe.safeAddress];case"net_version":case"eth_chainId":return(0,n.numberToHex)(this.chainId);case"personal_sign":{const[e,t]=s;if(this.safe.safeAddress.toLowerCase()!==t.toLowerCase())throw new Error("The address or message hash is invalid");const a=await this.sdk.txs.signMessage(e);return("signature"in a?a.signature:void 0)||"0x"}case"eth_sign":{const[e,t]=s;if(this.safe.safeAddress.toLowerCase()!==e.toLowerCase()||!t.startsWith("0x"))throw new Error("The address or message hash is invalid");const a=await this.sdk.txs.signMessage(t);return("signature"in a?a.signature:void 0)||"0x"}case"eth_signTypedData":case"eth_signTypedData_v4":{const[e,t]=s,a="string"===typeof t?JSON.parse(t):t;if(this.safe.safeAddress.toLowerCase()!==e.toLowerCase())throw new Error("The address is invalid");const r=await this.sdk.txs.signTypedMessage(a);return("signature"in r?r.signature:void 0)||"0x"}case"eth_sendTransaction":const t={...s[0],value:s[0].value||"0",data:s[0].data||"0x"};"string"===typeof t.gas&&t.gas.startsWith("0x")&&(t.gas=parseInt(t.gas,16));const i=await this.sdk.txs.send({txs:[t],params:{safeTxGas:t.gas}});return this.submittedTxs.set(i.safeTxHash,{from:this.safe.safeAddress,hash:i.safeTxHash,gas:0,gasPrice:"0x00",nonce:0,input:t.data,value:t.value,to:t.to,blockHash:null,blockNumber:null,transactionIndex:null}),i.safeTxHash;case"eth_blockNumber":return(await this.sdk.eth.getBlockByNumber(["latest"])).number;case"eth_getBalance":return this.sdk.eth.getBalance([(0,n.getLowerCase)(s[0]),s[1]]);case"eth_getCode":return this.sdk.eth.getCode([(0,n.getLowerCase)(s[0]),s[1]]);case"eth_getTransactionCount":return this.sdk.eth.getTransactionCount([(0,n.getLowerCase)(s[0]),s[1]]);case"eth_getStorageAt":return this.sdk.eth.getStorageAt([(0,n.getLowerCase)(s[0]),s[1],s[2]]);case"eth_getBlockByNumber":return this.sdk.eth.getBlockByNumber([s[0],s[1]]);case"eth_getBlockByHash":return this.sdk.eth.getBlockByHash([s[0],s[1]]);case"eth_getTransactionByHash":let o=s[0];try{o=(await this.sdk.txs.getBySafeTxHash(o)).txHash||o}catch(r){}return this.submittedTxs.has(o)?this.submittedTxs.get(o):this.sdk.eth.getTransactionByHash([o]).then((e=>(e&&(e.hash=s[0]),e)));case"eth_getTransactionReceipt":{let e=s[0];try{e=(await this.sdk.txs.getBySafeTxHash(e)).txHash||e}catch(r){}return this.sdk.eth.getTransactionReceipt([e]).then((e=>(e&&(e.transactionHash=s[0]),e)))}case"eth_estimateGas":return this.sdk.eth.getEstimateGas(s[0]);case"eth_call":return this.sdk.eth.call([s[0],s[1]]);case"eth_getLogs":return this.sdk.eth.getPastLogs([s[0]]);case"eth_gasPrice":return this.sdk.eth.getGasPrice();case"wallet_getPermissions":return this.sdk.wallet.getPermissions();case"wallet_requestPermissions":return this.sdk.wallet.requestPermissions(s[0]);case"safe_setSettings":return this.sdk.eth.setSafeSettings([s[0]]);case"wallet_sendCalls":{const{from:e,calls:t,chainId:a}=s[0];if(a!==(0,n.numberToHex)(this.chainId))throw new Error(`Safe is not on chain ${a}`);if(e!==this.safe.safeAddress)throw Error("Invalid from address");const r=t.map(((e,t)=>{if(!e.to)throw new Error(`Invalid call #${t}: missing "to" field`);return{to:e.to,data:e.data??"0x",value:e.value??(0,n.numberToHex)(0)}})),{safeTxHash:i}=await this.sdk.txs.send({txs:r});return{id:i}}case"wallet_getCallsStatus":{const e=s[0],t={[a.TransactionStatus.AWAITING_CONFIRMATIONS]:100,[a.TransactionStatus.AWAITING_EXECUTION]:100,[a.TransactionStatus.SUCCESS]:200,[a.TransactionStatus.CANCELLED]:400,[a.TransactionStatus.FAILED]:500},r=await this.sdk.txs.getBySafeTxHash(e),i={version:"1.0",id:e,chainId:(0,n.numberToHex)(this.chainId),status:t[r.txStatus]};if(!r.txHash)return i;const o=await this.sdk.eth.getTransactionReceipt([r.txHash]);if(!o)return i;const h="multiSend"!==r.txData?.dataDecoded?.method?1:r.txData.dataDecoded.parameters?.[0].valueDecoded?.length??1,c=Number(o.blockNumber),d=Number(o.gasUsed);return i.receipts=Array(h).fill({logs:o.logs,status:(0,n.numberToHex)(r.txStatus===a.TransactionStatus.SUCCESS?1:0),blockHash:o.blockHash,blockNumber:(0,n.numberToHex)(c),gasUsed:(0,n.numberToHex)(d),transactionHash:r.txHash}),i}case"wallet_showCallsStatus":throw new Error(`"${e.method}" not supported`);case"wallet_getCapabilities":return{[(0,n.numberToHex)(this.chainId)]:{atomicBatch:{supported:!0}}};default:throw Error(`"${e.method}" not implemented`)}}send(e,t){e||t("Undefined request"),this.request(e).then((s=>t(null,{jsonrpc:"2.0",id:e.id,result:s}))).catch((e=>t(e,null)))}}t.SafeAppProvider=i},93080:function(e,t){Object.defineProperty(t,"__esModule",{value:!0}),t.numberToHex=t.getLowerCase=void 0,t.getLowerCase=function(e){return e?e.toLowerCase():e},t.numberToHex=function(e){return`0x${e.toString(16)}`}}}]);