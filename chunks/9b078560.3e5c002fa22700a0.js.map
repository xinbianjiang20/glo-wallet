{"version":3,"file":"static/chunks/9b078560.3e5c002fa22700a0.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@injectivelabs/core-proto-ts/esm/tendermint/abci/types.js"],"sourcesContent":["/* eslint-disable */\nimport { grpc } from \"@injectivelabs/grpc-web\";\nimport { BrowserHeaders } from \"browser-headers\";\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Timestamp } from \"../../google/protobuf/timestamp\";\nimport { PublicKey } from \"../crypto/keys\";\nimport { ProofOps } from \"../crypto/proof\";\nimport { EvidenceParams, ValidatorParams, VersionParams } from \"../types/params\";\nimport { Header } from \"../types/types\";\nexport var CheckTxType;\n(function (CheckTxType) {\n    CheckTxType[CheckTxType[\"NEW\"] = 0] = \"NEW\";\n    CheckTxType[CheckTxType[\"RECHECK\"] = 1] = \"RECHECK\";\n    CheckTxType[CheckTxType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(CheckTxType || (CheckTxType = {}));\nexport function checkTxTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"NEW\":\n            return CheckTxType.NEW;\n        case 1:\n        case \"RECHECK\":\n            return CheckTxType.RECHECK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return CheckTxType.UNRECOGNIZED;\n    }\n}\nexport function checkTxTypeToJSON(object) {\n    switch (object) {\n        case CheckTxType.NEW:\n            return \"NEW\";\n        case CheckTxType.RECHECK:\n            return \"RECHECK\";\n        case CheckTxType.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexport var EvidenceType;\n(function (EvidenceType) {\n    EvidenceType[EvidenceType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    EvidenceType[EvidenceType[\"DUPLICATE_VOTE\"] = 1] = \"DUPLICATE_VOTE\";\n    EvidenceType[EvidenceType[\"LIGHT_CLIENT_ATTACK\"] = 2] = \"LIGHT_CLIENT_ATTACK\";\n    EvidenceType[EvidenceType[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(EvidenceType || (EvidenceType = {}));\nexport function evidenceTypeFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return EvidenceType.UNKNOWN;\n        case 1:\n        case \"DUPLICATE_VOTE\":\n            return EvidenceType.DUPLICATE_VOTE;\n        case 2:\n        case \"LIGHT_CLIENT_ATTACK\":\n            return EvidenceType.LIGHT_CLIENT_ATTACK;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return EvidenceType.UNRECOGNIZED;\n    }\n}\nexport function evidenceTypeToJSON(object) {\n    switch (object) {\n        case EvidenceType.UNKNOWN:\n            return \"UNKNOWN\";\n        case EvidenceType.DUPLICATE_VOTE:\n            return \"DUPLICATE_VOTE\";\n        case EvidenceType.LIGHT_CLIENT_ATTACK:\n            return \"LIGHT_CLIENT_ATTACK\";\n        case EvidenceType.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexport var ResponseOfferSnapshot_Result;\n(function (ResponseOfferSnapshot_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Snapshot accepted, apply chunks */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** REJECT - Reject this specific snapshot, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT\"] = 3] = \"REJECT\";\n    /** REJECT_FORMAT - Reject all snapshots of this format, try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_FORMAT\"] = 4] = \"REJECT_FORMAT\";\n    /** REJECT_SENDER - Reject all snapshots from the sender(s), try others */\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"REJECT_SENDER\"] = 5] = \"REJECT_SENDER\";\n    ResponseOfferSnapshot_Result[ResponseOfferSnapshot_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseOfferSnapshot_Result || (ResponseOfferSnapshot_Result = {}));\nexport function responseOfferSnapshot_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseOfferSnapshot_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseOfferSnapshot_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseOfferSnapshot_Result.ABORT;\n        case 3:\n        case \"REJECT\":\n            return ResponseOfferSnapshot_Result.REJECT;\n        case 4:\n        case \"REJECT_FORMAT\":\n            return ResponseOfferSnapshot_Result.REJECT_FORMAT;\n        case 5:\n        case \"REJECT_SENDER\":\n            return ResponseOfferSnapshot_Result.REJECT_SENDER;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseOfferSnapshot_Result.UNRECOGNIZED;\n    }\n}\nexport function responseOfferSnapshot_ResultToJSON(object) {\n    switch (object) {\n        case ResponseOfferSnapshot_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseOfferSnapshot_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseOfferSnapshot_Result.ABORT:\n            return \"ABORT\";\n        case ResponseOfferSnapshot_Result.REJECT:\n            return \"REJECT\";\n        case ResponseOfferSnapshot_Result.REJECT_FORMAT:\n            return \"REJECT_FORMAT\";\n        case ResponseOfferSnapshot_Result.REJECT_SENDER:\n            return \"REJECT_SENDER\";\n        case ResponseOfferSnapshot_Result.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nexport var ResponseApplySnapshotChunk_Result;\n(function (ResponseApplySnapshotChunk_Result) {\n    /** UNKNOWN - Unknown result, abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    /** ACCEPT - Chunk successfully accepted */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ACCEPT\"] = 1] = \"ACCEPT\";\n    /** ABORT - Abort all snapshot restoration */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"ABORT\"] = 2] = \"ABORT\";\n    /** RETRY - Retry chunk (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY\"] = 3] = \"RETRY\";\n    /** RETRY_SNAPSHOT - Retry snapshot (combine with refetch and reject) */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"RETRY_SNAPSHOT\"] = 4] = \"RETRY_SNAPSHOT\";\n    /** REJECT_SNAPSHOT - Reject this snapshot, try others */\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"REJECT_SNAPSHOT\"] = 5] = \"REJECT_SNAPSHOT\";\n    ResponseApplySnapshotChunk_Result[ResponseApplySnapshotChunk_Result[\"UNRECOGNIZED\"] = -1] = \"UNRECOGNIZED\";\n})(ResponseApplySnapshotChunk_Result || (ResponseApplySnapshotChunk_Result = {}));\nexport function responseApplySnapshotChunk_ResultFromJSON(object) {\n    switch (object) {\n        case 0:\n        case \"UNKNOWN\":\n            return ResponseApplySnapshotChunk_Result.UNKNOWN;\n        case 1:\n        case \"ACCEPT\":\n            return ResponseApplySnapshotChunk_Result.ACCEPT;\n        case 2:\n        case \"ABORT\":\n            return ResponseApplySnapshotChunk_Result.ABORT;\n        case 3:\n        case \"RETRY\":\n            return ResponseApplySnapshotChunk_Result.RETRY;\n        case 4:\n        case \"RETRY_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT;\n        case 5:\n        case \"REJECT_SNAPSHOT\":\n            return ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT;\n        case -1:\n        case \"UNRECOGNIZED\":\n        default:\n            return ResponseApplySnapshotChunk_Result.UNRECOGNIZED;\n    }\n}\nexport function responseApplySnapshotChunk_ResultToJSON(object) {\n    switch (object) {\n        case ResponseApplySnapshotChunk_Result.UNKNOWN:\n            return \"UNKNOWN\";\n        case ResponseApplySnapshotChunk_Result.ACCEPT:\n            return \"ACCEPT\";\n        case ResponseApplySnapshotChunk_Result.ABORT:\n            return \"ABORT\";\n        case ResponseApplySnapshotChunk_Result.RETRY:\n            return \"RETRY\";\n        case ResponseApplySnapshotChunk_Result.RETRY_SNAPSHOT:\n            return \"RETRY_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.REJECT_SNAPSHOT:\n            return \"REJECT_SNAPSHOT\";\n        case ResponseApplySnapshotChunk_Result.UNRECOGNIZED:\n        default:\n            return \"UNRECOGNIZED\";\n    }\n}\nfunction createBaseRequest() {\n    return {\n        echo: undefined,\n        flush: undefined,\n        info: undefined,\n        setOption: undefined,\n        initChain: undefined,\n        query: undefined,\n        beginBlock: undefined,\n        checkTx: undefined,\n        deliverTx: undefined,\n        endBlock: undefined,\n        commit: undefined,\n        listSnapshots: undefined,\n        offerSnapshot: undefined,\n        loadSnapshotChunk: undefined,\n        applySnapshotChunk: undefined,\n    };\n}\nexport const Request = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.echo !== undefined) {\n            RequestEcho.encode(message.echo, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            RequestFlush.encode(message.flush, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            RequestInfo.encode(message.info, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            RequestSetOption.encode(message.setOption, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            RequestInitChain.encode(message.initChain, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            RequestQuery.encode(message.query, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            RequestBeginBlock.encode(message.beginBlock, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            RequestCheckTx.encode(message.checkTx, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            RequestDeliverTx.encode(message.deliverTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            RequestEndBlock.encode(message.endBlock, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            RequestCommit.encode(message.commit, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            RequestListSnapshots.encode(message.listSnapshots, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            RequestOfferSnapshot.encode(message.offerSnapshot, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            RequestLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            RequestApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.echo = RequestEcho.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.flush = RequestFlush.decode(reader, reader.uint32());\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.info = RequestInfo.decode(reader, reader.uint32());\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.setOption = RequestSetOption.decode(reader, reader.uint32());\n                    continue;\n                case 5:\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.initChain = RequestInitChain.decode(reader, reader.uint32());\n                    continue;\n                case 6:\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.query = RequestQuery.decode(reader, reader.uint32());\n                    continue;\n                case 7:\n                    if (tag !== 58) {\n                        break;\n                    }\n                    message.beginBlock = RequestBeginBlock.decode(reader, reader.uint32());\n                    continue;\n                case 8:\n                    if (tag !== 66) {\n                        break;\n                    }\n                    message.checkTx = RequestCheckTx.decode(reader, reader.uint32());\n                    continue;\n                case 9:\n                    if (tag !== 74) {\n                        break;\n                    }\n                    message.deliverTx = RequestDeliverTx.decode(reader, reader.uint32());\n                    continue;\n                case 10:\n                    if (tag !== 82) {\n                        break;\n                    }\n                    message.endBlock = RequestEndBlock.decode(reader, reader.uint32());\n                    continue;\n                case 11:\n                    if (tag !== 90) {\n                        break;\n                    }\n                    message.commit = RequestCommit.decode(reader, reader.uint32());\n                    continue;\n                case 12:\n                    if (tag !== 98) {\n                        break;\n                    }\n                    message.listSnapshots = RequestListSnapshots.decode(reader, reader.uint32());\n                    continue;\n                case 13:\n                    if (tag !== 106) {\n                        break;\n                    }\n                    message.offerSnapshot = RequestOfferSnapshot.decode(reader, reader.uint32());\n                    continue;\n                case 14:\n                    if (tag !== 114) {\n                        break;\n                    }\n                    message.loadSnapshotChunk = RequestLoadSnapshotChunk.decode(reader, reader.uint32());\n                    continue;\n                case 15:\n                    if (tag !== 122) {\n                        break;\n                    }\n                    message.applySnapshotChunk = RequestApplySnapshotChunk.decode(reader, reader.uint32());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            echo: isSet(object.echo) ? RequestEcho.fromJSON(object.echo) : undefined,\n            flush: isSet(object.flush) ? RequestFlush.fromJSON(object.flush) : undefined,\n            info: isSet(object.info) ? RequestInfo.fromJSON(object.info) : undefined,\n            setOption: isSet(object.setOption) ? RequestSetOption.fromJSON(object.setOption) : undefined,\n            initChain: isSet(object.initChain) ? RequestInitChain.fromJSON(object.initChain) : undefined,\n            query: isSet(object.query) ? RequestQuery.fromJSON(object.query) : undefined,\n            beginBlock: isSet(object.beginBlock) ? RequestBeginBlock.fromJSON(object.beginBlock) : undefined,\n            checkTx: isSet(object.checkTx) ? RequestCheckTx.fromJSON(object.checkTx) : undefined,\n            deliverTx: isSet(object.deliverTx) ? RequestDeliverTx.fromJSON(object.deliverTx) : undefined,\n            endBlock: isSet(object.endBlock) ? RequestEndBlock.fromJSON(object.endBlock) : undefined,\n            commit: isSet(object.commit) ? RequestCommit.fromJSON(object.commit) : undefined,\n            listSnapshots: isSet(object.listSnapshots) ? RequestListSnapshots.fromJSON(object.listSnapshots) : undefined,\n            offerSnapshot: isSet(object.offerSnapshot) ? RequestOfferSnapshot.fromJSON(object.offerSnapshot) : undefined,\n            loadSnapshotChunk: isSet(object.loadSnapshotChunk)\n                ? RequestLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk)\n                : undefined,\n            applySnapshotChunk: isSet(object.applySnapshotChunk)\n                ? RequestApplySnapshotChunk.fromJSON(object.applySnapshotChunk)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.echo !== undefined) {\n            obj.echo = RequestEcho.toJSON(message.echo);\n        }\n        if (message.flush !== undefined) {\n            obj.flush = RequestFlush.toJSON(message.flush);\n        }\n        if (message.info !== undefined) {\n            obj.info = RequestInfo.toJSON(message.info);\n        }\n        if (message.setOption !== undefined) {\n            obj.setOption = RequestSetOption.toJSON(message.setOption);\n        }\n        if (message.initChain !== undefined) {\n            obj.initChain = RequestInitChain.toJSON(message.initChain);\n        }\n        if (message.query !== undefined) {\n            obj.query = RequestQuery.toJSON(message.query);\n        }\n        if (message.beginBlock !== undefined) {\n            obj.beginBlock = RequestBeginBlock.toJSON(message.beginBlock);\n        }\n        if (message.checkTx !== undefined) {\n            obj.checkTx = RequestCheckTx.toJSON(message.checkTx);\n        }\n        if (message.deliverTx !== undefined) {\n            obj.deliverTx = RequestDeliverTx.toJSON(message.deliverTx);\n        }\n        if (message.endBlock !== undefined) {\n            obj.endBlock = RequestEndBlock.toJSON(message.endBlock);\n        }\n        if (message.commit !== undefined) {\n            obj.commit = RequestCommit.toJSON(message.commit);\n        }\n        if (message.listSnapshots !== undefined) {\n            obj.listSnapshots = RequestListSnapshots.toJSON(message.listSnapshots);\n        }\n        if (message.offerSnapshot !== undefined) {\n            obj.offerSnapshot = RequestOfferSnapshot.toJSON(message.offerSnapshot);\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            obj.loadSnapshotChunk = RequestLoadSnapshotChunk.toJSON(message.loadSnapshotChunk);\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            obj.applySnapshotChunk = RequestApplySnapshotChunk.toJSON(message.applySnapshotChunk);\n        }\n        return obj;\n    },\n    create(base) {\n        return Request.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        const message = createBaseRequest();\n        message.echo = (object.echo !== undefined && object.echo !== null)\n            ? RequestEcho.fromPartial(object.echo)\n            : undefined;\n        message.flush = (object.flush !== undefined && object.flush !== null)\n            ? RequestFlush.fromPartial(object.flush)\n            : undefined;\n        message.info = (object.info !== undefined && object.info !== null)\n            ? RequestInfo.fromPartial(object.info)\n            : undefined;\n        message.setOption = (object.setOption !== undefined && object.setOption !== null)\n            ? RequestSetOption.fromPartial(object.setOption)\n            : undefined;\n        message.initChain = (object.initChain !== undefined && object.initChain !== null)\n            ? RequestInitChain.fromPartial(object.initChain)\n            : undefined;\n        message.query = (object.query !== undefined && object.query !== null)\n            ? RequestQuery.fromPartial(object.query)\n            : undefined;\n        message.beginBlock = (object.beginBlock !== undefined && object.beginBlock !== null)\n            ? RequestBeginBlock.fromPartial(object.beginBlock)\n            : undefined;\n        message.checkTx = (object.checkTx !== undefined && object.checkTx !== null)\n            ? RequestCheckTx.fromPartial(object.checkTx)\n            : undefined;\n        message.deliverTx = (object.deliverTx !== undefined && object.deliverTx !== null)\n            ? RequestDeliverTx.fromPartial(object.deliverTx)\n            : undefined;\n        message.endBlock = (object.endBlock !== undefined && object.endBlock !== null)\n            ? RequestEndBlock.fromPartial(object.endBlock)\n            : undefined;\n        message.commit = (object.commit !== undefined && object.commit !== null)\n            ? RequestCommit.fromPartial(object.commit)\n            : undefined;\n        message.listSnapshots = (object.listSnapshots !== undefined && object.listSnapshots !== null)\n            ? RequestListSnapshots.fromPartial(object.listSnapshots)\n            : undefined;\n        message.offerSnapshot = (object.offerSnapshot !== undefined && object.offerSnapshot !== null)\n            ? RequestOfferSnapshot.fromPartial(object.offerSnapshot)\n            : undefined;\n        message.loadSnapshotChunk = (object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null)\n            ? RequestLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk)\n            : undefined;\n        message.applySnapshotChunk = (object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null)\n            ? RequestApplySnapshotChunk.fromPartial(object.applySnapshotChunk)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseRequestEcho() {\n    return { message: \"\" };\n}\nexport const RequestEcho = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestEcho();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.message = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { message: isSet(object.message) ? globalThis.String(object.message) : \"\" };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.message !== \"\") {\n            obj.message = message.message;\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestEcho.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseRequestEcho();\n        message.message = (_a = object.message) !== null && _a !== void 0 ? _a : \"\";\n        return message;\n    },\n};\nfunction createBaseRequestFlush() {\n    return {};\n}\nexport const RequestFlush = {\n    encode(_, writer = _m0.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestFlush();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(_) {\n        return {};\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    create(base) {\n        return RequestFlush.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(_) {\n        const message = createBaseRequestFlush();\n        return message;\n    },\n};\nfunction createBaseRequestInfo() {\n    return { version: \"\", blockVersion: \"0\", p2pVersion: \"0\" };\n}\nexport const RequestInfo = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.version !== \"\") {\n            writer.uint32(10).string(message.version);\n        }\n        if (message.blockVersion !== \"0\") {\n            writer.uint32(16).uint64(message.blockVersion);\n        }\n        if (message.p2pVersion !== \"0\") {\n            writer.uint32(24).uint64(message.p2pVersion);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.version = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.blockVersion = longToString(reader.uint64());\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.p2pVersion = longToString(reader.uint64());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            version: isSet(object.version) ? globalThis.String(object.version) : \"\",\n            blockVersion: isSet(object.blockVersion) ? globalThis.String(object.blockVersion) : \"0\",\n            p2pVersion: isSet(object.p2pVersion) ? globalThis.String(object.p2pVersion) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.version !== \"\") {\n            obj.version = message.version;\n        }\n        if (message.blockVersion !== \"0\") {\n            obj.blockVersion = message.blockVersion;\n        }\n        if (message.p2pVersion !== \"0\") {\n            obj.p2pVersion = message.p2pVersion;\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestInfo.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseRequestInfo();\n        message.version = (_a = object.version) !== null && _a !== void 0 ? _a : \"\";\n        message.blockVersion = (_b = object.blockVersion) !== null && _b !== void 0 ? _b : \"0\";\n        message.p2pVersion = (_c = object.p2pVersion) !== null && _c !== void 0 ? _c : \"0\";\n        return message;\n    },\n};\nfunction createBaseRequestSetOption() {\n    return { key: \"\", value: \"\" };\n}\nexport const RequestSetOption = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.key !== \"\") {\n            writer.uint32(10).string(message.key);\n        }\n        if (message.value !== \"\") {\n            writer.uint32(18).string(message.value);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestSetOption();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.key = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.value = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            key: isSet(object.key) ? globalThis.String(object.key) : \"\",\n            value: isSet(object.value) ? globalThis.String(object.value) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.key !== \"\") {\n            obj.key = message.key;\n        }\n        if (message.value !== \"\") {\n            obj.value = message.value;\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestSetOption.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseRequestSetOption();\n        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : \"\";\n        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : \"\";\n        return message;\n    },\n};\nfunction createBaseRequestInitChain() {\n    return {\n        time: undefined,\n        chainId: \"\",\n        consensusParams: undefined,\n        validators: [],\n        appStateBytes: new Uint8Array(0),\n        initialHeight: \"0\",\n    };\n}\nexport const RequestInitChain = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(10).fork()).ldelim();\n        }\n        if (message.chainId !== \"\") {\n            writer.uint32(18).string(message.chainId);\n        }\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.appStateBytes.length !== 0) {\n            writer.uint32(42).bytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== \"0\") {\n            writer.uint32(48).int64(message.initialHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestInitChain();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.chainId = reader.string();\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    continue;\n                case 5:\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.appStateBytes = reader.bytes();\n                    continue;\n                case 6:\n                    if (tag !== 48) {\n                        break;\n                    }\n                    message.initialHeight = longToString(reader.int64());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            time: isSet(object.time) ? fromJsonTimestamp(object.time) : undefined,\n            chainId: isSet(object.chainId) ? globalThis.String(object.chainId) : \"\",\n            consensusParams: isSet(object.consensusParams) ? ConsensusParams.fromJSON(object.consensusParams) : undefined,\n            validators: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.validators)\n                ? object.validators.map((e) => ValidatorUpdate.fromJSON(e))\n                : [],\n            appStateBytes: isSet(object.appStateBytes) ? bytesFromBase64(object.appStateBytes) : new Uint8Array(0),\n            initialHeight: isSet(object.initialHeight) ? globalThis.String(object.initialHeight) : \"0\",\n        };\n    },\n    toJSON(message) {\n        var _a;\n        const obj = {};\n        if (message.time !== undefined) {\n            obj.time = message.time.toISOString();\n        }\n        if (message.chainId !== \"\") {\n            obj.chainId = message.chainId;\n        }\n        if (message.consensusParams !== undefined) {\n            obj.consensusParams = ConsensusParams.toJSON(message.consensusParams);\n        }\n        if ((_a = message.validators) === null || _a === void 0 ? void 0 : _a.length) {\n            obj.validators = message.validators.map((e) => ValidatorUpdate.toJSON(e));\n        }\n        if (message.appStateBytes.length !== 0) {\n            obj.appStateBytes = base64FromBytes(message.appStateBytes);\n        }\n        if (message.initialHeight !== \"0\") {\n            obj.initialHeight = message.initialHeight;\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestInitChain.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e;\n        const message = createBaseRequestInitChain();\n        message.time = (_a = object.time) !== null && _a !== void 0 ? _a : undefined;\n        message.chainId = (_b = object.chainId) !== null && _b !== void 0 ? _b : \"\";\n        message.consensusParams = (object.consensusParams !== undefined && object.consensusParams !== null)\n            ? ConsensusParams.fromPartial(object.consensusParams)\n            : undefined;\n        message.validators = ((_c = object.validators) === null || _c === void 0 ? void 0 : _c.map((e) => ValidatorUpdate.fromPartial(e))) || [];\n        message.appStateBytes = (_d = object.appStateBytes) !== null && _d !== void 0 ? _d : new Uint8Array(0);\n        message.initialHeight = (_e = object.initialHeight) !== null && _e !== void 0 ? _e : \"0\";\n        return message;\n    },\n};\nfunction createBaseRequestQuery() {\n    return { data: new Uint8Array(0), path: \"\", height: \"0\", prove: false };\n}\nexport const RequestQuery = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(10).bytes(message.data);\n        }\n        if (message.path !== \"\") {\n            writer.uint32(18).string(message.path);\n        }\n        if (message.height !== \"0\") {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.prove === true) {\n            writer.uint32(32).bool(message.prove);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestQuery();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.data = reader.bytes();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.path = reader.string();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.height = longToString(reader.int64());\n                    continue;\n                case 4:\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.prove = reader.bool();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(0),\n            path: isSet(object.path) ? globalThis.String(object.path) : \"\",\n            height: isSet(object.height) ? globalThis.String(object.height) : \"0\",\n            prove: isSet(object.prove) ? globalThis.Boolean(object.prove) : false,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data.length !== 0) {\n            obj.data = base64FromBytes(message.data);\n        }\n        if (message.path !== \"\") {\n            obj.path = message.path;\n        }\n        if (message.height !== \"0\") {\n            obj.height = message.height;\n        }\n        if (message.prove === true) {\n            obj.prove = message.prove;\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestQuery.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBaseRequestQuery();\n        message.data = (_a = object.data) !== null && _a !== void 0 ? _a : new Uint8Array(0);\n        message.path = (_b = object.path) !== null && _b !== void 0 ? _b : \"\";\n        message.height = (_c = object.height) !== null && _c !== void 0 ? _c : \"0\";\n        message.prove = (_d = object.prove) !== null && _d !== void 0 ? _d : false;\n        return message;\n    },\n};\nfunction createBaseRequestBeginBlock() {\n    return { hash: new Uint8Array(0), header: undefined, lastCommitInfo: undefined, byzantineValidators: [] };\n}\nexport const RequestBeginBlock = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.hash.length !== 0) {\n            writer.uint32(10).bytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            Header.encode(message.header, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.lastCommitInfo !== undefined) {\n            LastCommitInfo.encode(message.lastCommitInfo, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.byzantineValidators) {\n            Evidence.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestBeginBlock();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.hash = reader.bytes();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.header = Header.decode(reader, reader.uint32());\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.lastCommitInfo = LastCommitInfo.decode(reader, reader.uint32());\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.byzantineValidators.push(Evidence.decode(reader, reader.uint32()));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            hash: isSet(object.hash) ? bytesFromBase64(object.hash) : new Uint8Array(0),\n            header: isSet(object.header) ? Header.fromJSON(object.header) : undefined,\n            lastCommitInfo: isSet(object.lastCommitInfo) ? LastCommitInfo.fromJSON(object.lastCommitInfo) : undefined,\n            byzantineValidators: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.byzantineValidators)\n                ? object.byzantineValidators.map((e) => Evidence.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        var _a;\n        const obj = {};\n        if (message.hash.length !== 0) {\n            obj.hash = base64FromBytes(message.hash);\n        }\n        if (message.header !== undefined) {\n            obj.header = Header.toJSON(message.header);\n        }\n        if (message.lastCommitInfo !== undefined) {\n            obj.lastCommitInfo = LastCommitInfo.toJSON(message.lastCommitInfo);\n        }\n        if ((_a = message.byzantineValidators) === null || _a === void 0 ? void 0 : _a.length) {\n            obj.byzantineValidators = message.byzantineValidators.map((e) => Evidence.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestBeginBlock.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseRequestBeginBlock();\n        message.hash = (_a = object.hash) !== null && _a !== void 0 ? _a : new Uint8Array(0);\n        message.header = (object.header !== undefined && object.header !== null)\n            ? Header.fromPartial(object.header)\n            : undefined;\n        message.lastCommitInfo = (object.lastCommitInfo !== undefined && object.lastCommitInfo !== null)\n            ? LastCommitInfo.fromPartial(object.lastCommitInfo)\n            : undefined;\n        message.byzantineValidators = ((_b = object.byzantineValidators) === null || _b === void 0 ? void 0 : _b.map((e) => Evidence.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseRequestCheckTx() {\n    return { tx: new Uint8Array(0), type: 0 };\n}\nexport const RequestCheckTx = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        if (message.type !== 0) {\n            writer.uint32(16).int32(message.type);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestCheckTx();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.tx = reader.bytes();\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.type = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            tx: isSet(object.tx) ? bytesFromBase64(object.tx) : new Uint8Array(0),\n            type: isSet(object.type) ? checkTxTypeFromJSON(object.type) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.tx.length !== 0) {\n            obj.tx = base64FromBytes(message.tx);\n        }\n        if (message.type !== 0) {\n            obj.type = checkTxTypeToJSON(message.type);\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestCheckTx.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseRequestCheckTx();\n        message.tx = (_a = object.tx) !== null && _a !== void 0 ? _a : new Uint8Array(0);\n        message.type = (_b = object.type) !== null && _b !== void 0 ? _b : 0;\n        return message;\n    },\n};\nfunction createBaseRequestDeliverTx() {\n    return { tx: new Uint8Array(0) };\n}\nexport const RequestDeliverTx = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.tx.length !== 0) {\n            writer.uint32(10).bytes(message.tx);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestDeliverTx();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.tx = reader.bytes();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { tx: isSet(object.tx) ? bytesFromBase64(object.tx) : new Uint8Array(0) };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.tx.length !== 0) {\n            obj.tx = base64FromBytes(message.tx);\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestDeliverTx.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseRequestDeliverTx();\n        message.tx = (_a = object.tx) !== null && _a !== void 0 ? _a : new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBaseRequestEndBlock() {\n    return { height: \"0\" };\n}\nexport const RequestEndBlock = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.height !== \"0\") {\n            writer.uint32(8).int64(message.height);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestEndBlock();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.height = longToString(reader.int64());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { height: isSet(object.height) ? globalThis.String(object.height) : \"0\" };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.height !== \"0\") {\n            obj.height = message.height;\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestEndBlock.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseRequestEndBlock();\n        message.height = (_a = object.height) !== null && _a !== void 0 ? _a : \"0\";\n        return message;\n    },\n};\nfunction createBaseRequestCommit() {\n    return {};\n}\nexport const RequestCommit = {\n    encode(_, writer = _m0.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestCommit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(_) {\n        return {};\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    create(base) {\n        return RequestCommit.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(_) {\n        const message = createBaseRequestCommit();\n        return message;\n    },\n};\nfunction createBaseRequestListSnapshots() {\n    return {};\n}\nexport const RequestListSnapshots = {\n    encode(_, writer = _m0.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestListSnapshots();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(_) {\n        return {};\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    create(base) {\n        return RequestListSnapshots.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(_) {\n        const message = createBaseRequestListSnapshots();\n        return message;\n    },\n};\nfunction createBaseRequestOfferSnapshot() {\n    return { snapshot: undefined, appHash: new Uint8Array(0) };\n}\nexport const RequestOfferSnapshot = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.snapshot !== undefined) {\n            Snapshot.encode(message.snapshot, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(18).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestOfferSnapshot();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.snapshot = Snapshot.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.appHash = reader.bytes();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            snapshot: isSet(object.snapshot) ? Snapshot.fromJSON(object.snapshot) : undefined,\n            appHash: isSet(object.appHash) ? bytesFromBase64(object.appHash) : new Uint8Array(0),\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.snapshot !== undefined) {\n            obj.snapshot = Snapshot.toJSON(message.snapshot);\n        }\n        if (message.appHash.length !== 0) {\n            obj.appHash = base64FromBytes(message.appHash);\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestOfferSnapshot.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseRequestOfferSnapshot();\n        message.snapshot = (object.snapshot !== undefined && object.snapshot !== null)\n            ? Snapshot.fromPartial(object.snapshot)\n            : undefined;\n        message.appHash = (_a = object.appHash) !== null && _a !== void 0 ? _a : new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBaseRequestLoadSnapshotChunk() {\n    return { height: \"0\", format: 0, chunk: 0 };\n}\nexport const RequestLoadSnapshotChunk = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.height !== \"0\") {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunk !== 0) {\n            writer.uint32(24).uint32(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestLoadSnapshotChunk();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.height = longToString(reader.uint64());\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.format = reader.uint32();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.chunk = reader.uint32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            height: isSet(object.height) ? globalThis.String(object.height) : \"0\",\n            format: isSet(object.format) ? globalThis.Number(object.format) : 0,\n            chunk: isSet(object.chunk) ? globalThis.Number(object.chunk) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.height !== \"0\") {\n            obj.height = message.height;\n        }\n        if (message.format !== 0) {\n            obj.format = Math.round(message.format);\n        }\n        if (message.chunk !== 0) {\n            obj.chunk = Math.round(message.chunk);\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestLoadSnapshotChunk.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseRequestLoadSnapshotChunk();\n        message.height = (_a = object.height) !== null && _a !== void 0 ? _a : \"0\";\n        message.format = (_b = object.format) !== null && _b !== void 0 ? _b : 0;\n        message.chunk = (_c = object.chunk) !== null && _c !== void 0 ? _c : 0;\n        return message;\n    },\n};\nfunction createBaseRequestApplySnapshotChunk() {\n    return { index: 0, chunk: new Uint8Array(0), sender: \"\" };\n}\nexport const RequestApplySnapshotChunk = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.index !== 0) {\n            writer.uint32(8).uint32(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            writer.uint32(18).bytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(26).string(message.sender);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseRequestApplySnapshotChunk();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.index = reader.uint32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.chunk = reader.bytes();\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.sender = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            index: isSet(object.index) ? globalThis.Number(object.index) : 0,\n            chunk: isSet(object.chunk) ? bytesFromBase64(object.chunk) : new Uint8Array(0),\n            sender: isSet(object.sender) ? globalThis.String(object.sender) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.index !== 0) {\n            obj.index = Math.round(message.index);\n        }\n        if (message.chunk.length !== 0) {\n            obj.chunk = base64FromBytes(message.chunk);\n        }\n        if (message.sender !== \"\") {\n            obj.sender = message.sender;\n        }\n        return obj;\n    },\n    create(base) {\n        return RequestApplySnapshotChunk.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseRequestApplySnapshotChunk();\n        message.index = (_a = object.index) !== null && _a !== void 0 ? _a : 0;\n        message.chunk = (_b = object.chunk) !== null && _b !== void 0 ? _b : new Uint8Array(0);\n        message.sender = (_c = object.sender) !== null && _c !== void 0 ? _c : \"\";\n        return message;\n    },\n};\nfunction createBaseResponse() {\n    return {\n        exception: undefined,\n        echo: undefined,\n        flush: undefined,\n        info: undefined,\n        setOption: undefined,\n        initChain: undefined,\n        query: undefined,\n        beginBlock: undefined,\n        checkTx: undefined,\n        deliverTx: undefined,\n        endBlock: undefined,\n        commit: undefined,\n        listSnapshots: undefined,\n        offerSnapshot: undefined,\n        loadSnapshotChunk: undefined,\n        applySnapshotChunk: undefined,\n    };\n}\nexport const Response = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.exception !== undefined) {\n            ResponseException.encode(message.exception, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.echo !== undefined) {\n            ResponseEcho.encode(message.echo, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.flush !== undefined) {\n            ResponseFlush.encode(message.flush, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.info !== undefined) {\n            ResponseInfo.encode(message.info, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.setOption !== undefined) {\n            ResponseSetOption.encode(message.setOption, writer.uint32(42).fork()).ldelim();\n        }\n        if (message.initChain !== undefined) {\n            ResponseInitChain.encode(message.initChain, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.query !== undefined) {\n            ResponseQuery.encode(message.query, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.beginBlock !== undefined) {\n            ResponseBeginBlock.encode(message.beginBlock, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.checkTx !== undefined) {\n            ResponseCheckTx.encode(message.checkTx, writer.uint32(74).fork()).ldelim();\n        }\n        if (message.deliverTx !== undefined) {\n            ResponseDeliverTx.encode(message.deliverTx, writer.uint32(82).fork()).ldelim();\n        }\n        if (message.endBlock !== undefined) {\n            ResponseEndBlock.encode(message.endBlock, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.commit !== undefined) {\n            ResponseCommit.encode(message.commit, writer.uint32(98).fork()).ldelim();\n        }\n        if (message.listSnapshots !== undefined) {\n            ResponseListSnapshots.encode(message.listSnapshots, writer.uint32(106).fork()).ldelim();\n        }\n        if (message.offerSnapshot !== undefined) {\n            ResponseOfferSnapshot.encode(message.offerSnapshot, writer.uint32(114).fork()).ldelim();\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            ResponseLoadSnapshotChunk.encode(message.loadSnapshotChunk, writer.uint32(122).fork()).ldelim();\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            ResponseApplySnapshotChunk.encode(message.applySnapshotChunk, writer.uint32(130).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.exception = ResponseException.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.echo = ResponseEcho.decode(reader, reader.uint32());\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.flush = ResponseFlush.decode(reader, reader.uint32());\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.info = ResponseInfo.decode(reader, reader.uint32());\n                    continue;\n                case 5:\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.setOption = ResponseSetOption.decode(reader, reader.uint32());\n                    continue;\n                case 6:\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.initChain = ResponseInitChain.decode(reader, reader.uint32());\n                    continue;\n                case 7:\n                    if (tag !== 58) {\n                        break;\n                    }\n                    message.query = ResponseQuery.decode(reader, reader.uint32());\n                    continue;\n                case 8:\n                    if (tag !== 66) {\n                        break;\n                    }\n                    message.beginBlock = ResponseBeginBlock.decode(reader, reader.uint32());\n                    continue;\n                case 9:\n                    if (tag !== 74) {\n                        break;\n                    }\n                    message.checkTx = ResponseCheckTx.decode(reader, reader.uint32());\n                    continue;\n                case 10:\n                    if (tag !== 82) {\n                        break;\n                    }\n                    message.deliverTx = ResponseDeliverTx.decode(reader, reader.uint32());\n                    continue;\n                case 11:\n                    if (tag !== 90) {\n                        break;\n                    }\n                    message.endBlock = ResponseEndBlock.decode(reader, reader.uint32());\n                    continue;\n                case 12:\n                    if (tag !== 98) {\n                        break;\n                    }\n                    message.commit = ResponseCommit.decode(reader, reader.uint32());\n                    continue;\n                case 13:\n                    if (tag !== 106) {\n                        break;\n                    }\n                    message.listSnapshots = ResponseListSnapshots.decode(reader, reader.uint32());\n                    continue;\n                case 14:\n                    if (tag !== 114) {\n                        break;\n                    }\n                    message.offerSnapshot = ResponseOfferSnapshot.decode(reader, reader.uint32());\n                    continue;\n                case 15:\n                    if (tag !== 122) {\n                        break;\n                    }\n                    message.loadSnapshotChunk = ResponseLoadSnapshotChunk.decode(reader, reader.uint32());\n                    continue;\n                case 16:\n                    if (tag !== 130) {\n                        break;\n                    }\n                    message.applySnapshotChunk = ResponseApplySnapshotChunk.decode(reader, reader.uint32());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            exception: isSet(object.exception) ? ResponseException.fromJSON(object.exception) : undefined,\n            echo: isSet(object.echo) ? ResponseEcho.fromJSON(object.echo) : undefined,\n            flush: isSet(object.flush) ? ResponseFlush.fromJSON(object.flush) : undefined,\n            info: isSet(object.info) ? ResponseInfo.fromJSON(object.info) : undefined,\n            setOption: isSet(object.setOption) ? ResponseSetOption.fromJSON(object.setOption) : undefined,\n            initChain: isSet(object.initChain) ? ResponseInitChain.fromJSON(object.initChain) : undefined,\n            query: isSet(object.query) ? ResponseQuery.fromJSON(object.query) : undefined,\n            beginBlock: isSet(object.beginBlock) ? ResponseBeginBlock.fromJSON(object.beginBlock) : undefined,\n            checkTx: isSet(object.checkTx) ? ResponseCheckTx.fromJSON(object.checkTx) : undefined,\n            deliverTx: isSet(object.deliverTx) ? ResponseDeliverTx.fromJSON(object.deliverTx) : undefined,\n            endBlock: isSet(object.endBlock) ? ResponseEndBlock.fromJSON(object.endBlock) : undefined,\n            commit: isSet(object.commit) ? ResponseCommit.fromJSON(object.commit) : undefined,\n            listSnapshots: isSet(object.listSnapshots) ? ResponseListSnapshots.fromJSON(object.listSnapshots) : undefined,\n            offerSnapshot: isSet(object.offerSnapshot) ? ResponseOfferSnapshot.fromJSON(object.offerSnapshot) : undefined,\n            loadSnapshotChunk: isSet(object.loadSnapshotChunk)\n                ? ResponseLoadSnapshotChunk.fromJSON(object.loadSnapshotChunk)\n                : undefined,\n            applySnapshotChunk: isSet(object.applySnapshotChunk)\n                ? ResponseApplySnapshotChunk.fromJSON(object.applySnapshotChunk)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.exception !== undefined) {\n            obj.exception = ResponseException.toJSON(message.exception);\n        }\n        if (message.echo !== undefined) {\n            obj.echo = ResponseEcho.toJSON(message.echo);\n        }\n        if (message.flush !== undefined) {\n            obj.flush = ResponseFlush.toJSON(message.flush);\n        }\n        if (message.info !== undefined) {\n            obj.info = ResponseInfo.toJSON(message.info);\n        }\n        if (message.setOption !== undefined) {\n            obj.setOption = ResponseSetOption.toJSON(message.setOption);\n        }\n        if (message.initChain !== undefined) {\n            obj.initChain = ResponseInitChain.toJSON(message.initChain);\n        }\n        if (message.query !== undefined) {\n            obj.query = ResponseQuery.toJSON(message.query);\n        }\n        if (message.beginBlock !== undefined) {\n            obj.beginBlock = ResponseBeginBlock.toJSON(message.beginBlock);\n        }\n        if (message.checkTx !== undefined) {\n            obj.checkTx = ResponseCheckTx.toJSON(message.checkTx);\n        }\n        if (message.deliverTx !== undefined) {\n            obj.deliverTx = ResponseDeliverTx.toJSON(message.deliverTx);\n        }\n        if (message.endBlock !== undefined) {\n            obj.endBlock = ResponseEndBlock.toJSON(message.endBlock);\n        }\n        if (message.commit !== undefined) {\n            obj.commit = ResponseCommit.toJSON(message.commit);\n        }\n        if (message.listSnapshots !== undefined) {\n            obj.listSnapshots = ResponseListSnapshots.toJSON(message.listSnapshots);\n        }\n        if (message.offerSnapshot !== undefined) {\n            obj.offerSnapshot = ResponseOfferSnapshot.toJSON(message.offerSnapshot);\n        }\n        if (message.loadSnapshotChunk !== undefined) {\n            obj.loadSnapshotChunk = ResponseLoadSnapshotChunk.toJSON(message.loadSnapshotChunk);\n        }\n        if (message.applySnapshotChunk !== undefined) {\n            obj.applySnapshotChunk = ResponseApplySnapshotChunk.toJSON(message.applySnapshotChunk);\n        }\n        return obj;\n    },\n    create(base) {\n        return Response.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        const message = createBaseResponse();\n        message.exception = (object.exception !== undefined && object.exception !== null)\n            ? ResponseException.fromPartial(object.exception)\n            : undefined;\n        message.echo = (object.echo !== undefined && object.echo !== null)\n            ? ResponseEcho.fromPartial(object.echo)\n            : undefined;\n        message.flush = (object.flush !== undefined && object.flush !== null)\n            ? ResponseFlush.fromPartial(object.flush)\n            : undefined;\n        message.info = (object.info !== undefined && object.info !== null)\n            ? ResponseInfo.fromPartial(object.info)\n            : undefined;\n        message.setOption = (object.setOption !== undefined && object.setOption !== null)\n            ? ResponseSetOption.fromPartial(object.setOption)\n            : undefined;\n        message.initChain = (object.initChain !== undefined && object.initChain !== null)\n            ? ResponseInitChain.fromPartial(object.initChain)\n            : undefined;\n        message.query = (object.query !== undefined && object.query !== null)\n            ? ResponseQuery.fromPartial(object.query)\n            : undefined;\n        message.beginBlock = (object.beginBlock !== undefined && object.beginBlock !== null)\n            ? ResponseBeginBlock.fromPartial(object.beginBlock)\n            : undefined;\n        message.checkTx = (object.checkTx !== undefined && object.checkTx !== null)\n            ? ResponseCheckTx.fromPartial(object.checkTx)\n            : undefined;\n        message.deliverTx = (object.deliverTx !== undefined && object.deliverTx !== null)\n            ? ResponseDeliverTx.fromPartial(object.deliverTx)\n            : undefined;\n        message.endBlock = (object.endBlock !== undefined && object.endBlock !== null)\n            ? ResponseEndBlock.fromPartial(object.endBlock)\n            : undefined;\n        message.commit = (object.commit !== undefined && object.commit !== null)\n            ? ResponseCommit.fromPartial(object.commit)\n            : undefined;\n        message.listSnapshots = (object.listSnapshots !== undefined && object.listSnapshots !== null)\n            ? ResponseListSnapshots.fromPartial(object.listSnapshots)\n            : undefined;\n        message.offerSnapshot = (object.offerSnapshot !== undefined && object.offerSnapshot !== null)\n            ? ResponseOfferSnapshot.fromPartial(object.offerSnapshot)\n            : undefined;\n        message.loadSnapshotChunk = (object.loadSnapshotChunk !== undefined && object.loadSnapshotChunk !== null)\n            ? ResponseLoadSnapshotChunk.fromPartial(object.loadSnapshotChunk)\n            : undefined;\n        message.applySnapshotChunk = (object.applySnapshotChunk !== undefined && object.applySnapshotChunk !== null)\n            ? ResponseApplySnapshotChunk.fromPartial(object.applySnapshotChunk)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseResponseException() {\n    return { error: \"\" };\n}\nexport const ResponseException = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.error !== \"\") {\n            writer.uint32(10).string(message.error);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseException();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.error = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { error: isSet(object.error) ? globalThis.String(object.error) : \"\" };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.error !== \"\") {\n            obj.error = message.error;\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseException.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseResponseException();\n        message.error = (_a = object.error) !== null && _a !== void 0 ? _a : \"\";\n        return message;\n    },\n};\nfunction createBaseResponseEcho() {\n    return { message: \"\" };\n}\nexport const ResponseEcho = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.message !== \"\") {\n            writer.uint32(10).string(message.message);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseEcho();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.message = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { message: isSet(object.message) ? globalThis.String(object.message) : \"\" };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.message !== \"\") {\n            obj.message = message.message;\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseEcho.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseResponseEcho();\n        message.message = (_a = object.message) !== null && _a !== void 0 ? _a : \"\";\n        return message;\n    },\n};\nfunction createBaseResponseFlush() {\n    return {};\n}\nexport const ResponseFlush = {\n    encode(_, writer = _m0.Writer.create()) {\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseFlush();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(_) {\n        return {};\n    },\n    toJSON(_) {\n        const obj = {};\n        return obj;\n    },\n    create(base) {\n        return ResponseFlush.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(_) {\n        const message = createBaseResponseFlush();\n        return message;\n    },\n};\nfunction createBaseResponseInfo() {\n    return { data: \"\", version: \"\", appVersion: \"0\", lastBlockHeight: \"0\", lastBlockAppHash: new Uint8Array(0) };\n}\nexport const ResponseInfo = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.data !== \"\") {\n            writer.uint32(10).string(message.data);\n        }\n        if (message.version !== \"\") {\n            writer.uint32(18).string(message.version);\n        }\n        if (message.appVersion !== \"0\") {\n            writer.uint32(24).uint64(message.appVersion);\n        }\n        if (message.lastBlockHeight !== \"0\") {\n            writer.uint32(32).int64(message.lastBlockHeight);\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            writer.uint32(42).bytes(message.lastBlockAppHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.data = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.version = reader.string();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.appVersion = longToString(reader.uint64());\n                    continue;\n                case 4:\n                    if (tag !== 32) {\n                        break;\n                    }\n                    message.lastBlockHeight = longToString(reader.int64());\n                    continue;\n                case 5:\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.lastBlockAppHash = reader.bytes();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            data: isSet(object.data) ? globalThis.String(object.data) : \"\",\n            version: isSet(object.version) ? globalThis.String(object.version) : \"\",\n            appVersion: isSet(object.appVersion) ? globalThis.String(object.appVersion) : \"0\",\n            lastBlockHeight: isSet(object.lastBlockHeight) ? globalThis.String(object.lastBlockHeight) : \"0\",\n            lastBlockAppHash: isSet(object.lastBlockAppHash) ? bytesFromBase64(object.lastBlockAppHash) : new Uint8Array(0),\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data !== \"\") {\n            obj.data = message.data;\n        }\n        if (message.version !== \"\") {\n            obj.version = message.version;\n        }\n        if (message.appVersion !== \"0\") {\n            obj.appVersion = message.appVersion;\n        }\n        if (message.lastBlockHeight !== \"0\") {\n            obj.lastBlockHeight = message.lastBlockHeight;\n        }\n        if (message.lastBlockAppHash.length !== 0) {\n            obj.lastBlockAppHash = base64FromBytes(message.lastBlockAppHash);\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseInfo.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e;\n        const message = createBaseResponseInfo();\n        message.data = (_a = object.data) !== null && _a !== void 0 ? _a : \"\";\n        message.version = (_b = object.version) !== null && _b !== void 0 ? _b : \"\";\n        message.appVersion = (_c = object.appVersion) !== null && _c !== void 0 ? _c : \"0\";\n        message.lastBlockHeight = (_d = object.lastBlockHeight) !== null && _d !== void 0 ? _d : \"0\";\n        message.lastBlockAppHash = (_e = object.lastBlockAppHash) !== null && _e !== void 0 ? _e : new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBaseResponseSetOption() {\n    return { code: 0, log: \"\", info: \"\" };\n}\nexport const ResponseSetOption = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseSetOption();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.code = reader.uint32();\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.log = reader.string();\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.info = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            code: isSet(object.code) ? globalThis.Number(object.code) : 0,\n            log: isSet(object.log) ? globalThis.String(object.log) : \"\",\n            info: isSet(object.info) ? globalThis.String(object.info) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.code !== 0) {\n            obj.code = Math.round(message.code);\n        }\n        if (message.log !== \"\") {\n            obj.log = message.log;\n        }\n        if (message.info !== \"\") {\n            obj.info = message.info;\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseSetOption.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseResponseSetOption();\n        message.code = (_a = object.code) !== null && _a !== void 0 ? _a : 0;\n        message.log = (_b = object.log) !== null && _b !== void 0 ? _b : \"\";\n        message.info = (_c = object.info) !== null && _c !== void 0 ? _c : \"\";\n        return message;\n    },\n};\nfunction createBaseResponseInitChain() {\n    return { consensusParams: undefined, validators: [], appHash: new Uint8Array(0) };\n}\nexport const ResponseInitChain = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.consensusParams !== undefined) {\n            ConsensusParams.encode(message.consensusParams, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.validators) {\n            ValidatorUpdate.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.appHash.length !== 0) {\n            writer.uint32(26).bytes(message.appHash);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseInitChain();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.consensusParams = ConsensusParams.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.validators.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.appHash = reader.bytes();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            consensusParams: isSet(object.consensusParams) ? ConsensusParams.fromJSON(object.consensusParams) : undefined,\n            validators: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.validators)\n                ? object.validators.map((e) => ValidatorUpdate.fromJSON(e))\n                : [],\n            appHash: isSet(object.appHash) ? bytesFromBase64(object.appHash) : new Uint8Array(0),\n        };\n    },\n    toJSON(message) {\n        var _a;\n        const obj = {};\n        if (message.consensusParams !== undefined) {\n            obj.consensusParams = ConsensusParams.toJSON(message.consensusParams);\n        }\n        if ((_a = message.validators) === null || _a === void 0 ? void 0 : _a.length) {\n            obj.validators = message.validators.map((e) => ValidatorUpdate.toJSON(e));\n        }\n        if (message.appHash.length !== 0) {\n            obj.appHash = base64FromBytes(message.appHash);\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseInitChain.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseResponseInitChain();\n        message.consensusParams = (object.consensusParams !== undefined && object.consensusParams !== null)\n            ? ConsensusParams.fromPartial(object.consensusParams)\n            : undefined;\n        message.validators = ((_a = object.validators) === null || _a === void 0 ? void 0 : _a.map((e) => ValidatorUpdate.fromPartial(e))) || [];\n        message.appHash = (_b = object.appHash) !== null && _b !== void 0 ? _b : new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBaseResponseQuery() {\n    return {\n        code: 0,\n        log: \"\",\n        info: \"\",\n        index: \"0\",\n        key: new Uint8Array(0),\n        value: new Uint8Array(0),\n        proofOps: undefined,\n        height: \"0\",\n        codespace: \"\",\n    };\n}\nexport const ResponseQuery = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.index !== \"0\") {\n            writer.uint32(40).int64(message.index);\n        }\n        if (message.key.length !== 0) {\n            writer.uint32(50).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(58).bytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            ProofOps.encode(message.proofOps, writer.uint32(66).fork()).ldelim();\n        }\n        if (message.height !== \"0\") {\n            writer.uint32(72).int64(message.height);\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(82).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseQuery();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.code = reader.uint32();\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.log = reader.string();\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.info = reader.string();\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.index = longToString(reader.int64());\n                    continue;\n                case 6:\n                    if (tag !== 50) {\n                        break;\n                    }\n                    message.key = reader.bytes();\n                    continue;\n                case 7:\n                    if (tag !== 58) {\n                        break;\n                    }\n                    message.value = reader.bytes();\n                    continue;\n                case 8:\n                    if (tag !== 66) {\n                        break;\n                    }\n                    message.proofOps = ProofOps.decode(reader, reader.uint32());\n                    continue;\n                case 9:\n                    if (tag !== 72) {\n                        break;\n                    }\n                    message.height = longToString(reader.int64());\n                    continue;\n                case 10:\n                    if (tag !== 82) {\n                        break;\n                    }\n                    message.codespace = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            code: isSet(object.code) ? globalThis.Number(object.code) : 0,\n            log: isSet(object.log) ? globalThis.String(object.log) : \"\",\n            info: isSet(object.info) ? globalThis.String(object.info) : \"\",\n            index: isSet(object.index) ? globalThis.String(object.index) : \"0\",\n            key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(0),\n            value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(0),\n            proofOps: isSet(object.proofOps) ? ProofOps.fromJSON(object.proofOps) : undefined,\n            height: isSet(object.height) ? globalThis.String(object.height) : \"0\",\n            codespace: isSet(object.codespace) ? globalThis.String(object.codespace) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.code !== 0) {\n            obj.code = Math.round(message.code);\n        }\n        if (message.log !== \"\") {\n            obj.log = message.log;\n        }\n        if (message.info !== \"\") {\n            obj.info = message.info;\n        }\n        if (message.index !== \"0\") {\n            obj.index = message.index;\n        }\n        if (message.key.length !== 0) {\n            obj.key = base64FromBytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            obj.value = base64FromBytes(message.value);\n        }\n        if (message.proofOps !== undefined) {\n            obj.proofOps = ProofOps.toJSON(message.proofOps);\n        }\n        if (message.height !== \"0\") {\n            obj.height = message.height;\n        }\n        if (message.codespace !== \"\") {\n            obj.codespace = message.codespace;\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseQuery.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const message = createBaseResponseQuery();\n        message.code = (_a = object.code) !== null && _a !== void 0 ? _a : 0;\n        message.log = (_b = object.log) !== null && _b !== void 0 ? _b : \"\";\n        message.info = (_c = object.info) !== null && _c !== void 0 ? _c : \"\";\n        message.index = (_d = object.index) !== null && _d !== void 0 ? _d : \"0\";\n        message.key = (_e = object.key) !== null && _e !== void 0 ? _e : new Uint8Array(0);\n        message.value = (_f = object.value) !== null && _f !== void 0 ? _f : new Uint8Array(0);\n        message.proofOps = (object.proofOps !== undefined && object.proofOps !== null)\n            ? ProofOps.fromPartial(object.proofOps)\n            : undefined;\n        message.height = (_g = object.height) !== null && _g !== void 0 ? _g : \"0\";\n        message.codespace = (_h = object.codespace) !== null && _h !== void 0 ? _h : \"\";\n        return message;\n    },\n};\nfunction createBaseResponseBeginBlock() {\n    return { events: [] };\n}\nexport const ResponseBeginBlock = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseBeginBlock();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { events: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map((e) => Event.fromJSON(e)) : [] };\n    },\n    toJSON(message) {\n        var _a;\n        const obj = {};\n        if ((_a = message.events) === null || _a === void 0 ? void 0 : _a.length) {\n            obj.events = message.events.map((e) => Event.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseBeginBlock.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseResponseBeginBlock();\n        message.events = ((_a = object.events) === null || _a === void 0 ? void 0 : _a.map((e) => Event.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseResponseCheckTx() {\n    return {\n        code: 0,\n        data: new Uint8Array(0),\n        log: \"\",\n        info: \"\",\n        gasWanted: \"0\",\n        gasUsed: \"0\",\n        events: [],\n        codespace: \"\",\n        sender: \"\",\n        priority: \"0\",\n        mempoolError: \"\",\n    };\n}\nexport const ResponseCheckTx = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== \"0\") {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== \"0\") {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        if (message.sender !== \"\") {\n            writer.uint32(74).string(message.sender);\n        }\n        if (message.priority !== \"0\") {\n            writer.uint32(80).int64(message.priority);\n        }\n        if (message.mempoolError !== \"\") {\n            writer.uint32(90).string(message.mempoolError);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseCheckTx();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.code = reader.uint32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.data = reader.bytes();\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.log = reader.string();\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.info = reader.string();\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.gasWanted = longToString(reader.int64());\n                    continue;\n                case 6:\n                    if (tag !== 48) {\n                        break;\n                    }\n                    message.gasUsed = longToString(reader.int64());\n                    continue;\n                case 7:\n                    if (tag !== 58) {\n                        break;\n                    }\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    continue;\n                case 8:\n                    if (tag !== 66) {\n                        break;\n                    }\n                    message.codespace = reader.string();\n                    continue;\n                case 9:\n                    if (tag !== 74) {\n                        break;\n                    }\n                    message.sender = reader.string();\n                    continue;\n                case 10:\n                    if (tag !== 80) {\n                        break;\n                    }\n                    message.priority = longToString(reader.int64());\n                    continue;\n                case 11:\n                    if (tag !== 90) {\n                        break;\n                    }\n                    message.mempoolError = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            code: isSet(object.code) ? globalThis.Number(object.code) : 0,\n            data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(0),\n            log: isSet(object.log) ? globalThis.String(object.log) : \"\",\n            info: isSet(object.info) ? globalThis.String(object.info) : \"\",\n            gasWanted: isSet(object.gas_wanted) ? globalThis.String(object.gas_wanted) : \"0\",\n            gasUsed: isSet(object.gas_used) ? globalThis.String(object.gas_used) : \"0\",\n            events: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map((e) => Event.fromJSON(e)) : [],\n            codespace: isSet(object.codespace) ? globalThis.String(object.codespace) : \"\",\n            sender: isSet(object.sender) ? globalThis.String(object.sender) : \"\",\n            priority: isSet(object.priority) ? globalThis.String(object.priority) : \"0\",\n            mempoolError: isSet(object.mempoolError) ? globalThis.String(object.mempoolError) : \"\",\n        };\n    },\n    toJSON(message) {\n        var _a;\n        const obj = {};\n        if (message.code !== 0) {\n            obj.code = Math.round(message.code);\n        }\n        if (message.data.length !== 0) {\n            obj.data = base64FromBytes(message.data);\n        }\n        if (message.log !== \"\") {\n            obj.log = message.log;\n        }\n        if (message.info !== \"\") {\n            obj.info = message.info;\n        }\n        if (message.gasWanted !== \"0\") {\n            obj.gas_wanted = message.gasWanted;\n        }\n        if (message.gasUsed !== \"0\") {\n            obj.gas_used = message.gasUsed;\n        }\n        if ((_a = message.events) === null || _a === void 0 ? void 0 : _a.length) {\n            obj.events = message.events.map((e) => Event.toJSON(e));\n        }\n        if (message.codespace !== \"\") {\n            obj.codespace = message.codespace;\n        }\n        if (message.sender !== \"\") {\n            obj.sender = message.sender;\n        }\n        if (message.priority !== \"0\") {\n            obj.priority = message.priority;\n        }\n        if (message.mempoolError !== \"\") {\n            obj.mempoolError = message.mempoolError;\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseCheckTx.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n        const message = createBaseResponseCheckTx();\n        message.code = (_a = object.code) !== null && _a !== void 0 ? _a : 0;\n        message.data = (_b = object.data) !== null && _b !== void 0 ? _b : new Uint8Array(0);\n        message.log = (_c = object.log) !== null && _c !== void 0 ? _c : \"\";\n        message.info = (_d = object.info) !== null && _d !== void 0 ? _d : \"\";\n        message.gasWanted = (_e = object.gasWanted) !== null && _e !== void 0 ? _e : \"0\";\n        message.gasUsed = (_f = object.gasUsed) !== null && _f !== void 0 ? _f : \"0\";\n        message.events = ((_g = object.events) === null || _g === void 0 ? void 0 : _g.map((e) => Event.fromPartial(e))) || [];\n        message.codespace = (_h = object.codespace) !== null && _h !== void 0 ? _h : \"\";\n        message.sender = (_j = object.sender) !== null && _j !== void 0 ? _j : \"\";\n        message.priority = (_k = object.priority) !== null && _k !== void 0 ? _k : \"0\";\n        message.mempoolError = (_l = object.mempoolError) !== null && _l !== void 0 ? _l : \"\";\n        return message;\n    },\n};\nfunction createBaseResponseDeliverTx() {\n    return {\n        code: 0,\n        data: new Uint8Array(0),\n        log: \"\",\n        info: \"\",\n        gasWanted: \"0\",\n        gasUsed: \"0\",\n        events: [],\n        codespace: \"\",\n    };\n}\nexport const ResponseDeliverTx = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.code !== 0) {\n            writer.uint32(8).uint32(message.code);\n        }\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.log !== \"\") {\n            writer.uint32(26).string(message.log);\n        }\n        if (message.info !== \"\") {\n            writer.uint32(34).string(message.info);\n        }\n        if (message.gasWanted !== \"0\") {\n            writer.uint32(40).int64(message.gasWanted);\n        }\n        if (message.gasUsed !== \"0\") {\n            writer.uint32(48).int64(message.gasUsed);\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(58).fork()).ldelim();\n        }\n        if (message.codespace !== \"\") {\n            writer.uint32(66).string(message.codespace);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseDeliverTx();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.code = reader.uint32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.data = reader.bytes();\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.log = reader.string();\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.info = reader.string();\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.gasWanted = longToString(reader.int64());\n                    continue;\n                case 6:\n                    if (tag !== 48) {\n                        break;\n                    }\n                    message.gasUsed = longToString(reader.int64());\n                    continue;\n                case 7:\n                    if (tag !== 58) {\n                        break;\n                    }\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    continue;\n                case 8:\n                    if (tag !== 66) {\n                        break;\n                    }\n                    message.codespace = reader.string();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            code: isSet(object.code) ? globalThis.Number(object.code) : 0,\n            data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(0),\n            log: isSet(object.log) ? globalThis.String(object.log) : \"\",\n            info: isSet(object.info) ? globalThis.String(object.info) : \"\",\n            gasWanted: isSet(object.gas_wanted) ? globalThis.String(object.gas_wanted) : \"0\",\n            gasUsed: isSet(object.gas_used) ? globalThis.String(object.gas_used) : \"0\",\n            events: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map((e) => Event.fromJSON(e)) : [],\n            codespace: isSet(object.codespace) ? globalThis.String(object.codespace) : \"\",\n        };\n    },\n    toJSON(message) {\n        var _a;\n        const obj = {};\n        if (message.code !== 0) {\n            obj.code = Math.round(message.code);\n        }\n        if (message.data.length !== 0) {\n            obj.data = base64FromBytes(message.data);\n        }\n        if (message.log !== \"\") {\n            obj.log = message.log;\n        }\n        if (message.info !== \"\") {\n            obj.info = message.info;\n        }\n        if (message.gasWanted !== \"0\") {\n            obj.gas_wanted = message.gasWanted;\n        }\n        if (message.gasUsed !== \"0\") {\n            obj.gas_used = message.gasUsed;\n        }\n        if ((_a = message.events) === null || _a === void 0 ? void 0 : _a.length) {\n            obj.events = message.events.map((e) => Event.toJSON(e));\n        }\n        if (message.codespace !== \"\") {\n            obj.codespace = message.codespace;\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseDeliverTx.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const message = createBaseResponseDeliverTx();\n        message.code = (_a = object.code) !== null && _a !== void 0 ? _a : 0;\n        message.data = (_b = object.data) !== null && _b !== void 0 ? _b : new Uint8Array(0);\n        message.log = (_c = object.log) !== null && _c !== void 0 ? _c : \"\";\n        message.info = (_d = object.info) !== null && _d !== void 0 ? _d : \"\";\n        message.gasWanted = (_e = object.gasWanted) !== null && _e !== void 0 ? _e : \"0\";\n        message.gasUsed = (_f = object.gasUsed) !== null && _f !== void 0 ? _f : \"0\";\n        message.events = ((_g = object.events) === null || _g === void 0 ? void 0 : _g.map((e) => Event.fromPartial(e))) || [];\n        message.codespace = (_h = object.codespace) !== null && _h !== void 0 ? _h : \"\";\n        return message;\n    },\n};\nfunction createBaseResponseEndBlock() {\n    return { validatorUpdates: [], consensusParamUpdates: undefined, events: [] };\n}\nexport const ResponseEndBlock = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.validatorUpdates) {\n            ValidatorUpdate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            ConsensusParams.encode(message.consensusParamUpdates, writer.uint32(18).fork()).ldelim();\n        }\n        for (const v of message.events) {\n            Event.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseEndBlock();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.validatorUpdates.push(ValidatorUpdate.decode(reader, reader.uint32()));\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.consensusParamUpdates = ConsensusParams.decode(reader, reader.uint32());\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.events.push(Event.decode(reader, reader.uint32()));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            validatorUpdates: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.validatorUpdates)\n                ? object.validatorUpdates.map((e) => ValidatorUpdate.fromJSON(e))\n                : [],\n            consensusParamUpdates: isSet(object.consensusParamUpdates)\n                ? ConsensusParams.fromJSON(object.consensusParamUpdates)\n                : undefined,\n            events: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.events) ? object.events.map((e) => Event.fromJSON(e)) : [],\n        };\n    },\n    toJSON(message) {\n        var _a, _b;\n        const obj = {};\n        if ((_a = message.validatorUpdates) === null || _a === void 0 ? void 0 : _a.length) {\n            obj.validatorUpdates = message.validatorUpdates.map((e) => ValidatorUpdate.toJSON(e));\n        }\n        if (message.consensusParamUpdates !== undefined) {\n            obj.consensusParamUpdates = ConsensusParams.toJSON(message.consensusParamUpdates);\n        }\n        if ((_b = message.events) === null || _b === void 0 ? void 0 : _b.length) {\n            obj.events = message.events.map((e) => Event.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseEndBlock.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseResponseEndBlock();\n        message.validatorUpdates = ((_a = object.validatorUpdates) === null || _a === void 0 ? void 0 : _a.map((e) => ValidatorUpdate.fromPartial(e))) || [];\n        message.consensusParamUpdates =\n            (object.consensusParamUpdates !== undefined && object.consensusParamUpdates !== null)\n                ? ConsensusParams.fromPartial(object.consensusParamUpdates)\n                : undefined;\n        message.events = ((_b = object.events) === null || _b === void 0 ? void 0 : _b.map((e) => Event.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseResponseCommit() {\n    return { data: new Uint8Array(0), retainHeight: \"0\" };\n}\nexport const ResponseCommit = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.data.length !== 0) {\n            writer.uint32(18).bytes(message.data);\n        }\n        if (message.retainHeight !== \"0\") {\n            writer.uint32(24).int64(message.retainHeight);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseCommit();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.data = reader.bytes();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.retainHeight = longToString(reader.int64());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            data: isSet(object.data) ? bytesFromBase64(object.data) : new Uint8Array(0),\n            retainHeight: isSet(object.retainHeight) ? globalThis.String(object.retainHeight) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.data.length !== 0) {\n            obj.data = base64FromBytes(message.data);\n        }\n        if (message.retainHeight !== \"0\") {\n            obj.retainHeight = message.retainHeight;\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseCommit.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseResponseCommit();\n        message.data = (_a = object.data) !== null && _a !== void 0 ? _a : new Uint8Array(0);\n        message.retainHeight = (_b = object.retainHeight) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nfunction createBaseResponseListSnapshots() {\n    return { snapshots: [] };\n}\nexport const ResponseListSnapshots = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.snapshots) {\n            Snapshot.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseListSnapshots();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.snapshots.push(Snapshot.decode(reader, reader.uint32()));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            snapshots: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.snapshots)\n                ? object.snapshots.map((e) => Snapshot.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        var _a;\n        const obj = {};\n        if ((_a = message.snapshots) === null || _a === void 0 ? void 0 : _a.length) {\n            obj.snapshots = message.snapshots.map((e) => Snapshot.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseListSnapshots.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseResponseListSnapshots();\n        message.snapshots = ((_a = object.snapshots) === null || _a === void 0 ? void 0 : _a.map((e) => Snapshot.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseResponseOfferSnapshot() {\n    return { result: 0 };\n}\nexport const ResponseOfferSnapshot = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseOfferSnapshot();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.result = reader.int32();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { result: isSet(object.result) ? responseOfferSnapshot_ResultFromJSON(object.result) : 0 };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.result !== 0) {\n            obj.result = responseOfferSnapshot_ResultToJSON(message.result);\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseOfferSnapshot.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseResponseOfferSnapshot();\n        message.result = (_a = object.result) !== null && _a !== void 0 ? _a : 0;\n        return message;\n    },\n};\nfunction createBaseResponseLoadSnapshotChunk() {\n    return { chunk: new Uint8Array(0) };\n}\nexport const ResponseLoadSnapshotChunk = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.chunk.length !== 0) {\n            writer.uint32(10).bytes(message.chunk);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseLoadSnapshotChunk();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.chunk = reader.bytes();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { chunk: isSet(object.chunk) ? bytesFromBase64(object.chunk) : new Uint8Array(0) };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.chunk.length !== 0) {\n            obj.chunk = base64FromBytes(message.chunk);\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseLoadSnapshotChunk.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseResponseLoadSnapshotChunk();\n        message.chunk = (_a = object.chunk) !== null && _a !== void 0 ? _a : new Uint8Array(0);\n        return message;\n    },\n};\nfunction createBaseResponseApplySnapshotChunk() {\n    return { result: 0, refetchChunks: [], rejectSenders: [] };\n}\nexport const ResponseApplySnapshotChunk = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.result !== 0) {\n            writer.uint32(8).int32(message.result);\n        }\n        writer.uint32(18).fork();\n        for (const v of message.refetchChunks) {\n            writer.uint32(v);\n        }\n        writer.ldelim();\n        for (const v of message.rejectSenders) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseResponseApplySnapshotChunk();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.result = reader.int32();\n                    continue;\n                case 2:\n                    if (tag === 16) {\n                        message.refetchChunks.push(reader.uint32());\n                        continue;\n                    }\n                    if (tag === 18) {\n                        const end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2) {\n                            message.refetchChunks.push(reader.uint32());\n                        }\n                        continue;\n                    }\n                    break;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.rejectSenders.push(reader.string());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            result: isSet(object.result) ? responseApplySnapshotChunk_ResultFromJSON(object.result) : 0,\n            refetchChunks: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.refetchChunks)\n                ? object.refetchChunks.map((e) => globalThis.Number(e))\n                : [],\n            rejectSenders: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.rejectSenders)\n                ? object.rejectSenders.map((e) => globalThis.String(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        var _a, _b;\n        const obj = {};\n        if (message.result !== 0) {\n            obj.result = responseApplySnapshotChunk_ResultToJSON(message.result);\n        }\n        if ((_a = message.refetchChunks) === null || _a === void 0 ? void 0 : _a.length) {\n            obj.refetchChunks = message.refetchChunks.map((e) => Math.round(e));\n        }\n        if ((_b = message.rejectSenders) === null || _b === void 0 ? void 0 : _b.length) {\n            obj.rejectSenders = message.rejectSenders;\n        }\n        return obj;\n    },\n    create(base) {\n        return ResponseApplySnapshotChunk.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseResponseApplySnapshotChunk();\n        message.result = (_a = object.result) !== null && _a !== void 0 ? _a : 0;\n        message.refetchChunks = ((_b = object.refetchChunks) === null || _b === void 0 ? void 0 : _b.map((e) => e)) || [];\n        message.rejectSenders = ((_c = object.rejectSenders) === null || _c === void 0 ? void 0 : _c.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseConsensusParams() {\n    return { block: undefined, evidence: undefined, validator: undefined, version: undefined };\n}\nexport const ConsensusParams = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.block !== undefined) {\n            BlockParams.encode(message.block, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.evidence !== undefined) {\n            EvidenceParams.encode(message.evidence, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.validator !== undefined) {\n            ValidatorParams.encode(message.validator, writer.uint32(26).fork()).ldelim();\n        }\n        if (message.version !== undefined) {\n            VersionParams.encode(message.version, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseConsensusParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.block = BlockParams.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.evidence = EvidenceParams.decode(reader, reader.uint32());\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.validator = ValidatorParams.decode(reader, reader.uint32());\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.version = VersionParams.decode(reader, reader.uint32());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            block: isSet(object.block) ? BlockParams.fromJSON(object.block) : undefined,\n            evidence: isSet(object.evidence) ? EvidenceParams.fromJSON(object.evidence) : undefined,\n            validator: isSet(object.validator) ? ValidatorParams.fromJSON(object.validator) : undefined,\n            version: isSet(object.version) ? VersionParams.fromJSON(object.version) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.block !== undefined) {\n            obj.block = BlockParams.toJSON(message.block);\n        }\n        if (message.evidence !== undefined) {\n            obj.evidence = EvidenceParams.toJSON(message.evidence);\n        }\n        if (message.validator !== undefined) {\n            obj.validator = ValidatorParams.toJSON(message.validator);\n        }\n        if (message.version !== undefined) {\n            obj.version = VersionParams.toJSON(message.version);\n        }\n        return obj;\n    },\n    create(base) {\n        return ConsensusParams.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        const message = createBaseConsensusParams();\n        message.block = (object.block !== undefined && object.block !== null)\n            ? BlockParams.fromPartial(object.block)\n            : undefined;\n        message.evidence = (object.evidence !== undefined && object.evidence !== null)\n            ? EvidenceParams.fromPartial(object.evidence)\n            : undefined;\n        message.validator = (object.validator !== undefined && object.validator !== null)\n            ? ValidatorParams.fromPartial(object.validator)\n            : undefined;\n        message.version = (object.version !== undefined && object.version !== null)\n            ? VersionParams.fromPartial(object.version)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseBlockParams() {\n    return { maxBytes: \"0\", maxGas: \"0\" };\n}\nexport const BlockParams = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.maxBytes !== \"0\") {\n            writer.uint32(8).int64(message.maxBytes);\n        }\n        if (message.maxGas !== \"0\") {\n            writer.uint32(16).int64(message.maxGas);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBlockParams();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.maxBytes = longToString(reader.int64());\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.maxGas = longToString(reader.int64());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            maxBytes: isSet(object.maxBytes) ? globalThis.String(object.maxBytes) : \"0\",\n            maxGas: isSet(object.maxGas) ? globalThis.String(object.maxGas) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.maxBytes !== \"0\") {\n            obj.maxBytes = message.maxBytes;\n        }\n        if (message.maxGas !== \"0\") {\n            obj.maxGas = message.maxGas;\n        }\n        return obj;\n    },\n    create(base) {\n        return BlockParams.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseBlockParams();\n        message.maxBytes = (_a = object.maxBytes) !== null && _a !== void 0 ? _a : \"0\";\n        message.maxGas = (_b = object.maxGas) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nfunction createBaseLastCommitInfo() {\n    return { round: 0, votes: [] };\n}\nexport const LastCommitInfo = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.round !== 0) {\n            writer.uint32(8).int32(message.round);\n        }\n        for (const v of message.votes) {\n            VoteInfo.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLastCommitInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.round = reader.int32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.votes.push(VoteInfo.decode(reader, reader.uint32()));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            round: isSet(object.round) ? globalThis.Number(object.round) : 0,\n            votes: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.votes) ? object.votes.map((e) => VoteInfo.fromJSON(e)) : [],\n        };\n    },\n    toJSON(message) {\n        var _a;\n        const obj = {};\n        if (message.round !== 0) {\n            obj.round = Math.round(message.round);\n        }\n        if ((_a = message.votes) === null || _a === void 0 ? void 0 : _a.length) {\n            obj.votes = message.votes.map((e) => VoteInfo.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return LastCommitInfo.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseLastCommitInfo();\n        message.round = (_a = object.round) !== null && _a !== void 0 ? _a : 0;\n        message.votes = ((_b = object.votes) === null || _b === void 0 ? void 0 : _b.map((e) => VoteInfo.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseEvent() {\n    return { type: \"\", attributes: [] };\n}\nexport const Event = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.type !== \"\") {\n            writer.uint32(10).string(message.type);\n        }\n        for (const v of message.attributes) {\n            EventAttribute.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEvent();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.type = reader.string();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.attributes.push(EventAttribute.decode(reader, reader.uint32()));\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            type: isSet(object.type) ? globalThis.String(object.type) : \"\",\n            attributes: globalThis.Array.isArray(object === null || object === void 0 ? void 0 : object.attributes)\n                ? object.attributes.map((e) => EventAttribute.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        var _a;\n        const obj = {};\n        if (message.type !== \"\") {\n            obj.type = message.type;\n        }\n        if ((_a = message.attributes) === null || _a === void 0 ? void 0 : _a.length) {\n            obj.attributes = message.attributes.map((e) => EventAttribute.toJSON(e));\n        }\n        return obj;\n    },\n    create(base) {\n        return Event.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseEvent();\n        message.type = (_a = object.type) !== null && _a !== void 0 ? _a : \"\";\n        message.attributes = ((_b = object.attributes) === null || _b === void 0 ? void 0 : _b.map((e) => EventAttribute.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseEventAttribute() {\n    return { key: new Uint8Array(0), value: new Uint8Array(0), index: false };\n}\nexport const EventAttribute = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.key.length !== 0) {\n            writer.uint32(10).bytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            writer.uint32(18).bytes(message.value);\n        }\n        if (message.index === true) {\n            writer.uint32(24).bool(message.index);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEventAttribute();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.key = reader.bytes();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.value = reader.bytes();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.index = reader.bool();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            key: isSet(object.key) ? bytesFromBase64(object.key) : new Uint8Array(0),\n            value: isSet(object.value) ? bytesFromBase64(object.value) : new Uint8Array(0),\n            index: isSet(object.index) ? globalThis.Boolean(object.index) : false,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.key.length !== 0) {\n            obj.key = base64FromBytes(message.key);\n        }\n        if (message.value.length !== 0) {\n            obj.value = base64FromBytes(message.value);\n        }\n        if (message.index === true) {\n            obj.index = message.index;\n        }\n        return obj;\n    },\n    create(base) {\n        return EventAttribute.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseEventAttribute();\n        message.key = (_a = object.key) !== null && _a !== void 0 ? _a : new Uint8Array(0);\n        message.value = (_b = object.value) !== null && _b !== void 0 ? _b : new Uint8Array(0);\n        message.index = (_c = object.index) !== null && _c !== void 0 ? _c : false;\n        return message;\n    },\n};\nfunction createBaseTxResult() {\n    return { height: \"0\", index: 0, tx: new Uint8Array(0), result: undefined };\n}\nexport const TxResult = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.height !== \"0\") {\n            writer.uint32(8).int64(message.height);\n        }\n        if (message.index !== 0) {\n            writer.uint32(16).uint32(message.index);\n        }\n        if (message.tx.length !== 0) {\n            writer.uint32(26).bytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            ResponseDeliverTx.encode(message.result, writer.uint32(34).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTxResult();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.height = longToString(reader.int64());\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.index = reader.uint32();\n                    continue;\n                case 3:\n                    if (tag !== 26) {\n                        break;\n                    }\n                    message.tx = reader.bytes();\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.result = ResponseDeliverTx.decode(reader, reader.uint32());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            height: isSet(object.height) ? globalThis.String(object.height) : \"0\",\n            index: isSet(object.index) ? globalThis.Number(object.index) : 0,\n            tx: isSet(object.tx) ? bytesFromBase64(object.tx) : new Uint8Array(0),\n            result: isSet(object.result) ? ResponseDeliverTx.fromJSON(object.result) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.height !== \"0\") {\n            obj.height = message.height;\n        }\n        if (message.index !== 0) {\n            obj.index = Math.round(message.index);\n        }\n        if (message.tx.length !== 0) {\n            obj.tx = base64FromBytes(message.tx);\n        }\n        if (message.result !== undefined) {\n            obj.result = ResponseDeliverTx.toJSON(message.result);\n        }\n        return obj;\n    },\n    create(base) {\n        return TxResult.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseTxResult();\n        message.height = (_a = object.height) !== null && _a !== void 0 ? _a : \"0\";\n        message.index = (_b = object.index) !== null && _b !== void 0 ? _b : 0;\n        message.tx = (_c = object.tx) !== null && _c !== void 0 ? _c : new Uint8Array(0);\n        message.result = (object.result !== undefined && object.result !== null)\n            ? ResponseDeliverTx.fromPartial(object.result)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseValidator() {\n    return { address: new Uint8Array(0), power: \"0\" };\n}\nexport const Validator = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.address.length !== 0) {\n            writer.uint32(10).bytes(message.address);\n        }\n        if (message.power !== \"0\") {\n            writer.uint32(24).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidator();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.address = reader.bytes();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.power = longToString(reader.int64());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            address: isSet(object.address) ? bytesFromBase64(object.address) : new Uint8Array(0),\n            power: isSet(object.power) ? globalThis.String(object.power) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.address.length !== 0) {\n            obj.address = base64FromBytes(message.address);\n        }\n        if (message.power !== \"0\") {\n            obj.power = message.power;\n        }\n        return obj;\n    },\n    create(base) {\n        return Validator.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseValidator();\n        message.address = (_a = object.address) !== null && _a !== void 0 ? _a : new Uint8Array(0);\n        message.power = (_b = object.power) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nfunction createBaseValidatorUpdate() {\n    return { pubKey: undefined, power: \"0\" };\n}\nexport const ValidatorUpdate = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.pubKey !== undefined) {\n            PublicKey.encode(message.pubKey, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.power !== \"0\") {\n            writer.uint32(16).int64(message.power);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseValidatorUpdate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.pubKey = PublicKey.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.power = longToString(reader.int64());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            pubKey: isSet(object.pubKey) ? PublicKey.fromJSON(object.pubKey) : undefined,\n            power: isSet(object.power) ? globalThis.String(object.power) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.pubKey !== undefined) {\n            obj.pubKey = PublicKey.toJSON(message.pubKey);\n        }\n        if (message.power !== \"0\") {\n            obj.power = message.power;\n        }\n        return obj;\n    },\n    create(base) {\n        return ValidatorUpdate.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseValidatorUpdate();\n        message.pubKey = (object.pubKey !== undefined && object.pubKey !== null)\n            ? PublicKey.fromPartial(object.pubKey)\n            : undefined;\n        message.power = (_a = object.power) !== null && _a !== void 0 ? _a : \"0\";\n        return message;\n    },\n};\nfunction createBaseVoteInfo() {\n    return { validator: undefined, signedLastBlock: false };\n}\nexport const VoteInfo = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.signedLastBlock === true) {\n            writer.uint32(16).bool(message.signedLastBlock);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseVoteInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 10) {\n                        break;\n                    }\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.signedLastBlock = reader.bool();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            validator: isSet(object.validator) ? Validator.fromJSON(object.validator) : undefined,\n            signedLastBlock: isSet(object.signedLastBlock) ? globalThis.Boolean(object.signedLastBlock) : false,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.validator !== undefined) {\n            obj.validator = Validator.toJSON(message.validator);\n        }\n        if (message.signedLastBlock === true) {\n            obj.signedLastBlock = message.signedLastBlock;\n        }\n        return obj;\n    },\n    create(base) {\n        return VoteInfo.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseVoteInfo();\n        message.validator = (object.validator !== undefined && object.validator !== null)\n            ? Validator.fromPartial(object.validator)\n            : undefined;\n        message.signedLastBlock = (_a = object.signedLastBlock) !== null && _a !== void 0 ? _a : false;\n        return message;\n    },\n};\nfunction createBaseEvidence() {\n    return { type: 0, validator: undefined, height: \"0\", time: undefined, totalVotingPower: \"0\" };\n}\nexport const Evidence = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.type !== 0) {\n            writer.uint32(8).int32(message.type);\n        }\n        if (message.validator !== undefined) {\n            Validator.encode(message.validator, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.height !== \"0\") {\n            writer.uint32(24).int64(message.height);\n        }\n        if (message.time !== undefined) {\n            Timestamp.encode(toTimestamp(message.time), writer.uint32(34).fork()).ldelim();\n        }\n        if (message.totalVotingPower !== \"0\") {\n            writer.uint32(40).int64(message.totalVotingPower);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseEvidence();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.type = reader.int32();\n                    continue;\n                case 2:\n                    if (tag !== 18) {\n                        break;\n                    }\n                    message.validator = Validator.decode(reader, reader.uint32());\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.height = longToString(reader.int64());\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.time = fromTimestamp(Timestamp.decode(reader, reader.uint32()));\n                    continue;\n                case 5:\n                    if (tag !== 40) {\n                        break;\n                    }\n                    message.totalVotingPower = longToString(reader.int64());\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            type: isSet(object.type) ? evidenceTypeFromJSON(object.type) : 0,\n            validator: isSet(object.validator) ? Validator.fromJSON(object.validator) : undefined,\n            height: isSet(object.height) ? globalThis.String(object.height) : \"0\",\n            time: isSet(object.time) ? fromJsonTimestamp(object.time) : undefined,\n            totalVotingPower: isSet(object.totalVotingPower) ? globalThis.String(object.totalVotingPower) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.type !== 0) {\n            obj.type = evidenceTypeToJSON(message.type);\n        }\n        if (message.validator !== undefined) {\n            obj.validator = Validator.toJSON(message.validator);\n        }\n        if (message.height !== \"0\") {\n            obj.height = message.height;\n        }\n        if (message.time !== undefined) {\n            obj.time = message.time.toISOString();\n        }\n        if (message.totalVotingPower !== \"0\") {\n            obj.totalVotingPower = message.totalVotingPower;\n        }\n        return obj;\n    },\n    create(base) {\n        return Evidence.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBaseEvidence();\n        message.type = (_a = object.type) !== null && _a !== void 0 ? _a : 0;\n        message.validator = (object.validator !== undefined && object.validator !== null)\n            ? Validator.fromPartial(object.validator)\n            : undefined;\n        message.height = (_b = object.height) !== null && _b !== void 0 ? _b : \"0\";\n        message.time = (_c = object.time) !== null && _c !== void 0 ? _c : undefined;\n        message.totalVotingPower = (_d = object.totalVotingPower) !== null && _d !== void 0 ? _d : \"0\";\n        return message;\n    },\n};\nfunction createBaseSnapshot() {\n    return { height: \"0\", format: 0, chunks: 0, hash: new Uint8Array(0), metadata: new Uint8Array(0) };\n}\nexport const Snapshot = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.height !== \"0\") {\n            writer.uint32(8).uint64(message.height);\n        }\n        if (message.format !== 0) {\n            writer.uint32(16).uint32(message.format);\n        }\n        if (message.chunks !== 0) {\n            writer.uint32(24).uint32(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            writer.uint32(34).bytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            writer.uint32(42).bytes(message.metadata);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : _m0.Reader.create(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSnapshot();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    if (tag !== 8) {\n                        break;\n                    }\n                    message.height = longToString(reader.uint64());\n                    continue;\n                case 2:\n                    if (tag !== 16) {\n                        break;\n                    }\n                    message.format = reader.uint32();\n                    continue;\n                case 3:\n                    if (tag !== 24) {\n                        break;\n                    }\n                    message.chunks = reader.uint32();\n                    continue;\n                case 4:\n                    if (tag !== 34) {\n                        break;\n                    }\n                    message.hash = reader.bytes();\n                    continue;\n                case 5:\n                    if (tag !== 42) {\n                        break;\n                    }\n                    message.metadata = reader.bytes();\n                    continue;\n            }\n            if ((tag & 7) === 4 || tag === 0) {\n                break;\n            }\n            reader.skipType(tag & 7);\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            height: isSet(object.height) ? globalThis.String(object.height) : \"0\",\n            format: isSet(object.format) ? globalThis.Number(object.format) : 0,\n            chunks: isSet(object.chunks) ? globalThis.Number(object.chunks) : 0,\n            hash: isSet(object.hash) ? bytesFromBase64(object.hash) : new Uint8Array(0),\n            metadata: isSet(object.metadata) ? bytesFromBase64(object.metadata) : new Uint8Array(0),\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.height !== \"0\") {\n            obj.height = message.height;\n        }\n        if (message.format !== 0) {\n            obj.format = Math.round(message.format);\n        }\n        if (message.chunks !== 0) {\n            obj.chunks = Math.round(message.chunks);\n        }\n        if (message.hash.length !== 0) {\n            obj.hash = base64FromBytes(message.hash);\n        }\n        if (message.metadata.length !== 0) {\n            obj.metadata = base64FromBytes(message.metadata);\n        }\n        return obj;\n    },\n    create(base) {\n        return Snapshot.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e;\n        const message = createBaseSnapshot();\n        message.height = (_a = object.height) !== null && _a !== void 0 ? _a : \"0\";\n        message.format = (_b = object.format) !== null && _b !== void 0 ? _b : 0;\n        message.chunks = (_c = object.chunks) !== null && _c !== void 0 ? _c : 0;\n        message.hash = (_d = object.hash) !== null && _d !== void 0 ? _d : new Uint8Array(0);\n        message.metadata = (_e = object.metadata) !== null && _e !== void 0 ? _e : new Uint8Array(0);\n        return message;\n    },\n};\nexport class ABCIApplicationClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Echo = this.Echo.bind(this);\n        this.Flush = this.Flush.bind(this);\n        this.Info = this.Info.bind(this);\n        this.SetOption = this.SetOption.bind(this);\n        this.DeliverTx = this.DeliverTx.bind(this);\n        this.CheckTx = this.CheckTx.bind(this);\n        this.Query = this.Query.bind(this);\n        this.Commit = this.Commit.bind(this);\n        this.InitChain = this.InitChain.bind(this);\n        this.BeginBlock = this.BeginBlock.bind(this);\n        this.EndBlock = this.EndBlock.bind(this);\n        this.ListSnapshots = this.ListSnapshots.bind(this);\n        this.OfferSnapshot = this.OfferSnapshot.bind(this);\n        this.LoadSnapshotChunk = this.LoadSnapshotChunk.bind(this);\n        this.ApplySnapshotChunk = this.ApplySnapshotChunk.bind(this);\n    }\n    Echo(request, metadata) {\n        return this.rpc.unary(ABCIApplicationEchoDesc, RequestEcho.fromPartial(request), metadata);\n    }\n    Flush(request, metadata) {\n        return this.rpc.unary(ABCIApplicationFlushDesc, RequestFlush.fromPartial(request), metadata);\n    }\n    Info(request, metadata) {\n        return this.rpc.unary(ABCIApplicationInfoDesc, RequestInfo.fromPartial(request), metadata);\n    }\n    SetOption(request, metadata) {\n        return this.rpc.unary(ABCIApplicationSetOptionDesc, RequestSetOption.fromPartial(request), metadata);\n    }\n    DeliverTx(request, metadata) {\n        return this.rpc.unary(ABCIApplicationDeliverTxDesc, RequestDeliverTx.fromPartial(request), metadata);\n    }\n    CheckTx(request, metadata) {\n        return this.rpc.unary(ABCIApplicationCheckTxDesc, RequestCheckTx.fromPartial(request), metadata);\n    }\n    Query(request, metadata) {\n        return this.rpc.unary(ABCIApplicationQueryDesc, RequestQuery.fromPartial(request), metadata);\n    }\n    Commit(request, metadata) {\n        return this.rpc.unary(ABCIApplicationCommitDesc, RequestCommit.fromPartial(request), metadata);\n    }\n    InitChain(request, metadata) {\n        return this.rpc.unary(ABCIApplicationInitChainDesc, RequestInitChain.fromPartial(request), metadata);\n    }\n    BeginBlock(request, metadata) {\n        return this.rpc.unary(ABCIApplicationBeginBlockDesc, RequestBeginBlock.fromPartial(request), metadata);\n    }\n    EndBlock(request, metadata) {\n        return this.rpc.unary(ABCIApplicationEndBlockDesc, RequestEndBlock.fromPartial(request), metadata);\n    }\n    ListSnapshots(request, metadata) {\n        return this.rpc.unary(ABCIApplicationListSnapshotsDesc, RequestListSnapshots.fromPartial(request), metadata);\n    }\n    OfferSnapshot(request, metadata) {\n        return this.rpc.unary(ABCIApplicationOfferSnapshotDesc, RequestOfferSnapshot.fromPartial(request), metadata);\n    }\n    LoadSnapshotChunk(request, metadata) {\n        return this.rpc.unary(ABCIApplicationLoadSnapshotChunkDesc, RequestLoadSnapshotChunk.fromPartial(request), metadata);\n    }\n    ApplySnapshotChunk(request, metadata) {\n        return this.rpc.unary(ABCIApplicationApplySnapshotChunkDesc, RequestApplySnapshotChunk.fromPartial(request), metadata);\n    }\n}\nexport const ABCIApplicationDesc = { serviceName: \"tendermint.abci.ABCIApplication\" };\nexport const ABCIApplicationEchoDesc = {\n    methodName: \"Echo\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestEcho.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseEcho.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationFlushDesc = {\n    methodName: \"Flush\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestFlush.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseFlush.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationInfoDesc = {\n    methodName: \"Info\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestInfo.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseInfo.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationSetOptionDesc = {\n    methodName: \"SetOption\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestSetOption.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseSetOption.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationDeliverTxDesc = {\n    methodName: \"DeliverTx\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestDeliverTx.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseDeliverTx.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationCheckTxDesc = {\n    methodName: \"CheckTx\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestCheckTx.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseCheckTx.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationQueryDesc = {\n    methodName: \"Query\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestQuery.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseQuery.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationCommitDesc = {\n    methodName: \"Commit\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestCommit.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseCommit.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationInitChainDesc = {\n    methodName: \"InitChain\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestInitChain.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseInitChain.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationBeginBlockDesc = {\n    methodName: \"BeginBlock\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestBeginBlock.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseBeginBlock.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationEndBlockDesc = {\n    methodName: \"EndBlock\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestEndBlock.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseEndBlock.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationListSnapshotsDesc = {\n    methodName: \"ListSnapshots\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestListSnapshots.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseListSnapshots.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationOfferSnapshotDesc = {\n    methodName: \"OfferSnapshot\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestOfferSnapshot.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseOfferSnapshot.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationLoadSnapshotChunkDesc = {\n    methodName: \"LoadSnapshotChunk\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestLoadSnapshotChunk.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseLoadSnapshotChunk.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const ABCIApplicationApplySnapshotChunkDesc = {\n    methodName: \"ApplySnapshotChunk\",\n    service: ABCIApplicationDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return RequestApplySnapshotChunk.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = ResponseApplySnapshotChunk.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport class GrpcWebImpl {\n    constructor(host, options) {\n        this.host = host;\n        this.options = options;\n    }\n    unary(methodDesc, _request, metadata) {\n        var _a;\n        const request = Object.assign(Object.assign({}, _request), methodDesc.requestType);\n        const maybeCombinedMetadata = metadata && this.options.metadata\n            ? new BrowserHeaders(Object.assign(Object.assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap))\n            : metadata !== null && metadata !== void 0 ? metadata : this.options.metadata;\n        return new Promise((resolve, reject) => {\n            var _a;\n            grpc.unary(methodDesc, Object.assign(Object.assign({ request, host: this.host, metadata: maybeCombinedMetadata !== null && maybeCombinedMetadata !== void 0 ? maybeCombinedMetadata : {} }, (this.options.transport !== undefined ? { transport: this.options.transport } : {})), { debug: (_a = this.options.debug) !== null && _a !== void 0 ? _a : false, onEnd: function (response) {\n                    if (response.status === grpc.Code.OK) {\n                        resolve(response.message.toObject());\n                    }\n                    else {\n                        const err = new GrpcWebError(response.statusMessage, response.status, response.trailers);\n                        reject(err);\n                    }\n                } }));\n        });\n    }\n}\nfunction bytesFromBase64(b64) {\n    if (globalThis.Buffer) {\n        return Uint8Array.from(globalThis.Buffer.from(b64, \"base64\"));\n    }\n    else {\n        const bin = globalThis.atob(b64);\n        const arr = new Uint8Array(bin.length);\n        for (let i = 0; i < bin.length; ++i) {\n            arr[i] = bin.charCodeAt(i);\n        }\n        return arr;\n    }\n}\nfunction base64FromBytes(arr) {\n    if (globalThis.Buffer) {\n        return globalThis.Buffer.from(arr).toString(\"base64\");\n    }\n    else {\n        const bin = [];\n        arr.forEach((byte) => {\n            bin.push(globalThis.String.fromCharCode(byte));\n        });\n        return globalThis.btoa(bin.join(\"\"));\n    }\n}\nfunction toTimestamp(date) {\n    const seconds = Math.trunc(date.getTime() / 1000).toString();\n    const nanos = (date.getTime() % 1000) * 1000000;\n    return { seconds, nanos };\n}\nfunction fromTimestamp(t) {\n    let millis = (globalThis.Number(t.seconds) || 0) * 1000;\n    millis += (t.nanos || 0) / 1000000;\n    return new globalThis.Date(millis);\n}\nfunction fromJsonTimestamp(o) {\n    if (o instanceof globalThis.Date) {\n        return o;\n    }\n    else if (typeof o === \"string\") {\n        return new globalThis.Date(o);\n    }\n    else {\n        return fromTimestamp(Timestamp.fromJSON(o));\n    }\n}\nfunction longToString(long) {\n    return long.toString();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long;\n    _m0.configure();\n}\nfunction isSet(value) {\n    return value !== null && value !== undefined;\n}\nexport class GrpcWebError extends globalThis.Error {\n    constructor(message, code, metadata) {\n        super(message);\n        this.code = code;\n        this.metadata = metadata;\n    }\n}\n"],"names":["CheckTxType","EvidenceType","ResponseOfferSnapshot_Result","ResponseApplySnapshotChunk_Result","checkTxTypeFromJSON","object","NEW","RECHECK","UNRECOGNIZED","checkTxTypeToJSON","evidenceTypeFromJSON","UNKNOWN","DUPLICATE_VOTE","LIGHT_CLIENT_ATTACK","evidenceTypeToJSON","responseOfferSnapshot_ResultFromJSON","ACCEPT","ABORT","REJECT","REJECT_FORMAT","REJECT_SENDER","responseOfferSnapshot_ResultToJSON","responseApplySnapshotChunk_ResultFromJSON","RETRY","RETRY_SNAPSHOT","REJECT_SNAPSHOT","responseApplySnapshotChunk_ResultToJSON","Request","encode","message","writer","create","undefined","echo","RequestEcho","uint32","fork","ldelim","flush","RequestFlush","info","RequestInfo","setOption","RequestSetOption","initChain","RequestInitChain","query","RequestQuery","beginBlock","RequestBeginBlock","checkTx","RequestCheckTx","deliverTx","RequestDeliverTx","endBlock","RequestEndBlock","commit","RequestCommit","listSnapshots","RequestListSnapshots","offerSnapshot","RequestOfferSnapshot","loadSnapshotChunk","RequestLoadSnapshotChunk","applySnapshotChunk","RequestApplySnapshotChunk","decode","input","length","reader","end","len","pos","tag","skipType","fromJSON","isSet","toJSON","obj","base","fromPartial","string","globalThis","String","_a","_","version","blockVersion","uint64","p2pVersion","longToString","_b","_c","key","value","createBaseRequestInitChain","time","chainId","consensusParams","validators","appStateBytes","Uint8Array","initialHeight","Timestamp","toTimestamp","ConsensusParams","v","ValidatorUpdate","bytes","int64","fromTimestamp","push","fromJsonTimestamp","Array","isArray","map","e","bytesFromBase64","toISOString","base64FromBytes","_d","_e","createBaseRequestQuery","data","path","height","prove","bool","Boolean","createBaseRequestBeginBlock","hash","header","lastCommitInfo","byzantineValidators","Header","LastCommitInfo","Evidence","createBaseRequestCheckTx","tx","type","int32","createBaseRequestDeliverTx","createBaseRequestOfferSnapshot","snapshot","appHash","Snapshot","format","chunk","Number","Math","round","createBaseRequestApplySnapshotChunk","index","sender","Response","exception","ResponseException","ResponseEcho","ResponseFlush","ResponseInfo","ResponseSetOption","ResponseInitChain","ResponseQuery","ResponseBeginBlock","ResponseCheckTx","ResponseDeliverTx","ResponseEndBlock","ResponseCommit","ResponseListSnapshots","ResponseOfferSnapshot","ResponseLoadSnapshotChunk","ResponseApplySnapshotChunk","error","createBaseResponseInfo","appVersion","lastBlockHeight","lastBlockAppHash","code","log","createBaseResponseInitChain","createBaseResponseQuery","proofOps","codespace","ProofOps","_f","_g","_h","events","Event","createBaseResponseCheckTx","gasWanted","gasUsed","priority","mempoolError","gas_wanted","gas_used","_j","_k","_l","createBaseResponseDeliverTx","validatorUpdates","consensusParamUpdates","createBaseResponseCommit","retainHeight","snapshots","result","createBaseResponseLoadSnapshotChunk","refetchChunks","rejectSenders","end2","block","BlockParams","evidence","EvidenceParams","validator","ValidatorParams","VersionParams","maxBytes","maxGas","votes","VoteInfo","attributes","EventAttribute","createBaseEventAttribute","createBaseTxResult","TxResult","createBaseValidator","address","power","Validator","pubKey","PublicKey","signedLastBlock","totalVotingPower","createBaseSnapshot","chunks","metadata","ABCIApplicationClientImpl","constructor","rpc","this","Echo","bind","Flush","Info","SetOption","DeliverTx","CheckTx","Query","Commit","InitChain","BeginBlock","EndBlock","ListSnapshots","OfferSnapshot","LoadSnapshotChunk","ApplySnapshotChunk","request","unary","ABCIApplicationEchoDesc","ABCIApplicationFlushDesc","ABCIApplicationInfoDesc","ABCIApplicationSetOptionDesc","ABCIApplicationDeliverTxDesc","ABCIApplicationCheckTxDesc","ABCIApplicationQueryDesc","ABCIApplicationCommitDesc","ABCIApplicationInitChainDesc","ABCIApplicationBeginBlockDesc","ABCIApplicationEndBlockDesc","ABCIApplicationListSnapshotsDesc","ABCIApplicationOfferSnapshotDesc","ABCIApplicationLoadSnapshotChunkDesc","ABCIApplicationApplySnapshotChunkDesc","ABCIApplicationDesc","serviceName","methodName","service","requestStream","responseStream","requestType","serializeBinary","finish","responseType","deserializeBinary","Object","assign","toObject","GrpcWebImpl","host","options","methodDesc","_request","maybeCombinedMetadata","BrowserHeaders","headersMap","Promise","resolve","reject","grpc","transport","debug","onEnd","response","status","Code","OK","err","GrpcWebError","statusMessage","trailers","b64","Buffer","from","bin","atob","arr","i","charCodeAt","toString","forEach","byte","fromCharCode","btoa","join","date","seconds","trunc","getTime","nanos","t","millis","Date","o","long","Long","Error","super"],"sourceRoot":""}