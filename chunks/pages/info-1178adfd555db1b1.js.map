{"version":3,"file":"static/chunks/pages/info-1178adfd555db1b1.js","mappings":"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","sources":["webpack://_N_E/?305f","webpack://_N_E/./components/Info/InfoCard.tsx","webpack://_N_E/./components/Info/Table.tsx","webpack://_N_E/./components/Info/data.ts","webpack://_N_E/./components/Info/types.tsx","webpack://_N_E/./components/Info/TableCurrentholders.tsx","webpack://_N_E/./components/Info/TableDelegate.tsx","webpack://_N_E/./components/Info/TableMonthly.tsx","webpack://_N_E/./pages/info.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/info\",\n      function () {\n        return require(\"private-next-pages/info.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/info\"])\n      });\n    }\n  ","import axios from \"axios\";\nimport Image from \"next/image\";\nimport useSWR from \"swr\";\n\nimport { backendUrl } from \"@/lib/utils\";\n\nimport { ICard } from \"./types\";\n\nexport function InfoCard(props: { data: ICard }) {\n  const { data } = props;\n\n  const fetcher = (url: string) =>\n    axios.get(`${backendUrl}${url}`).then((res) => {\n      if (data.formatResult) {\n        return data.formatResult(res.data);\n      }\n\n      return res.data;\n    });\n\n  const { data: result, isLoading, error } = useSWR(data.url, fetcher);\n\n  return (\n    <div\n      className={`\n        bg-white shadow-sm rounded-lg\n         border-white border p-3 flex \n         flex-col items-center justify-center text-center\n    `}\n    >\n      <Image\n        src={data.image}\n        width={25}\n        height={25}\n        alt=\"arrow-right\"\n        className=\"flex w-25px max-w-25px h-25px max-h-25px\"\n      />\n\n      {data.count ? (\n        <h2 className=\"my-0 pb-2 pt-3\">{data.count}</h2>\n      ) : (\n        <h2 className=\"my-0 pb-2 pt-3\">\n          {isLoading || error ? \"...\" : result}\n        </h2>\n      )}\n\n      <p className=\"text-sm text-muted font-thin\">{data.title}</p>\n    </div>\n  );\n}\n","import { ITable } from \"./types\";\n\nexport function Table(props: ITable) {\n  return (\n    <div className=\"my-5 \">\n      <h5 className=\" font-semibold mb-2\">{props.title}</h5>\n      {props.others}\n      <div className=\"relative max-h-[400px] overflow-y-scroll overflow-x-auto sm:rounded-lg\">\n        <table className=\"w-full text-sm text-left rtl:text-right text-gray-500 dark:text-gray-400\">\n          <THead data={props.headers} />\n          <tbody>{props.children}</tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport function TRow(props: { td: string[] }) {\n  return (\n    <tr className=\"odd:bg-white even:bg-gray-50 border-b dark:border-gray-300\">\n      {props.td.map((val, i) => (\n        <td key={i} className=\"px-3 py-3 text-gray-600\">\n          {val}\n        </td>\n      ))}\n    </tr>\n  );\n}\n\nfunction THead(props: { data: string[] }) {\n  return (\n    <thead className=\"text-xs text-gray-700 uppercase bg-gray-100 \">\n      <tr>\n        {props.data.map((text, i) => (\n          <th scope=\"col\" className=\"px-4 py-3\" key={i}>\n            {text}\n          </th>\n        ))}\n      </tr>\n    </thead>\n  );\n}\n\nexport const splitAndAddEllipses = (input: string) => {\n  if (input.length <= 7) return input;\n  return (\n    input.slice(0, 5) + \"...\" + input.slice(input.length - 3, input.length)\n  );\n};\n","import { ICard } from \"./types\";\n\nexport function formatToCurrency(num: number) {\n  if (isNaN(num)) {\n    return \"...\";\n  }\n  return num.toLocaleString(\"en-US\", {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2,\n  });\n}\n\nconst totalSupplyFormatter = (res: string) => {\n  const dividedByAMillion = (parseInt(res) / 1_000_000).toFixed(2).toString();\n  const withDollarSign = \"$\".concat(dividedByAMillion.toString()).concat(\"M\");\n\n  return withDollarSign;\n};\n\nconst formatNumber = (payload: string) => {\n  return parseInt(payload)\n    .toLocaleString(\"en-US\", {\n      minimumFractionDigits: 0,\n    })\n    .toString();\n};\nexport const infoCards: ICard[] = [\n  {\n    title: \"Glo Dollars in circulation today\",\n    image: \"/info/world.png\",\n    name: \"TOTAL_SUPPLY\",\n    formatResult: totalSupplyFormatter,\n    url: \"/api/total-supply\",\n  },\n  {\n    title: \"Glo Dollar holders\",\n    image: \"/info/shecode.png\",\n    name: \"DOLLAR_HOLDERS\",\n    url: \"/api/total-holders\",\n    formatResult: formatNumber,\n  },\n  {\n    title: \"Glo Dollar transactions\",\n    image: \"/info/calculator.png\",\n    name: \"TOTAL_TRANSACTIONS\",\n    url: \"/api/total-transactions\",\n    formatResult: formatNumber,\n  },\n  {\n    title: \"Organizations integrating Glo\",\n    image: \"/info/handshake.png\",\n    name: \"ORG_INTEGRATED\",\n    url: \"\",\n    count: \"61\",\n  },\n  {\n    title: \"Donated\",\n    image: \"/info/receipt.png\",\n    name: \"DONATED\",\n    url: \"\",\n    count: \"$11,252\",\n  },\n];\n","import { ReactNode } from \"react\";\n\ntype ICardName =\n  | \"TOTAL_TRANSACTIONS\"\n  | \"DOLLAR_HOLDERS\"\n  | \"TOTAL_SUPPLY\"\n  | \"DONATED\"\n  | \"ORG_INTEGRATED\";\n\nexport type ICard = {\n  title: string;\n  image: string;\n  name: ICardName;\n  url: string;\n  count?: string;\n  formatResult?: (payload: string) => string;\n};\n\nexport type ITable = {\n  title: string;\n  headers: string[];\n  rowData?: string[][];\n  children: ReactNode;\n  others?: ReactNode;\n};\nexport type INetworks = \"celo\" | \"ethereum\" | \"base\" | \"arbitrum\" | \"optimism\";\n\nexport const Networks: Record<INetworks, string> = {\n  celo: \"Celo\",\n  ethereum: \"Ethereum\",\n  base: \"Base\",\n  arbitrum: \"Arbitrum\",\n  optimism: \"Optimism\",\n};\n","import axios from \"axios\";\nimport { useState } from \"react\";\nimport useSWR from \"swr\";\n\nimport { ILargestHolder } from \"@/lib/dune\";\n\nimport { formatToCurrency } from \"./data\";\nimport { splitAndAddEllipses, Table, TRow } from \"./Table\";\nimport { INetworks, Networks } from \"./types\";\n\nexport function LargestCurrentHolderTable() {\n  const [selectNetwork, setNetwork] = useState<INetworks>(\"celo\");\n\n  const fetcher = (url: string) =>\n    axios\n      .get(url, {\n        params: {\n          network: selectNetwork,\n        },\n      })\n      .then((res) => {\n        return res.data as ILargestHolder[];\n      });\n\n  const { data } = useSWR(`/api/largest-current-holders`, fetcher);\n\n  return (\n    <div className=\"my-5\">\n      <Table\n        title={\"Largest current holders\"}\n        headers={[\"Holder\", \"Amount\"]}\n        others={\n          <select\n            className=\"w-full p-2 mb-1 outline-none border-none\"\n            onChange={(e) => {\n              setNetwork(e.target.value as INetworks);\n            }}\n          >\n            {Object.keys(Networks).map((val, i) => (\n              <option key={i} value={val}>\n                {Networks[val as INetworks]}\n              </option>\n            ))}\n          </select>\n        }\n      >\n        {data === undefined ? (\n          <p>...</p>\n        ) : (\n          data.map((val, i) => {\n            return (\n              <TRow\n                key={i}\n                td={[\n                  splitAndAddEllipses(val.tx_from),\n                  formatToCurrency(val.token_a_value_held).slice(0, 12),\n                ]}\n              />\n            );\n          })\n        )}\n      </Table>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport useSWR from \"swr\";\n\nimport { Table, TRow } from \"./Table\";\n\nconst formatDelegate = (payload: any) => {\n  const cause: string[][] = [];\n  const result = payload[\"possibleFundingChoices\"];\n\n  for (const key in result) {\n    if (Object.prototype.hasOwnProperty.call(result, key)) {\n      const element = result[key].toString();\n      const formattedKey = key.replace(\"_\", \" \");\n      cause.push([formattedKey, \"$\".concat(element)]);\n    }\n  }\n\n  return cause;\n};\n\nexport function DelegateTable() {\n  const fetcher = (url: string) =>\n    axios.get(url).then((res) => {\n      return formatDelegate(res.data);\n    });\n\n  const { data } = useSWR(`/api/funding/current`, fetcher);\n\n  if (!data) return <p>...</p>;\n  return (\n    <div className=\"my-5\">\n      <Table title={\"Delegate and cause\"} headers={[\"Cause\", \"Amount\"]}>\n        {data.map((val: string[], i) => {\n          return <TRow key={i} td={val} />;\n        })}\n      </Table>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { useState } from \"react\";\nimport useSWR from \"swr\";\n\nimport { ILargestMonthlyHolder } from \"@/lib/dune\";\n\nimport { formatToCurrency } from \"./data\";\nimport { splitAndAddEllipses, Table, TRow } from \"./Table\";\nimport { INetworks, Networks } from \"./types\";\n\nexport function LargestMonthlyHolderTable() {\n  const [selectNetwork, setNetwork] = useState<INetworks>(\"celo\");\n\n  const fetcher = (url: string) =>\n    axios\n      .get(url, {\n        params: {\n          network: selectNetwork,\n        },\n      })\n      .then((res) => {\n        return res.data as ILargestMonthlyHolder[];\n      });\n\n  const { data } = useSWR(`/api/largest-monthly-holders`, fetcher);\n\n  if (!data) return <p>...</p>;\n\n  return (\n    <div className=\"my-5\">\n      <Table\n        title={\"Largest holders in the last month\"}\n        headers={[\"Holder\", \"Avg. amount\"]}\n        others={\n          <select\n            className=\"w-full p-2 mb-1 outline-none border-none\"\n            onChange={(e) => {\n              setNetwork(e.target.value as INetworks);\n            }}\n          >\n            {Object.keys(Networks).map((val, i) => (\n              <option key={i} value={val}>\n                {Networks[val as INetworks]}\n              </option>\n            ))}\n          </select>\n        }\n      >\n        {data.map((val, i) => {\n          return (\n            <TRow\n              key={i}\n              td={[\n                splitAndAddEllipses(val.tx_from),\n                formatToCurrency(val.avg_monthly_balance).slice(0, 9),\n              ]}\n            />\n          );\n        })}\n      </Table>\n    </div>\n  );\n}\n","import { infoCards } from \"@/components/Info/data\";\nimport { InfoCard } from \"@/components/Info/InfoCard\";\nimport { LargestCurrentHolderTable } from \"@/components/Info/TableCurrentholders\";\nimport { DelegateTable } from \"@/components/Info/TableDelegate\";\nimport { LargestMonthlyHolderTable } from \"@/components/Info/TableMonthly\";\n\nexport default function InfoPage() {\n  return (\n    <div className=\"mt-4 px-4 bg-pine-100\">\n      <div className=\"grid grid-cols-2 gap-3\">\n        {infoCards.map((val, i) => (\n          <InfoCard key={i} data={val} />\n        ))}\n      </div>\n      <div className=\"my-5\">\n        <DelegateTable />\n        <LargestMonthlyHolderTable />\n        <LargestCurrentHolderTable />\n      </div>\n    </div>\n  );\n}\n"],"names":["window","__NEXT_P","push","InfoCard","props","data","result","isLoading","error","useSWR","url","axios","get","backendUrl","then","res","formatResult","div","className","Image","src","image","width","height","alt","count","h2","p","title","Table","h5","others","table","THead","headers","tbody","children","TRow","tr","td","map","val","i","thead","text","th","scope","splitAndAddEllipses","input","length","slice","formatToCurrency","num","isNaN","toLocaleString","minimumFractionDigits","maximumFractionDigits","formatNumber","payload","parseInt","toString","infoCards","name","dividedByAMillion","toFixed","concat","Networks","celo","ethereum","base","arbitrum","optimism","LargestCurrentHolderTable","selectNetwork","setNetwork","useState","params","network","select","onChange","e","target","value","Object","keys","option","undefined","tx_from","token_a_value_held","formatDelegate","cause","key","prototype","hasOwnProperty","call","element","formattedKey","replace","DelegateTable","LargestMonthlyHolderTable","avg_monthly_balance","InfoPage"],"sourceRoot":""}