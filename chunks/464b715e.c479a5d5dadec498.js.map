{"version":3,"file":"static/chunks/464b715e.c479a5d5dadec498.js","mappings":"yhKAOO,MAAMA,EAAkB,oCAIxB,MAAMC,EAAiB,CAC1B,MAAAC,CAAOC,EAASC,EAAS,SAAWC,UACH,KAAzBF,EAAQG,cACRF,EAAOG,OAAO,IAAIC,OAAOL,EAAQG,cAEV,KAAvBH,EAAQM,YACRL,EAAOG,OAAO,IAAIC,OAAOL,EAAQM,YAErC,IAAK,MAAMC,KAAKP,EAAQQ,eACpBP,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,OAAON,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlBH,CAAEG,aAAc,GAAIG,WAAY,GAAIE,eAAgB,IAmBvD,KAAOI,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQG,aAAeS,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQM,WAAaM,EAAOP,SAC5B,MACJ,KAAK,EACDL,EAAQQ,eAAeU,KAAKN,EAAOP,UACnC,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHlB,aAAcmB,GAAMD,EAAOlB,cAAgBoB,OAAOF,EAAOlB,cAAgB,GACzEG,WAAYgB,GAAMD,EAAOf,YAAciB,OAAOF,EAAOf,YAAc,GACnEE,eAAgBgB,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOb,gBAAkBa,EAAOb,eAAekB,KAAKC,GAAMJ,OAAOI,KAAM,KAG7J,MAAAC,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EASb,YARyBf,IAAzBd,EAAQG,eAA+B0B,EAAI1B,aAAeH,EAAQG,mBAC3CW,IAAvBd,EAAQM,aAA6BuB,EAAIvB,WAAaN,EAAQM,YAC1DN,EAAQQ,eACRqB,EAAIrB,eAAiBR,EAAQQ,eAAekB,KAAKC,GAAMA,IAGvDE,EAAIrB,eAAiB,GAElBqB,CACX,EACA3B,OAAO4B,GACIhC,EAAeiC,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEjF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EACZ,MAAMlC,EA9DH,CAAEG,aAAc,GAAIG,WAAY,GAAIE,eAAgB,IAkEvD,OAHAR,EAAQG,aAA8C,QAA9B6B,EAAKX,EAAOlB,oBAAiC,IAAP6B,EAAgBA,EAAK,GACnFhC,EAAQM,WAA0C,QAA5B2B,EAAKZ,EAAOf,kBAA+B,IAAP2B,EAAgBA,EAAK,GAC/EjC,EAAQQ,gBAAmD,QAAhC0B,EAAKb,EAAOb,sBAAmC,IAAP0B,OAAgB,EAASA,EAAGR,KAAKC,GAAMA,MAAO,GAC1G3B,CACX,GAKG,MAAMmC,EAAkB,CAC3B,MAAApC,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQoC,QACpBC,EAAqBtC,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAE7D,OAAOtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEoC,QAAS,IAad,KAAOxB,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQoC,QAAQlB,KAAKmB,EAAqB5B,OAAOG,EAAQA,EAAOR,gBAGhEQ,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHe,QAASZ,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOe,SAAWf,EAAOe,QAAQV,KAAKC,GAAMU,EAAqBjB,SAASO,KAAM,KAG/J,MAAAC,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAOb,OANI7B,EAAQoC,QACRP,EAAIO,QAAUpC,EAAQoC,QAAQV,KAAKC,GAAMA,EAAIU,EAAqBT,OAAOD,QAAKb,IAG9Ee,EAAIO,QAAU,GAEXP,CACX,EACA3B,OAAO4B,GACIK,EAAgBJ,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAElF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EA9CH,CAAEoC,QAAS,IAgDd,OADApC,EAAQoC,SAAqC,QAAzBJ,EAAKX,EAAOe,eAA4B,IAAPJ,OAAgB,EAASA,EAAGN,KAAKC,GAAMU,EAAqBN,YAAYJ,OAAQ,GAC9H3B,CACX,GA0BG,MAAMqC,EAAuB,CAChCtC,OAAM,CAACC,EAASC,EAAS,SAAWC,YACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAER,KAAzBxC,EAAQG,cACRF,EAAOG,OAAO,IAAIC,OAAOL,EAAQG,cAEd,KAAnBH,EAAQyC,QACRxC,EAAOG,OAAO,IAAIC,OAAOL,EAAQyC,QAEV,KAAvBzC,EAAQ0C,YACRzC,EAAOG,OAAO,IAAIC,OAAOL,EAAQ0C,YAET,KAAxB1C,EAAQ2C,aACR1C,EAAOG,OAAO,IAAIC,OAAOL,EAAQ2C,aAEV,KAAvB3C,EAAQ4C,YACR3C,EAAOG,OAAO,IAAIC,OAAOL,EAAQ4C,YAEH,IAA9B5C,EAAQ6C,mBACR5C,EAAOG,OAAO,IAAIA,OAAOJ,EAAQ6C,mBAEF,KAA/B7C,EAAQ8C,oBACR7C,EAAOG,OAAO,IAAIC,OAAOL,EAAQ8C,oBAEE,KAAnC9C,EAAQ+C,wBACR9C,EAAOG,OAAO,IAAIC,OAAOL,EAAQ+C,wBAEV,KAAvB/C,EAAQM,YACRL,EAAOG,OAAO,IAAIC,OAAOL,EAAQM,iBAENQ,IAA3Bd,EAAQgD,gBACRC,EAAUlD,OAAOC,EAAQgD,eAAgB/C,EAAOG,OAAO,IAAIkC,QAAQC,SAE1C,KAAzBvC,EAAQkD,cACRjD,EAAOG,OAAO,IAAIC,OAAOL,EAAQkD,cAER,KAAzBlD,EAAQmD,cACRlD,EAAOG,OAAO,KAAKC,OAAOL,EAAQmD,cAEH,KAA/BnD,EAAQoD,oBACRnD,EAAOG,OAAO,KAAKC,OAAOL,EAAQoD,qBAEV,IAAxBpD,EAAQqD,aACRpD,EAAOG,OAAO,KAAKkD,KAAKtD,EAAQqD,aAEH,KAA7BrD,EAAQuD,kBACRtD,EAAOG,OAAO,KAAKC,OAAOL,EAAQuD,kBAEF,KAAhCvD,EAAQwD,qBACRvD,EAAOG,OAAO,KAAKC,OAAOL,EAAQwD,0BAEF1C,IAAhCd,EAAQyD,qBACRC,EAAoB3D,OAAOC,EAAQyD,oBAAqBxD,EAAOG,OAAO,KAAKkC,QAAQC,cAEhDzB,IAAnCd,EAAQ2D,wBACRC,EAAuB7D,OAAOC,EAAQ2D,uBAAwB1D,EAAOG,OAAO,KAAKkC,QAAQC,cAErDzB,IAApCd,EAAQ6D,yBACRC,EAAwB/D,OAAOC,EAAQ6D,wBAAyB5D,EAAOG,OAAO,KAAKkC,QAAQC,SAExFtC,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EA1FH,CACHwC,SAAU,GACVrC,aAAc,GACdsC,OAAQ,GACRC,WAAY,GACZC,YAAa,GACbC,WAAY,GACZC,kBAAmB,EACnBC,mBAAoB,GACpBC,uBAAwB,GACxBzC,WAAY,GACZ0C,oBAAgBlC,EAChBoC,aAAc,GACdC,aAAc,GACdC,mBAAoB,GACpBC,aAAa,EACbE,iBAAkB,GAClBC,oBAAqB,GACrBC,yBAAqB3C,EACrB6C,4BAAwB7C,EACxB+C,6BAAyB/C,GAuEzB,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQG,aAAeS,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQyC,OAAS7B,EAAOP,SACxB,MACJ,KAAK,EACDL,EAAQ0C,WAAa9B,EAAOP,SAC5B,MACJ,KAAK,EACDL,EAAQ2C,YAAc/B,EAAOP,SAC7B,MACJ,KAAK,EACDL,EAAQ4C,WAAahC,EAAOP,SAC5B,MACJ,KAAK,EACDL,EAAQ6C,kBAAoBjC,EAAOR,SACnC,MACJ,KAAK,EACDJ,EAAQ8C,mBAAqBlC,EAAOP,SACpC,MACJ,KAAK,EACDL,EAAQ+C,uBAAyBnC,EAAOP,SACxC,MACJ,KAAK,GACDL,EAAQM,WAAaM,EAAOP,SAC5B,MACJ,KAAK,GACDL,EAAQgD,eAAiBC,EAAUxC,OAAOG,EAAQA,EAAOR,UACzD,MACJ,KAAK,GACDJ,EAAQkD,aAAetC,EAAOP,SAC9B,MACJ,KAAK,GACDL,EAAQmD,aAAevC,EAAOP,SAC9B,MACJ,KAAK,GACDL,EAAQoD,mBAAqBxC,EAAOP,SACpC,MACJ,KAAK,GACDL,EAAQqD,YAAczC,EAAO0C,OAC7B,MACJ,KAAK,GACDtD,EAAQuD,iBAAmB3C,EAAOP,SAClC,MACJ,KAAK,GACDL,EAAQwD,oBAAsB5C,EAAOP,SACrC,MACJ,KAAK,GACDL,EAAQyD,oBAAsBC,EAAoBjD,OAAOG,EAAQA,EAAOR,UACxE,MACJ,KAAK,GACDJ,EAAQ2D,uBAAyBC,EAAuBnD,OAAOG,EAAQA,EAAOR,UAC9E,MACJ,KAAK,GACDJ,EAAQ6D,wBAA0BC,EAAwBrD,OAAOG,EAAQA,EAAOR,UAChF,MACJ,QACIQ,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DrC,aAAcmB,GAAMD,EAAOlB,cAAgBoB,OAAOF,EAAOlB,cAAgB,GACzEsC,OAAQnB,GAAMD,EAAOoB,QAAUlB,OAAOF,EAAOoB,QAAU,GACvDC,WAAYpB,GAAMD,EAAOqB,YAAcnB,OAAOF,EAAOqB,YAAc,GACnEC,YAAarB,GAAMD,EAAOsB,aAAepB,OAAOF,EAAOsB,aAAe,GACtEC,WAAYtB,GAAMD,EAAOuB,YAAcrB,OAAOF,EAAOuB,YAAc,GACnEC,kBAAmBvB,GAAMD,EAAOwB,mBAAqBkB,OAAO1C,EAAOwB,mBAAqB,EACxFC,mBAAoBxB,GAAMD,EAAOyB,oBAAsBvB,OAAOF,EAAOyB,oBAAsB,GAC3FC,uBAAwBzB,GAAMD,EAAO0B,wBAA0BxB,OAAOF,EAAO0B,wBAA0B,GACvGzC,WAAYgB,GAAMD,EAAOf,YAAciB,OAAOF,EAAOf,YAAc,GACnE0C,eAAgB1B,GAAMD,EAAO2B,gBAAkBC,EAAU7B,SAASC,EAAO2B,qBAAkBlC,EAC3FoC,aAAc5B,GAAMD,EAAO6B,cAAgB3B,OAAOF,EAAO6B,cAAgB,GACzEC,aAAc7B,GAAMD,EAAO8B,cAAgB5B,OAAOF,EAAO8B,cAAgB,GACzEC,mBAAoB9B,GAAMD,EAAO+B,oBAAsB7B,OAAOF,EAAO+B,oBAAsB,GAC3FC,cAAa/B,GAAMD,EAAOgC,cAAeW,QAAQ3C,EAAOgC,aACxDE,iBAAkBjC,GAAMD,EAAOkC,kBAAoBhC,OAAOF,EAAOkC,kBAAoB,GACrFC,oBAAqBlC,GAAMD,EAAOmC,qBAAuBjC,OAAOF,EAAOmC,qBAAuB,GAC9FC,oBAAqBnC,GAAMD,EAAOoC,qBAC5BC,EAAoBtC,SAASC,EAAOoC,0BACpC3C,EACN6C,uBAAwBrC,GAAMD,EAAOsC,wBAC/BC,EAAuBxC,SAASC,EAAOsC,6BACvC7C,EACN+C,wBAAyBvC,GAAMD,EAAOwC,yBAChCC,EAAwB1C,SAASC,EAAOwC,8BACxC/C,IAGd,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EA4Bb,YA3BqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACjC1B,IAAzBd,EAAQG,eAA+B0B,EAAI1B,aAAeH,EAAQG,mBAC/CW,IAAnBd,EAAQyC,SAAyBZ,EAAIY,OAASzC,EAAQyC,aAC/B3B,IAAvBd,EAAQ0C,aAA6Bb,EAAIa,WAAa1C,EAAQ0C,iBACtC5B,IAAxBd,EAAQ2C,cAA8Bd,EAAIc,YAAc3C,EAAQ2C,kBACzC7B,IAAvBd,EAAQ4C,aAA6Bf,EAAIe,WAAa5C,EAAQ4C,iBAChC9B,IAA9Bd,EAAQ6C,oBAAoChB,EAAIgB,kBAAoBoB,KAAKC,MAAMlE,EAAQ6C,yBACxD/B,IAA/Bd,EAAQ8C,qBAAqCjB,EAAIiB,mBAAqB9C,EAAQ8C,yBAC3ChC,IAAnCd,EAAQ+C,yBAAyClB,EAAIkB,uBAAyB/C,EAAQ+C,6BAC/DjC,IAAvBd,EAAQM,aAA6BuB,EAAIvB,WAAaN,EAAQM,iBACnCQ,IAA3Bd,EAAQgD,iBACHnB,EAAImB,eAAiBhD,EAAQgD,eAAiBC,EAAUrB,OAAO5B,EAAQgD,qBAAkBlC,QACrEA,IAAzBd,EAAQkD,eAA+BrB,EAAIqB,aAAelD,EAAQkD,mBACzCpC,IAAzBd,EAAQmD,eAA+BtB,EAAIsB,aAAenD,EAAQmD,mBACnCrC,IAA/Bd,EAAQoD,qBAAqCvB,EAAIuB,mBAAqBpD,EAAQoD,yBACtDtC,IAAxBd,EAAQqD,cAA8BxB,EAAIwB,YAAcrD,EAAQqD,kBACnCvC,IAA7Bd,EAAQuD,mBAAmC1B,EAAI0B,iBAAmBvD,EAAQuD,uBAC1CzC,IAAhCd,EAAQwD,sBAAsC3B,EAAI2B,oBAAsBxD,EAAQwD,0BAChD1C,IAAhCd,EAAQyD,sBAAsC5B,EAAI4B,oBAAsBzD,EAAQyD,oBAC1EC,EAAoB9B,OAAO5B,EAAQyD,0BACnC3C,QAC6BA,IAAnCd,EAAQ2D,yBAAyC9B,EAAI8B,uBAAyB3D,EAAQ2D,uBAChFC,EAAuBhC,OAAO5B,EAAQ2D,6BACtC7C,QAC8BA,IAApCd,EAAQ6D,0BAA0ChC,EAAIgC,wBAA0B7D,EAAQ6D,wBAClFC,EAAwBlC,OAAO5B,EAAQ6D,8BACvC/C,GACCe,CACX,EACA3B,OAAO4B,GACIO,EAAqBN,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEvF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAChE,MAAM/E,EAnOH,CACHwC,SAAU,GACVrC,aAAc,GACdsC,OAAQ,GACRC,WAAY,GACZC,YAAa,GACbC,WAAY,GACZC,kBAAmB,EACnBC,mBAAoB,GACpBC,uBAAwB,GACxBzC,WAAY,GACZ0C,oBAAgBlC,EAChBoC,aAAc,GACdC,aAAc,GACdC,mBAAoB,GACpBC,aAAa,EACbE,iBAAkB,GAClBC,oBAAqB,GACrBC,yBAAqB3C,EACrB6C,4BAAwB7C,EACxB+C,6BAAyB/C,GA8OzB,OA9BAd,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQG,aAA8C,QAA9B8B,EAAKZ,EAAOlB,oBAAiC,IAAP8B,EAAgBA,EAAK,GACnFjC,EAAQyC,OAAkC,QAAxBP,EAAKb,EAAOoB,cAA2B,IAAPP,EAAgBA,EAAK,GACvElC,EAAQ0C,WAA0C,QAA5ByB,EAAK9C,EAAOqB,kBAA+B,IAAPyB,EAAgBA,EAAK,GAC/EnE,EAAQ2C,YAA4C,QAA7ByB,EAAK/C,EAAOsB,mBAAgC,IAAPyB,EAAgBA,EAAK,GACjFpE,EAAQ4C,WAA0C,QAA5ByB,EAAKhD,EAAOuB,kBAA+B,IAAPyB,EAAgBA,EAAK,GAC/ErE,EAAQ6C,kBAAwD,QAAnCyB,EAAKjD,EAAOwB,yBAAsC,IAAPyB,EAAgBA,EAAK,EAC7FtE,EAAQ8C,mBAA0D,QAApCyB,EAAKlD,EAAOyB,0BAAuC,IAAPyB,EAAgBA,EAAK,GAC/FvE,EAAQ+C,uBAAkE,QAAxCyB,EAAKnD,EAAO0B,8BAA2C,IAAPyB,EAAgBA,EAAK,GACvGxE,EAAQM,WAA0C,QAA5BmE,EAAKpD,EAAOf,kBAA+B,IAAPmE,EAAgBA,EAAK,GAC/EzE,EAAQgD,oBAA4ClC,IAA1BO,EAAO2B,gBAA0D,OAA1B3B,EAAO2B,eAClEC,EAAUlB,YAAYV,EAAO2B,qBAC7BlC,EACNd,EAAQkD,aAA8C,QAA9BwB,EAAKrD,EAAO6B,oBAAiC,IAAPwB,EAAgBA,EAAK,GACnF1E,EAAQmD,aAA8C,QAA9BwB,EAAKtD,EAAO8B,oBAAiC,IAAPwB,EAAgBA,EAAK,GACnF3E,EAAQoD,mBAA0D,QAApCwB,EAAKvD,EAAO+B,0BAAuC,IAAPwB,EAAgBA,EAAK,GAC/F5E,EAAQqD,YAA4C,QAA7BwB,EAAKxD,EAAOgC,mBAAgC,IAAPwB,GAAgBA,EAC5E7E,EAAQuD,iBAAsD,QAAlCuB,EAAKzD,EAAOkC,wBAAqC,IAAPuB,EAAgBA,EAAK,GAC3F9E,EAAQwD,oBAA4D,QAArCuB,EAAK1D,EAAOmC,2BAAwC,IAAPuB,EAAgBA,EAAK,GACjG/E,EAAQyD,yBAAsD3C,IAA/BO,EAAOoC,qBAAoE,OAA/BpC,EAAOoC,oBAC5EC,EAAoB3B,YAAYV,EAAOoC,0BACvC3C,EACNd,EAAQ2D,4BAC+B7C,IAAlCO,EAAOsC,wBAA0E,OAAlCtC,EAAOsC,uBACjDC,EAAuB7B,YAAYV,EAAOsC,6BAC1C7C,EACVd,EAAQ6D,6BACgC/C,IAAnCO,EAAOwC,yBAA4E,OAAnCxC,EAAOwC,wBAClDC,EAAwB/B,YAAYV,EAAOwC,8BAC3C/C,EACHd,CACX,GAKG,MAAMiD,EAAY,CACrBlD,OAAM,CAACC,EAASC,EAAS,SAAWC,YACX,KAAjBF,EAAQgF,MACR/E,EAAOG,OAAO,IAAIC,OAAOL,EAAQgF,MAEb,KAApBhF,EAAQiF,SACRhF,EAAOG,OAAO,IAAIC,OAAOL,EAAQiF,SAEd,KAAnBjF,EAAQkF,QACRjF,EAAOG,OAAO,IAAIC,OAAOL,EAAQkF,QAEhB,KAAjBlF,EAAQmF,MACRlF,EAAOG,OAAO,IAAIC,OAAOL,EAAQmF,MAEZ,IAArBnF,EAAQoF,UACRnF,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQoF,UAEX,MAAtBpF,EAAQsF,WACRrF,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsF,WAE9BrF,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EA3BH,CAAEgF,KAAM,GAAIC,QAAS,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,SAAU,EAAGE,UAAW,KA4B1E,KAAO1E,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQgF,KAAOpE,EAAOP,SACtB,MACJ,KAAK,EACDL,EAAQiF,QAAUrE,EAAOP,SACzB,MACJ,KAAK,EACDL,EAAQkF,OAAStE,EAAOP,SACxB,MACJ,KAAK,EACDL,EAAQmF,KAAOvE,EAAOP,SACtB,MACJ,KAAK,EACDL,EAAQoF,SAAWxE,EAAOyE,SAC1B,MACJ,KAAK,EACDrF,EAAQsF,UAAYE,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH2D,KAAM1D,GAAMD,EAAO2D,MAAQzD,OAAOF,EAAO2D,MAAQ,GACjDC,QAAS3D,GAAMD,EAAO4D,SAAW1D,OAAOF,EAAO4D,SAAW,GAC1DC,OAAQ5D,GAAMD,EAAO6D,QAAU3D,OAAOF,EAAO6D,QAAU,GACvDC,KAAM7D,GAAMD,EAAO8D,MAAQ5D,OAAOF,EAAO8D,MAAQ,GACjDC,SAAU9D,GAAMD,EAAO+D,UAAYrB,OAAO1C,EAAO+D,UAAY,EAC7DE,UAAWhE,GAAMD,EAAOiE,WAAa/D,OAAOF,EAAOiE,WAAa,MAGxE,MAAA1D,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAOb,YANiBf,IAAjBd,EAAQgF,OAAuBnD,EAAImD,KAAOhF,EAAQgF,WAC9BlE,IAApBd,EAAQiF,UAA0BpD,EAAIoD,QAAUjF,EAAQiF,cACrCnE,IAAnBd,EAAQkF,SAAyBrD,EAAIqD,OAASlF,EAAQkF,aACrCpE,IAAjBd,EAAQmF,OAAuBtD,EAAIsD,KAAOnF,EAAQmF,WAC7BrE,IAArBd,EAAQoF,WAA2BvD,EAAIuD,SAAWnB,KAAKC,MAAMlE,EAAQoF,gBAC/CtE,IAAtBd,EAAQsF,YAA4BzD,EAAIyD,UAAYtF,EAAQsF,WACrDzD,CACX,EACA3B,OAAO4B,GACImB,EAAUlB,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE5E,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EACxB,MAAMrE,EAjFH,CAAEgF,KAAM,GAAIC,QAAS,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,SAAU,EAAGE,UAAW,KAwF1E,OANAtF,EAAQgF,KAA8B,QAAtBhD,EAAKX,EAAO2D,YAAyB,IAAPhD,EAAgBA,EAAK,GACnEhC,EAAQiF,QAAoC,QAAzBhD,EAAKZ,EAAO4D,eAA4B,IAAPhD,EAAgBA,EAAK,GACzEjC,EAAQkF,OAAkC,QAAxBhD,EAAKb,EAAO6D,cAA2B,IAAPhD,EAAgBA,EAAK,GACvElC,EAAQmF,KAA8B,QAAtBhB,EAAK9C,EAAO8D,YAAyB,IAAPhB,EAAgBA,EAAK,GACnEnE,EAAQoF,SAAsC,QAA1BhB,EAAK/C,EAAO+D,gBAA6B,IAAPhB,EAAgBA,EAAK,EAC3EpE,EAAQsF,UAAwC,QAA3BjB,EAAKhD,EAAOiE,iBAA8B,IAAPjB,EAAgBA,EAAK,IACtErE,CACX,GAKG,MAAM0D,EAAsB,CAC/B3D,OAAM,CAACC,EAASC,EAAS,SAAWC,YACK,KAAjCF,EAAQyF,sBACRxF,EAAOG,OAAO,IAAIC,OAAOL,EAAQyF,sBAEF,KAA/BzF,EAAQ0F,oBACRzF,EAAOG,OAAO,IAAIC,OAAOL,EAAQ0F,oBAEA,MAAjC1F,EAAQ2F,sBACR1F,EAAOG,OAAO,IAAImF,OAAOvF,EAAQ2F,sBAEL,MAA5B3F,EAAQ4F,iBACR3F,EAAOG,OAAO,IAAImF,OAAOvF,EAAQ4F,iBAE9B3F,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EArBH,CAAEyF,qBAAsB,GAAIC,mBAAoB,GAAIC,qBAAsB,IAAKC,gBAAiB,KAsBnG,KAAOhF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQyF,qBAAuB7E,EAAOP,SACtC,MACJ,KAAK,EACDL,EAAQ0F,mBAAqB9E,EAAOP,SACpC,MACJ,KAAK,EACDL,EAAQ2F,qBAAuBH,GAAa5E,EAAO2E,UACnD,MACJ,KAAK,EACDvF,EAAQ4F,gBAAkBJ,GAAa5E,EAAO2E,UAC9C,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHoE,qBAAsBnE,GAAMD,EAAOoE,sBAAwBlE,OAAOF,EAAOoE,sBAAwB,GACjGC,mBAAoBpE,GAAMD,EAAOqE,oBAAsBnE,OAAOF,EAAOqE,oBAAsB,GAC3FC,qBAAsBrE,GAAMD,EAAOsE,sBAAwBpE,OAAOF,EAAOsE,sBAAwB,IACjGC,gBAAiBtE,GAAMD,EAAOuE,iBAAmBrE,OAAOF,EAAOuE,iBAAmB,MAG1F,MAAAhE,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAKb,YAJiCf,IAAjCd,EAAQyF,uBAAuC5D,EAAI4D,qBAAuBzF,EAAQyF,2BACnD3E,IAA/Bd,EAAQ0F,qBAAqC7D,EAAI6D,mBAAqB1F,EAAQ0F,yBAC7C5E,IAAjCd,EAAQ2F,uBAAuC9D,EAAI8D,qBAAuB3F,EAAQ2F,2BACtD7E,IAA5Bd,EAAQ4F,kBAAkC/D,EAAI+D,gBAAkB5F,EAAQ4F,iBACjE/D,CACX,EACA3B,OAAO4B,GACI4B,EAAoB3B,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEtF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAChB,MAAMnE,EAjEH,CAAEyF,qBAAsB,GAAIC,mBAAoB,GAAIC,qBAAsB,IAAKC,gBAAiB,KAsEnG,OAJA5F,EAAQyF,qBAA8D,QAAtCzD,EAAKX,EAAOoE,4BAAyC,IAAPzD,EAAgBA,EAAK,GACnGhC,EAAQ0F,mBAA0D,QAApCzD,EAAKZ,EAAOqE,0BAAuC,IAAPzD,EAAgBA,EAAK,GAC/FjC,EAAQ2F,qBAA8D,QAAtCzD,EAAKb,EAAOsE,4BAAyC,IAAPzD,EAAgBA,EAAK,IACnGlC,EAAQ4F,gBAAoD,QAAjCzB,EAAK9C,EAAOuE,uBAAoC,IAAPzB,EAAgBA,EAAK,IAClFnE,CACX,GAKG,MAAM4D,EAAyB,CAClC7D,OAAM,CAACC,EAASC,EAAS,SAAWC,YACE,KAA9BF,EAAQ6F,mBACR5F,EAAOG,OAAO,IAAIC,OAAOL,EAAQ6F,mBAEL,KAA5B7F,EAAQ8F,iBACR7F,EAAOG,OAAO,IAAIC,OAAOL,EAAQ8F,iBAEP,MAA1B9F,EAAQ+F,eACR9F,EAAOG,OAAO,IAAImF,OAAOvF,EAAQ+F,eAE9B9F,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlBH,CAAE6F,kBAAmB,GAAIC,gBAAiB,GAAIC,cAAe,KAmBhE,KAAOnF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQ6F,kBAAoBjF,EAAOP,SACnC,MACJ,KAAK,EACDL,EAAQ8F,gBAAkBlF,EAAOP,SACjC,MACJ,KAAK,EACDL,EAAQ+F,cAAgBP,GAAa5E,EAAO2E,UAC5C,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHwE,kBAAmBvE,GAAMD,EAAOwE,mBAAqBtE,OAAOF,EAAOwE,mBAAqB,GACxFC,gBAAiBxE,GAAMD,EAAOyE,iBAAmBvE,OAAOF,EAAOyE,iBAAmB,GAClFC,cAAezE,GAAMD,EAAO0E,eAAiBxE,OAAOF,EAAO0E,eAAiB,MAGpF,MAAAnE,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAIb,YAH8Bf,IAA9Bd,EAAQ6F,oBAAoChE,EAAIgE,kBAAoB7F,EAAQ6F,wBAChD/E,IAA5Bd,EAAQ8F,kBAAkCjE,EAAIiE,gBAAkB9F,EAAQ8F,sBAC9ChF,IAA1Bd,EAAQ+F,gBAAgClE,EAAIkE,cAAgB/F,EAAQ+F,eAC7DlE,CACX,EACA3B,OAAO4B,GACI8B,EAAuB7B,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEzF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EACZ,MAAMlC,EAzDH,CAAE6F,kBAAmB,GAAIC,gBAAiB,GAAIC,cAAe,KA6DhE,OAHA/F,EAAQ6F,kBAAwD,QAAnC7D,EAAKX,EAAOwE,yBAAsC,IAAP7D,EAAgBA,EAAK,GAC7FhC,EAAQ8F,gBAAoD,QAAjC7D,EAAKZ,EAAOyE,uBAAoC,IAAP7D,EAAgBA,EAAK,GACzFjC,EAAQ+F,cAAgD,QAA/B7D,EAAKb,EAAO0E,qBAAkC,IAAP7D,EAAgBA,EAAK,IAC9ElC,CACX,GAKG,MAAM8D,EAA0B,CACnC/D,OAAM,CAACC,EAASC,EAAS,SAAWC,YACI,MAAhCF,EAAQgG,qBACR/F,EAAOG,OAAO,GAAGmF,OAAOvF,EAAQgG,qBAEJ,KAA5BhG,EAAQiG,iBACRhG,EAAOG,OAAO,IAAIC,OAAOL,EAAQiG,iBAE9BhG,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAEgG,oBAAqB,IAAKC,gBAAiB,IAgBhD,KAAOrF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQgG,oBAAsBR,GAAa5E,EAAO2E,UAClD,MACJ,KAAK,EACDvF,EAAQiG,gBAAkBrF,EAAOP,SACjC,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH2E,oBAAqB1E,GAAMD,EAAO2E,qBAAuBzE,OAAOF,EAAO2E,qBAAuB,IAC9FC,gBAAiB3E,GAAMD,EAAO4E,iBAAmB1E,OAAOF,EAAO4E,iBAAmB,KAG1F,MAAArE,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAGb,YAFgCf,IAAhCd,EAAQgG,sBAAsCnE,EAAImE,oBAAsBhG,EAAQgG,0BACpDlF,IAA5Bd,EAAQiG,kBAAkCpE,EAAIoE,gBAAkBjG,EAAQiG,iBACjEpE,CACX,EACA3B,OAAO4B,GACIgC,EAAwB/B,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE1F,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EACR,MAAMjC,EAjDH,CAAEgG,oBAAqB,IAAKC,gBAAiB,IAoDhD,OAFAjG,EAAQgG,oBAA4D,QAArChE,EAAKX,EAAO2E,2BAAwC,IAAPhE,EAAgBA,EAAK,IACjGhC,EAAQiG,gBAAoD,QAAjChE,EAAKZ,EAAO4E,uBAAoC,IAAPhE,EAAgBA,EAAK,GAClFjC,CACX,GAKG,MAAMkG,EAAgB,CACzBnG,OAAM,CAACC,EAASC,EAAS,SAAWC,YACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAE9BvC,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEwC,SAAU,IAaf,KAAO5B,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQwC,SAAW5B,EAAOP,cAG1BO,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CAAEmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,KAE1E,MAAAZ,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAEb,YADqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,UACnDX,CACX,EACA3B,OAAO4B,GACIoE,EAAcnE,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEhF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAvCH,CAAEwC,SAAU,IAyCf,OADAxC,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GACpEhC,CACX,GAKG,MAAMmG,EAAiB,CAC1BpG,OAAM,CAACC,EAASC,EAAS,SAAWC,iBACTY,IAAnBd,EAAQoG,QACR/D,EAAqBtC,OAAOC,EAAQoG,OAAQnG,EAAOG,OAAO,IAAIkC,QAAQC,SAEnEtC,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEoG,YAAQtF,GAab,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQoG,OAAS/D,EAAqB5B,OAAOG,EAAQA,EAAOR,eAG5DQ,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CAAE+E,OAAQ9E,GAAMD,EAAO+E,QAAU/D,EAAqBjB,SAASC,EAAO+E,aAAUtF,IAE3F,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAGb,YAFmBf,IAAnBd,EAAQoG,SACHvE,EAAIuE,OAASpG,EAAQoG,OAAS/D,EAAqBT,OAAO5B,EAAQoG,aAAUtF,GAC1Ee,CACX,EACA3B,OAAO4B,GACIqE,EAAepE,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEjF,WAAAC,CAAYV,GACR,MAAMrB,EAvCH,CAAEoG,YAAQtF,GA2Cb,OAHAd,EAAQoG,YAA4BtF,IAAlBO,EAAO+E,QAA0C,OAAlB/E,EAAO+E,OAClD/D,EAAqBN,YAAYV,EAAO+E,aACxCtF,EACCd,CACX,GAKG,MAAMqG,EAAsB,CAC/B,MAAAtG,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,OAAON,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEsG,UAAW,IAahB,KAAO1F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQsG,UAAUpF,KAAKN,EAAOP,eAG9BO,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CAAEiF,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,KAEnJ,MAAAC,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAOb,OANI7B,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,GAEbzE,CACX,EACA3B,OAAO4B,GACIuE,EAAoBtE,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEtF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EA5CH,CAAEsG,UAAW,IA8ChB,OADAtG,EAAQsG,WAAyC,QAA3BtE,EAAKX,EAAOiF,iBAA8B,IAAPtE,OAAgB,EAASA,EAAGN,KAAKC,GAAMA,MAAO,GAChG3B,CACX,GAKG,MAAMuG,EAAuB,CAChCxG,OAAM,CAACC,EAASC,EAAS,SAAWC,iBACTY,IAAnBd,EAAQoG,QACR/D,EAAqBtC,OAAOC,EAAQoG,OAAQnG,EAAOG,OAAO,IAAIkC,QAAQC,SAE5C,KAA1BvC,EAAQwG,eACRvG,EAAOG,OAAO,IAAIC,OAAOL,EAAQwG,eAEX,MAAtBxG,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAE9BxG,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlBH,CAAEoG,YAAQtF,EAAW0F,cAAe,GAAIC,UAAW,KAmBtD,KAAO7F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoG,OAAS/D,EAAqB5B,OAAOG,EAAQA,EAAOR,UAC5D,MACJ,KAAK,EACDJ,EAAQwG,cAAgB5F,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+E,OAAQ9E,GAAMD,EAAO+E,QAAU/D,EAAqBjB,SAASC,EAAO+E,aAAUtF,EAC9E0F,cAAelF,GAAMD,EAAOmF,eAAiBjF,OAAOF,EAAOmF,eAAiB,GAC5EC,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,MAGxE,MAAA7E,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAKb,YAJmBf,IAAnBd,EAAQoG,SACHvE,EAAIuE,OAASpG,EAAQoG,OAAS/D,EAAqBT,OAAO5B,EAAQoG,aAAUtF,QACvDA,IAA1Bd,EAAQwG,gBAAgC3E,EAAI2E,cAAgBxG,EAAQwG,oBAC9C1F,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,WACrD5E,CACX,EACA3B,OAAO4B,GACIyE,EAAqBxE,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEvF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EACR,MAAMjC,EA1DH,CAAEoG,YAAQtF,EAAW0F,cAAe,GAAIC,UAAW,KAgEtD,OALAzG,EAAQoG,YAA4BtF,IAAlBO,EAAO+E,QAA0C,OAAlB/E,EAAO+E,OAClD/D,EAAqBN,YAAYV,EAAO+E,aACxCtF,EACNd,EAAQwG,cAAgD,QAA/BxE,EAAKX,EAAOmF,qBAAkC,IAAPxE,EAAgBA,EAAK,GACrFhC,EAAQyG,UAAwC,QAA3BxE,EAAKZ,EAAOoF,iBAA8B,IAAPxE,EAAgBA,EAAK,IACtEjC,CACX,GAKG,MAAM0G,EAA8B,CACvC3G,OAAM,CAACC,EAASC,EAAS,SAAWC,YACH,KAAzBF,EAAQG,cACRF,EAAOG,OAAO,IAAIC,OAAOL,EAAQG,cAEV,KAAvBH,EAAQM,YACRL,EAAOG,OAAO,IAAIC,OAAOL,EAAQM,YAEhB,MAAjBN,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAE9B5G,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EArBH,CAAEG,aAAc,GAAIG,WAAY,GAAIqG,KAAM,IAAKE,MAAO,GAsBzD,KAAOjG,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQG,aAAeS,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQM,WAAaM,EAAOP,SAC5B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,QACIzE,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHlB,aAAcmB,GAAMD,EAAOlB,cAAgBoB,OAAOF,EAAOlB,cAAgB,GACzEG,WAAYgB,GAAMD,EAAOf,YAAciB,OAAOF,EAAOf,YAAc,GACnEqG,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,IAG5D,MAAAjF,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAKb,YAJyBf,IAAzBd,EAAQG,eAA+B0B,EAAI1B,aAAeH,EAAQG,mBAC3CW,IAAvBd,EAAQM,aAA6BuB,EAAIvB,WAAaN,EAAQM,iBAC7CQ,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,QACxDhF,CACX,EACA3B,OAAO4B,GACI4E,EAA4B3E,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE9F,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAChB,MAAMnE,EAjEH,CAAEG,aAAc,GAAIG,WAAY,GAAIqG,KAAM,IAAKE,MAAO,GAsEzD,OAJA7G,EAAQG,aAA8C,QAA9B6B,EAAKX,EAAOlB,oBAAiC,IAAP6B,EAAgBA,EAAK,GACnFhC,EAAQM,WAA0C,QAA5B2B,EAAKZ,EAAOf,kBAA+B,IAAP2B,EAAgBA,EAAK,GAC/EjC,EAAQ2G,KAA8B,QAAtBzE,EAAKb,EAAOsF,YAAyB,IAAPzE,EAAgBA,EAAK,IACnElC,EAAQ6G,MAAgC,QAAvB1C,EAAK9C,EAAOwF,aAA0B,IAAP1C,EAAgBA,EAAK,EAC9DnE,CACX,GAKG,MAAM8G,EAA+B,CACxC,MAAA/G,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQoC,QACpB2E,EAAwBhH,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAKhE,YAHuBzB,IAAnBd,EAAQgH,QACRC,EAAOlH,OAAOC,EAAQgH,OAAQ/G,EAAOG,OAAO,IAAIkC,QAAQC,SAErDtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAEoC,QAAS,GAAI4E,YAAQlG,GAgB1B,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoC,QAAQlB,KAAK6F,EAAwBtG,OAAOG,EAAQA,EAAOR,WACnE,MACJ,KAAK,EACDJ,EAAQgH,OAASC,EAAOxG,OAAOG,EAAQA,EAAOR,UAC9C,MACJ,QACIQ,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHe,QAASZ,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOe,SACxEf,EAAOe,QAAQV,KAAKC,GAAMoF,EAAwB3F,SAASO,KAC3D,GACNqF,OAAQ1F,GAAMD,EAAO2F,QAAUC,EAAO7F,SAASC,EAAO2F,aAAUlG,IAGxE,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAQb,OAPI7B,EAAQoC,QACRP,EAAIO,QAAUpC,EAAQoC,QAAQV,KAAKC,GAAMA,EAAIoF,EAAwBnF,OAAOD,QAAKb,IAGjFe,EAAIO,QAAU,QAECtB,IAAnBd,EAAQgH,SAAyBnF,EAAImF,OAAShH,EAAQgH,OAASC,EAAOrF,OAAO5B,EAAQgH,aAAUlG,GACxFe,CACX,EACA3B,OAAO4B,GACIgF,EAA6B/E,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE/F,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAxDH,CAAEoC,QAAS,GAAI4E,YAAQlG,GA6D1B,OAJAd,EAAQoC,SAAqC,QAAzBJ,EAAKX,EAAOe,eAA4B,IAAPJ,OAAgB,EAASA,EAAGN,KAAKC,GAAMoF,EAAwBhF,YAAYJ,OAAQ,GACxI3B,EAAQgH,YAA4BlG,IAAlBO,EAAO2F,QAA0C,OAAlB3F,EAAO2F,OAClDC,EAAOlF,YAAYV,EAAO2F,aAC1BlG,EACCd,CACX,GAuBG,MAAM+G,EAA0B,CACnChH,OAAM,CAACC,EAASC,EAAS,SAAWC,YACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAER,KAAzBxC,EAAQG,cACRF,EAAOG,OAAO,IAAIC,OAAOL,EAAQG,cAEd,KAAnBH,EAAQyC,QACRxC,EAAOG,OAAO,IAAIC,OAAOL,EAAQyC,QAER,KAAzBzC,EAAQkH,cACRjH,EAAOG,OAAO,IAAIC,OAAOL,EAAQkH,cAEN,KAA3BlH,EAAQmH,gBACRlH,EAAOG,OAAO,IAAIC,OAAOL,EAAQmH,gBAEV,KAAvBnH,EAAQ4C,YACR3C,EAAOG,OAAO,IAAIC,OAAOL,EAAQ4C,YAEH,IAA9B5C,EAAQ6C,mBACR5C,EAAOG,OAAO,IAAIA,OAAOJ,EAAQ6C,mBAED,MAAhC7C,EAAQgG,qBACR/F,EAAOG,OAAO,IAAImF,OAAOvF,EAAQgG,qBAED,MAAhChG,EAAQoH,qBACRnH,EAAOG,OAAO,IAAImF,OAAOvF,EAAQoH,qBAEV,KAAvBpH,EAAQM,YACRL,EAAOG,OAAO,IAAIC,OAAOL,EAAQM,iBAENQ,IAA3Bd,EAAQgD,gBACRC,EAAUlD,OAAOC,EAAQgD,eAAgB/C,EAAOG,OAAO,IAAIkC,QAAQC,SAE1C,KAAzBvC,EAAQkD,cACRjD,EAAOG,OAAO,IAAIC,OAAOL,EAAQkD,cAER,KAAzBlD,EAAQmD,cACRlD,EAAOG,OAAO,KAAKC,OAAOL,EAAQmD,cAEH,KAA/BnD,EAAQoD,oBACRnD,EAAOG,OAAO,KAAKC,OAAOL,EAAQoD,oBAEL,KAA7BpD,EAAQuD,kBACRtD,EAAOG,OAAO,KAAKC,OAAOL,EAAQuD,kBAEF,KAAhCvD,EAAQwD,qBACRvD,EAAOG,OAAO,KAAKC,OAAOL,EAAQwD,qBAEN,KAA5BxD,EAAQiG,iBACRhG,EAAOG,OAAO,KAAKC,OAAOL,EAAQiG,iBAE/BhG,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EA9EH,CACHwC,SAAU,GACVrC,aAAc,GACdsC,OAAQ,GACRyE,aAAc,GACdC,eAAgB,GAChBvE,WAAY,GACZC,kBAAmB,EACnBmD,oBAAqB,IACrBoB,oBAAqB,IACrB9G,WAAY,GACZ0C,oBAAgBlC,EAChBoC,aAAc,GACdC,aAAc,GACdC,mBAAoB,GACpBG,iBAAkB,GAClBC,oBAAqB,GACrByC,gBAAiB,IA8DjB,KAAOrF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQG,aAAeS,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQyC,OAAS7B,EAAOP,SACxB,MACJ,KAAK,EACDL,EAAQkH,aAAetG,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQmH,eAAiBvG,EAAOP,SAChC,MACJ,KAAK,EACDL,EAAQ4C,WAAahC,EAAOP,SAC5B,MACJ,KAAK,EACDL,EAAQ6C,kBAAoBjC,EAAOR,SACnC,MACJ,KAAK,EACDJ,EAAQgG,oBAAsBR,GAAa5E,EAAO2E,UAClD,MACJ,KAAK,EACDvF,EAAQoH,oBAAsB5B,GAAa5E,EAAO2E,UAClD,MACJ,KAAK,GACDvF,EAAQM,WAAaM,EAAOP,SAC5B,MACJ,KAAK,GACDL,EAAQgD,eAAiBC,EAAUxC,OAAOG,EAAQA,EAAOR,UACzD,MACJ,KAAK,GACDJ,EAAQkD,aAAetC,EAAOP,SAC9B,MACJ,KAAK,GACDL,EAAQmD,aAAevC,EAAOP,SAC9B,MACJ,KAAK,GACDL,EAAQoD,mBAAqBxC,EAAOP,SACpC,MACJ,KAAK,GACDL,EAAQuD,iBAAmB3C,EAAOP,SAClC,MACJ,KAAK,GACDL,EAAQwD,oBAAsB5C,EAAOP,SACrC,MACJ,KAAK,GACDL,EAAQiG,gBAAkBrF,EAAOP,SACjC,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DrC,aAAcmB,GAAMD,EAAOlB,cAAgBoB,OAAOF,EAAOlB,cAAgB,GACzEsC,OAAQnB,GAAMD,EAAOoB,QAAUlB,OAAOF,EAAOoB,QAAU,GACvDyE,aAAc5F,GAAMD,EAAO6F,cAAgB3F,OAAOF,EAAO6F,cAAgB,GACzEC,eAAgB7F,GAAMD,EAAO8F,gBAAkB5F,OAAOF,EAAO8F,gBAAkB,GAC/EvE,WAAYtB,GAAMD,EAAOuB,YAAcrB,OAAOF,EAAOuB,YAAc,GACnEC,kBAAmBvB,GAAMD,EAAOwB,mBAAqBkB,OAAO1C,EAAOwB,mBAAqB,EACxFmD,oBAAqB1E,GAAMD,EAAO2E,qBAAuBzE,OAAOF,EAAO2E,qBAAuB,IAC9FoB,oBAAqB9F,GAAMD,EAAO+F,qBAAuB7F,OAAOF,EAAO+F,qBAAuB,IAC9F9G,WAAYgB,GAAMD,EAAOf,YAAciB,OAAOF,EAAOf,YAAc,GACnE0C,eAAgB1B,GAAMD,EAAO2B,gBAAkBC,EAAU7B,SAASC,EAAO2B,qBAAkBlC,EAC3FoC,aAAc5B,GAAMD,EAAO6B,cAAgB3B,OAAOF,EAAO6B,cAAgB,GACzEC,aAAc7B,GAAMD,EAAO8B,cAAgB5B,OAAOF,EAAO8B,cAAgB,GACzEC,mBAAoB9B,GAAMD,EAAO+B,oBAAsB7B,OAAOF,EAAO+B,oBAAsB,GAC3FG,iBAAkBjC,GAAMD,EAAOkC,kBAAoBhC,OAAOF,EAAOkC,kBAAoB,GACrFC,oBAAqBlC,GAAMD,EAAOmC,qBAAuBjC,OAAOF,EAAOmC,qBAAuB,GAC9FyC,gBAAiB3E,GAAMD,EAAO4E,iBAAmB1E,OAAOF,EAAO4E,iBAAmB,KAG1F,MAAArE,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAmBb,YAlBqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACjC1B,IAAzBd,EAAQG,eAA+B0B,EAAI1B,aAAeH,EAAQG,mBAC/CW,IAAnBd,EAAQyC,SAAyBZ,EAAIY,OAASzC,EAAQyC,aAC7B3B,IAAzBd,EAAQkH,eAA+BrF,EAAIqF,aAAelH,EAAQkH,mBACvCpG,IAA3Bd,EAAQmH,iBAAiCtF,EAAIsF,eAAiBnH,EAAQmH,qBAC/CrG,IAAvBd,EAAQ4C,aAA6Bf,EAAIe,WAAa5C,EAAQ4C,iBAChC9B,IAA9Bd,EAAQ6C,oBAAoChB,EAAIgB,kBAAoBoB,KAAKC,MAAMlE,EAAQ6C,yBACvD/B,IAAhCd,EAAQgG,sBAAsCnE,EAAImE,oBAAsBhG,EAAQgG,0BAChDlF,IAAhCd,EAAQoH,sBAAsCvF,EAAIuF,oBAAsBpH,EAAQoH,0BACzDtG,IAAvBd,EAAQM,aAA6BuB,EAAIvB,WAAaN,EAAQM,iBACnCQ,IAA3Bd,EAAQgD,iBACHnB,EAAImB,eAAiBhD,EAAQgD,eAAiBC,EAAUrB,OAAO5B,EAAQgD,qBAAkBlC,QACrEA,IAAzBd,EAAQkD,eAA+BrB,EAAIqB,aAAelD,EAAQkD,mBACzCpC,IAAzBd,EAAQmD,eAA+BtB,EAAIsB,aAAenD,EAAQmD,mBACnCrC,IAA/Bd,EAAQoD,qBAAqCvB,EAAIuB,mBAAqBpD,EAAQoD,yBACjDtC,IAA7Bd,EAAQuD,mBAAmC1B,EAAI0B,iBAAmBvD,EAAQuD,uBAC1CzC,IAAhCd,EAAQwD,sBAAsC3B,EAAI2B,oBAAsBxD,EAAQwD,0BACpD1C,IAA5Bd,EAAQiG,kBAAkCpE,EAAIoE,gBAAkBjG,EAAQiG,iBACjEpE,CACX,EACA3B,OAAO4B,GACIiF,EAAwBhF,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE1F,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAChE,MAAM/E,EA5LH,CACHwC,SAAU,GACVrC,aAAc,GACdsC,OAAQ,GACRyE,aAAc,GACdC,eAAgB,GAChBvE,WAAY,GACZC,kBAAmB,EACnBmD,oBAAqB,IACrBoB,oBAAqB,IACrB9G,WAAY,GACZ0C,oBAAgBlC,EAChBoC,aAAc,GACdC,aAAc,GACdC,mBAAoB,GACpBG,iBAAkB,GAClBC,oBAAqB,GACrByC,gBAAiB,IA+LjB,OAnBAjG,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQG,aAA8C,QAA9B8B,EAAKZ,EAAOlB,oBAAiC,IAAP8B,EAAgBA,EAAK,GACnFjC,EAAQyC,OAAkC,QAAxBP,EAAKb,EAAOoB,cAA2B,IAAPP,EAAgBA,EAAK,GACvElC,EAAQkH,aAA8C,QAA9B/C,EAAK9C,EAAO6F,oBAAiC,IAAP/C,EAAgBA,EAAK,GACnFnE,EAAQmH,eAAkD,QAAhC/C,EAAK/C,EAAO8F,sBAAmC,IAAP/C,EAAgBA,EAAK,GACvFpE,EAAQ4C,WAA0C,QAA5ByB,EAAKhD,EAAOuB,kBAA+B,IAAPyB,EAAgBA,EAAK,GAC/ErE,EAAQ6C,kBAAwD,QAAnCyB,EAAKjD,EAAOwB,yBAAsC,IAAPyB,EAAgBA,EAAK,EAC7FtE,EAAQgG,oBAA4D,QAArCzB,EAAKlD,EAAO2E,2BAAwC,IAAPzB,EAAgBA,EAAK,IACjGvE,EAAQoH,oBAA4D,QAArC5C,EAAKnD,EAAO+F,2BAAwC,IAAP5C,EAAgBA,EAAK,IACjGxE,EAAQM,WAA0C,QAA5BmE,EAAKpD,EAAOf,kBAA+B,IAAPmE,EAAgBA,EAAK,GAC/EzE,EAAQgD,oBAA4ClC,IAA1BO,EAAO2B,gBAA0D,OAA1B3B,EAAO2B,eAClEC,EAAUlB,YAAYV,EAAO2B,qBAC7BlC,EACNd,EAAQkD,aAA8C,QAA9BwB,EAAKrD,EAAO6B,oBAAiC,IAAPwB,EAAgBA,EAAK,GACnF1E,EAAQmD,aAA8C,QAA9BwB,EAAKtD,EAAO8B,oBAAiC,IAAPwB,EAAgBA,EAAK,GACnF3E,EAAQoD,mBAA0D,QAApCwB,EAAKvD,EAAO+B,0BAAuC,IAAPwB,EAAgBA,EAAK,GAC/F5E,EAAQuD,iBAAsD,QAAlCsB,EAAKxD,EAAOkC,wBAAqC,IAAPsB,EAAgBA,EAAK,GAC3F7E,EAAQwD,oBAA4D,QAArCsB,EAAKzD,EAAOmC,2BAAwC,IAAPsB,EAAgBA,EAAK,GACjG9E,EAAQiG,gBAAoD,QAAjClB,EAAK1D,EAAO4E,uBAAoC,IAAPlB,EAAgBA,EAAK,GAClF/E,CACX,GAKG,MAAMiH,EAAS,CAClB,MAAAlH,CAAOC,EAASC,EAAS,SAAWC,UACV,MAAlBF,EAAQqH,OACRpH,EAAOG,OAAO,GAAGmF,OAAOvF,EAAQqH,OAEf,IAAjBrH,EAAQsH,MACRrH,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQsH,MAElB,IAAftH,EAAQuH,IACRtH,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQuH,IAEH,MAA9BvH,EAAQwH,mBACRvH,EAAOG,OAAO,IAAImF,OAAOvF,EAAQwH,mBAErC,IAAK,MAAMjH,KAAKP,EAAQyH,KACpBxH,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,OAAON,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAxBH,CAAEqH,MAAO,IAAKC,KAAM,EAAGC,GAAI,EAAGC,kBAAmB,IAAKC,KAAM,IAyB/D,KAAO7G,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQqH,MAAQ7B,GAAa5E,EAAO2E,UACpC,MACJ,KAAK,EACDvF,EAAQsH,KAAO1G,EAAOyE,SACtB,MACJ,KAAK,EACDrF,EAAQuH,GAAK3G,EAAOyE,SACpB,MACJ,KAAK,EACDrF,EAAQwH,kBAAoBhC,GAAa5E,EAAO2E,UAChD,MACJ,KAAK,EACDvF,EAAQyH,KAAKvG,KAAKN,EAAOP,UACzB,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHgG,MAAO/F,GAAMD,EAAOgG,OAAS9F,OAAOF,EAAOgG,OAAS,IACpDC,KAAMhG,GAAMD,EAAOiG,MAAQvD,OAAO1C,EAAOiG,MAAQ,EACjDC,GAAIjG,GAAMD,EAAOkG,IAAMxD,OAAO1C,EAAOkG,IAAM,EAC3CC,kBAAmBlG,GAAMD,EAAOmG,mBAAqBjG,OAAOF,EAAOmG,mBAAqB,IACxFC,KAAMjG,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOoG,MAAQpG,EAAOoG,KAAK/F,KAAKC,GAAMJ,OAAOI,KAAM,KAG/H,MAAAC,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAWb,YAVkBf,IAAlBd,EAAQqH,QAAwBxF,EAAIwF,MAAQrH,EAAQqH,YACnCvG,IAAjBd,EAAQsH,OAAuBzF,EAAIyF,KAAOrD,KAAKC,MAAMlE,EAAQsH,YAC9CxG,IAAfd,EAAQuH,KAAqB1F,EAAI0F,GAAKtD,KAAKC,MAAMlE,EAAQuH,UAC3BzG,IAA9Bd,EAAQwH,oBAAoC3F,EAAI2F,kBAAoBxH,EAAQwH,mBACxExH,EAAQyH,KACR5F,EAAI4F,KAAOzH,EAAQyH,KAAK/F,KAAKC,GAAMA,IAGnCE,EAAI4F,KAAO,GAER5F,CACX,EACA3B,OAAO4B,GACImF,EAAOlF,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEzE,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EACpB,MAAMpE,EA9EH,CAAEqH,MAAO,IAAKC,KAAM,EAAGC,GAAI,EAAGC,kBAAmB,IAAKC,KAAM,IAoF/D,OALAzH,EAAQqH,MAAgC,QAAvBrF,EAAKX,EAAOgG,aAA0B,IAAPrF,EAAgBA,EAAK,IACrEhC,EAAQsH,KAA8B,QAAtBrF,EAAKZ,EAAOiG,YAAyB,IAAPrF,EAAgBA,EAAK,EACnEjC,EAAQuH,GAA0B,QAApBrF,EAAKb,EAAOkG,UAAuB,IAAPrF,EAAgBA,EAAK,EAC/DlC,EAAQwH,kBAAwD,QAAnCrD,EAAK9C,EAAOmG,yBAAsC,IAAPrD,EAAgBA,EAAK,IAC7FnE,EAAQyH,MAA+B,QAAtBrD,EAAK/C,EAAOoG,YAAyB,IAAPrD,OAAgB,EAASA,EAAG1C,KAAKC,GAAMA,MAAO,GACtF3B,CACX,GAKG,MAAM0H,EAA6B,CACtC3H,OAAM,CAACC,EAASC,EAAS,SAAWC,YACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAE9BvC,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEwC,SAAU,IAaf,KAAO5B,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQwC,SAAW5B,EAAOP,cAG1BO,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CAAEmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,KAE1E,MAAAZ,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAEb,YADqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,UACnDX,CACX,EACA3B,OAAO4B,GACI4F,EAA2B3F,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE7F,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAvCH,CAAEwC,SAAU,IAyCf,OADAxC,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GACpEhC,CACX,GAKG,MAAM2H,EAA8B,CACvC5H,OAAM,CAACC,EAASC,EAAS,SAAWC,iBACTY,IAAnBd,EAAQoG,QACRW,EAAwBhH,OAAOC,EAAQoG,OAAQnG,EAAOG,OAAO,IAAIkC,QAAQC,SAEtEtC,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEoG,YAAQtF,GAab,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQoG,OAASW,EAAwBtG,OAAOG,EAAQA,EAAOR,eAG/DQ,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CAAE+E,OAAQ9E,GAAMD,EAAO+E,QAAUW,EAAwB3F,SAASC,EAAO+E,aAAUtF,IAE9F,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAGb,YAFmBf,IAAnBd,EAAQoG,SACHvE,EAAIuE,OAASpG,EAAQoG,OAASW,EAAwBnF,OAAO5B,EAAQoG,aAAUtF,GAC7Ee,CACX,EACA3B,OAAO4B,GACI6F,EAA4B5F,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE9F,WAAAC,CAAYV,GACR,MAAMrB,EAvCH,CAAEoG,YAAQtF,GA2Cb,OAHAd,EAAQoG,YAA4BtF,IAAlBO,EAAO+E,QAA0C,OAAlB/E,EAAO+E,OAClDW,EAAwBhF,YAAYV,EAAO+E,aAC3CtF,EACCd,CACX,GAKG,MAAM4H,EAAqB,CAC9B7H,OAAM,CAACC,EAASC,EAAS,SAAWC,YACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAE9BvC,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEwC,SAAU,IAaf,KAAO5B,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQwC,SAAW5B,EAAOP,cAG1BO,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CAAEmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,KAE1E,MAAAZ,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAEb,YADqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,UACnDX,CACX,EACA3B,OAAO4B,GACI8F,EAAmB7F,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAErF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAvCH,CAAEwC,SAAU,IAyCf,OADAxC,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GACpEhC,CACX,GAKG,MAAM6H,EAAsB,CAC/B9H,OAAM,CAACC,EAASC,EAAS,SAAWC,iBACNY,IAAtBd,EAAQ8H,WACRC,EAA2BhI,OAAOC,EAAQ8H,UAAW7H,EAAOG,OAAO,IAAIkC,QAAQC,SAE5EtC,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAE8H,eAAWhH,GAahB,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQ8H,UAAYC,EAA2BtH,OAAOG,EAAQA,EAAOR,eAGrEQ,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CAAEyG,UAAWxG,GAAMD,EAAOyG,WAAaC,EAA2B3G,SAASC,EAAOyG,gBAAahH,IAE1G,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAGb,YAFsBf,IAAtBd,EAAQ8H,YACHjG,EAAIiG,UAAY9H,EAAQ8H,UAAYC,EAA2BnG,OAAO5B,EAAQ8H,gBAAahH,GACzFe,CACX,EACA3B,OAAO4B,GACI+F,EAAoB9F,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEtF,WAAAC,CAAYV,GACR,MAAMrB,EAvCH,CAAE8H,eAAWhH,GA2ChB,OAHAd,EAAQ8H,eAAkChH,IAArBO,EAAOyG,WAAgD,OAArBzG,EAAOyG,UACxDC,EAA2BhG,YAAYV,EAAOyG,gBAC9ChH,EACCd,CACX,GAKG,MAAM+H,EAA6B,CACtC,MAAAhI,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQgI,KACpBC,EAAWlI,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAEnD,IAAK,MAAMhC,KAAKP,EAAQkI,MACpBD,EAAWlI,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAQnD,MANyB,MAArBvC,EAAQmI,UACRlI,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQmI,UAEX,MAAtBnI,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAE9BxG,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EArBH,CAAEgI,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAAK1B,UAAW,KAsBpD,KAAO7F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQgI,KAAK9G,KAAK+G,EAAWxH,OAAOG,EAAQA,EAAOR,WACnD,MACJ,KAAK,EACDJ,EAAQkI,MAAMhH,KAAK+G,EAAWxH,OAAOG,EAAQA,EAAOR,WACpD,MACJ,KAAK,EACDJ,EAAQmI,SAAW3C,GAAa5E,EAAOgG,UACvC,MACJ,KAAK,EACD5G,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH2G,KAAMxG,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAO2G,MAAQ3G,EAAO2G,KAAKtG,KAAKC,GAAMsG,EAAW7G,SAASO,KAAM,GACpIuG,MAAO1G,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAO6G,OAAS7G,EAAO6G,MAAMxG,KAAKC,GAAMsG,EAAW7G,SAASO,KAAM,GACvIwG,SAAU7G,GAAMD,EAAO8G,UAAY5G,OAAOF,EAAO8G,UAAY,IAC7D1B,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,MAGxE,MAAA7E,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAeb,OAdI7B,EAAQgI,KACRnG,EAAImG,KAAOhI,EAAQgI,KAAKtG,KAAKC,GAAMA,EAAIsG,EAAWrG,OAAOD,QAAKb,IAG9De,EAAImG,KAAO,GAEXhI,EAAQkI,MACRrG,EAAIqG,MAAQlI,EAAQkI,MAAMxG,KAAKC,GAAMA,EAAIsG,EAAWrG,OAAOD,QAAKb,IAGhEe,EAAIqG,MAAQ,QAEKpH,IAArBd,EAAQmI,WAA2BtG,EAAIsG,SAAWnI,EAAQmI,eACpCrH,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,WACrD5E,CACX,EACA3B,OAAO4B,GACIiG,EAA2BhG,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE7F,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAChB,MAAMnE,EA3EH,CAAEgI,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAAK1B,UAAW,KAgFpD,OAJAzG,EAAQgI,MAA+B,QAAtBhG,EAAKX,EAAO2G,YAAyB,IAAPhG,OAAgB,EAASA,EAAGN,KAAKC,GAAMsG,EAAWlG,YAAYJ,OAAQ,GACrH3B,EAAQkI,OAAiC,QAAvBjG,EAAKZ,EAAO6G,aAA0B,IAAPjG,OAAgB,EAASA,EAAGP,KAAKC,GAAMsG,EAAWlG,YAAYJ,OAAQ,GACvH3B,EAAQmI,SAAsC,QAA1BjG,EAAKb,EAAO8G,gBAA6B,IAAPjG,EAAgBA,EAAK,IAC3ElC,EAAQyG,UAAwC,QAA3BtC,EAAK9C,EAAOoF,iBAA8B,IAAPtC,EAAgBA,EAAK,IACtEnE,CACX,GAKG,MAAMiI,EAAa,CACtBlI,OAAM,CAACC,EAASC,EAAS,SAAWC,YACV,KAAlBF,EAAQoI,OACRnI,EAAOG,OAAO,IAAIC,OAAOL,EAAQoI,OAEZ,KAArBpI,EAAQqI,UACRpI,EAAOG,OAAO,IAAIC,OAAOL,EAAQqI,UAEX,MAAtBrI,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAE9BxG,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlBH,CAAEoI,MAAO,GAAIC,SAAU,GAAI5B,UAAW,KAmBzC,KAAO7F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoI,MAAQxH,EAAOP,SACvB,MACJ,KAAK,EACDL,EAAQqI,SAAWzH,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+G,MAAO9G,GAAMD,EAAO+G,OAAS7G,OAAOF,EAAO+G,OAAS,GACpDC,SAAU/G,GAAMD,EAAOgH,UAAY9G,OAAOF,EAAOgH,UAAY,GAC7D5B,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,MAGxE,MAAA7E,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAIb,YAHkBf,IAAlBd,EAAQoI,QAAwBvG,EAAIuG,MAAQpI,EAAQoI,YAC/BtH,IAArBd,EAAQqI,WAA2BxG,EAAIwG,SAAWrI,EAAQqI,eACpCvH,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,WACrD5E,CACX,EACA3B,OAAO4B,GACImG,EAAWlG,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE7E,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EACZ,MAAMlC,EAzDH,CAAEoI,MAAO,GAAIC,SAAU,GAAI5B,UAAW,KA6DzC,OAHAzG,EAAQoI,MAAgC,QAAvBpG,EAAKX,EAAO+G,aAA0B,IAAPpG,EAAgBA,EAAK,GACrEhC,EAAQqI,SAAsC,QAA1BpG,EAAKZ,EAAOgH,gBAA6B,IAAPpG,EAAgBA,EAAK,GAC3EjC,EAAQyG,UAAwC,QAA3BvE,EAAKb,EAAOoF,iBAA8B,IAAPvE,EAAgBA,EAAK,IACtElC,CACX,GAKG,MAAMsI,EAAsB,CAC/B,MAAAvI,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,OAAON,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEsG,UAAW,IAahB,KAAO1F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQsG,UAAUpF,KAAKN,EAAOP,eAG9BO,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CAAEiF,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,KAEnJ,MAAAC,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAOb,OANI7B,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,GAEbzE,CACX,EACA3B,OAAO4B,GACIwG,EAAoBvG,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEtF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EA5CH,CAAEsG,UAAW,IA8ChB,OADAtG,EAAQsG,WAAyC,QAA3BtE,EAAKX,EAAOiF,iBAA8B,IAAPtE,OAAgB,EAASA,EAAGN,KAAKC,GAAMA,MAAO,GAChG3B,CACX,GAKG,MAAMuI,EAAuB,CAChC,MAAAxI,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQwI,WACpBC,EAAiC1I,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAEzE,OAAOtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEwI,WAAY,IAajB,KAAO5H,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQwI,WAAWtH,KAAKuH,EAAiChI,OAAOG,EAAQA,EAAOR,gBAG/EQ,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmH,WAAYhH,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOmH,YAC3EnH,EAAOmH,WAAW9G,KAAKC,GAAM8G,EAAiCrH,SAASO,KACvE,KAGd,MAAAC,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAOb,OANI7B,EAAQwI,WACR3G,EAAI2G,WAAaxI,EAAQwI,WAAW9G,KAAKC,GAAMA,EAAI8G,EAAiC7G,OAAOD,QAAKb,IAGhGe,EAAI2G,WAAa,GAEd3G,CACX,EACA3B,OAAO4B,GACIyG,EAAqBxG,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEvF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAhDH,CAAEwI,WAAY,IAkDjB,OADAxI,EAAQwI,YAA2C,QAA5BxG,EAAKX,EAAOmH,kBAA+B,IAAPxG,OAAgB,EAASA,EAAGN,KAAKC,GAAM8G,EAAiC1G,YAAYJ,OAAQ,GAChJ3B,CACX,GAKG,MAAMyI,EAAmC,CAC5C1I,OAAM,CAACC,EAASC,EAAS,SAAWC,YACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,eAEX1B,IAAtBd,EAAQ8H,WACRC,EAA2BhI,OAAOC,EAAQ8H,UAAW7H,EAAOG,OAAO,IAAIkC,QAAQC,SAE5EtC,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAEwC,SAAU,GAAIsF,eAAWhH,GAgB9B,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ8H,UAAYC,EAA2BtH,OAAOG,EAAQA,EAAOR,UACrE,MACJ,QACIQ,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DsF,UAAWxG,GAAMD,EAAOyG,WAAaC,EAA2B3G,SAASC,EAAOyG,gBAAahH,IAGrG,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAIb,YAHqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACpC1B,IAAtBd,EAAQ8H,YACHjG,EAAIiG,UAAY9H,EAAQ8H,UAAYC,EAA2BnG,OAAO5B,EAAQ8H,gBAAahH,GACzFe,CACX,EACA3B,OAAO4B,GACI2G,EAAiC1G,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEnG,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAlDH,CAAEwC,SAAU,GAAIsF,eAAWhH,GAuD9B,OAJAd,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQ8H,eAAkChH,IAArBO,EAAOyG,WAAgD,OAArBzG,EAAOyG,UACxDC,EAA2BhG,YAAYV,EAAOyG,gBAC9ChH,EACCd,CACX,GAKG,MAAM0I,EAA2B,CACpC,MAAA3I,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,OAAON,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEsG,UAAW,IAahB,KAAO1F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQsG,UAAUpF,KAAKN,EAAOP,eAG9BO,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CAAEiF,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,KAEnJ,MAAAC,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAOb,OANI7B,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,GAEbzE,CACX,EACA3B,OAAO4B,GACI4G,EAAyB3G,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE3F,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EA5CH,CAAEsG,UAAW,IA8ChB,OADAtG,EAAQsG,WAAyC,QAA3BtE,EAAKX,EAAOiF,iBAA8B,IAAPtE,OAAgB,EAASA,EAAGN,KAAKC,GAAMA,MAAO,GAChG3B,CACX,GAKG,MAAM2I,EAA4B,CACrC5I,OAAM,CAACC,EAASC,EAAS,SAAWC,iBACNY,IAAtBd,EAAQ8H,WACRC,EAA2BhI,OAAOC,EAAQ8H,UAAW7H,EAAOG,OAAO,IAAIkC,QAAQC,SAErD,KAA1BvC,EAAQwG,eACRvG,EAAOG,OAAO,IAAIC,OAAOL,EAAQwG,eAEX,MAAtBxG,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAEZ,KAArBzG,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAE9BvC,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EArBH,CAAE8H,eAAWhH,EAAW0F,cAAe,GAAIC,UAAW,IAAKjE,SAAU,IAsBxE,KAAO5B,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQ8H,UAAYC,EAA2BtH,OAAOG,EAAQA,EAAOR,UACrE,MACJ,KAAK,EACDJ,EAAQwG,cAAgB5F,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,EACDvF,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHyG,UAAWxG,GAAMD,EAAOyG,WAAaC,EAA2B3G,SAASC,EAAOyG,gBAAahH,EAC7F0F,cAAelF,GAAMD,EAAOmF,eAAiBjF,OAAOF,EAAOmF,eAAiB,GAC5EC,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,IAChEjE,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,KAGrE,MAAAZ,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAMb,YALsBf,IAAtBd,EAAQ8H,YACHjG,EAAIiG,UAAY9H,EAAQ8H,UAAYC,EAA2BnG,OAAO5B,EAAQ8H,gBAAahH,QACtEA,IAA1Bd,EAAQwG,gBAAgC3E,EAAI2E,cAAgBxG,EAAQwG,oBAC9C1F,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,gBACvC3F,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,UACnDX,CACX,EACA3B,OAAO4B,GACI6G,EAA0B5G,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE5F,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EACZ,MAAMlC,EAlEH,CAAE8H,eAAWhH,EAAW0F,cAAe,GAAIC,UAAW,IAAKjE,SAAU,IAyExE,OANAxC,EAAQ8H,eAAkChH,IAArBO,EAAOyG,WAAgD,OAArBzG,EAAOyG,UACxDC,EAA2BhG,YAAYV,EAAOyG,gBAC9ChH,EACNd,EAAQwG,cAAgD,QAA/BxE,EAAKX,EAAOmF,qBAAkC,IAAPxE,EAAgBA,EAAK,GACrFhC,EAAQyG,UAAwC,QAA3BxE,EAAKZ,EAAOoF,iBAA8B,IAAPxE,EAAgBA,EAAK,IAC7EjC,EAAQwC,SAAsC,QAA1BN,EAAKb,EAAOmB,gBAA6B,IAAPN,EAAgBA,EAAK,GACpElC,CACX,GAKG,MAAM4I,EAA+B,CACxC,MAAA7I,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,OAAON,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEsG,UAAW,IAahB,KAAO1F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQsG,UAAUpF,KAAKN,EAAOP,eAG9BO,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CAAEiF,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,KAEnJ,MAAAC,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAOb,OANI7B,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,GAEbzE,CACX,EACA3B,OAAO4B,GACI8G,EAA6B7G,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE/F,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EA5CH,CAAEsG,UAAW,IA8ChB,OADAtG,EAAQsG,WAAyC,QAA3BtE,EAAKX,EAAOiF,iBAA8B,IAAPtE,OAAgB,EAASA,EAAGN,KAAKC,GAAMA,MAAO,GAChG3B,CACX,GAKG,MAAM6I,EAAgC,CACzC9I,OAAM,CAACC,EAASC,EAAS,SAAWC,iBACMY,IAAlCd,EAAQ8I,uBACRC,EAAsBhJ,OAAOC,EAAQ8I,sBAAuB7I,EAAOG,OAAO,IAAIkC,QAAQC,SAE5D,KAA1BvC,EAAQwG,eACRvG,EAAOG,OAAO,IAAIC,OAAOL,EAAQwG,eAEX,MAAtBxG,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAEZ,KAArBzG,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAE9BvC,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EArBH,CAAE8I,2BAAuBhI,EAAW0F,cAAe,GAAIC,UAAW,IAAKjE,SAAU,IAsBpF,KAAO5B,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQ8I,sBAAwBC,EAAsBtI,OAAOG,EAAQA,EAAOR,UAC5E,MACJ,KAAK,EACDJ,EAAQwG,cAAgB5F,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,EACDvF,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHyH,sBAAuBxH,GAAMD,EAAOyH,uBAC9BC,EAAsB3H,SAASC,EAAOyH,4BACtChI,EACN0F,cAAelF,GAAMD,EAAOmF,eAAiBjF,OAAOF,EAAOmF,eAAiB,GAC5EC,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,IAChEjE,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,KAGrE,MAAAZ,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAOb,YANkCf,IAAlCd,EAAQ8I,wBAAwCjH,EAAIiH,sBAAwB9I,EAAQ8I,sBAC9EC,EAAsBnH,OAAO5B,EAAQ8I,4BACrChI,QACoBA,IAA1Bd,EAAQwG,gBAAgC3E,EAAI2E,cAAgBxG,EAAQwG,oBAC9C1F,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,gBACvC3F,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,UACnDX,CACX,EACA3B,OAAO4B,GACI+G,EAA8B9G,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEhG,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EACZ,MAAMlC,EArEH,CAAE8I,2BAAuBhI,EAAW0F,cAAe,GAAIC,UAAW,IAAKjE,SAAU,IA6EpF,OAPAxC,EAAQ8I,2BAC8BhI,IAAjCO,EAAOyH,uBAAwE,OAAjCzH,EAAOyH,sBAChDC,EAAsBhH,YAAYV,EAAOyH,4BACzChI,EACVd,EAAQwG,cAAgD,QAA/BxE,EAAKX,EAAOmF,qBAAkC,IAAPxE,EAAgBA,EAAK,GACrFhC,EAAQyG,UAAwC,QAA3BxE,EAAKZ,EAAOoF,iBAA8B,IAAPxE,EAAgBA,EAAK,IAC7EjC,EAAQwC,SAAsC,QAA1BN,EAAKb,EAAOmB,gBAA6B,IAAPN,EAAgBA,EAAK,GACpElC,CACX,GAKG,MAAM+I,EAAwB,CACjC,MAAAhJ,CAAOC,EAASC,EAAS,SAAWC,UACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEZ,MAArBxC,EAAQmI,UACRlI,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQmI,UAErC,IAAK,MAAM5H,KAAKP,EAAQgI,KACpBgB,EAAiBjJ,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAEzD,IAAK,MAAMhC,KAAKP,EAAQkI,MACpBc,EAAiBjJ,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAKzD,MAH0B,MAAtBvC,EAAQsF,WACRrF,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsF,WAE9BrF,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAxBH,CAAEwC,SAAU,GAAI2F,SAAU,IAAKH,KAAM,GAAIE,MAAO,GAAI5C,UAAW,KAyBlE,KAAO1E,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQmI,SAAW3C,GAAa5E,EAAOgG,UACvC,MACJ,KAAK,EACD5G,EAAQgI,KAAK9G,KAAK8H,EAAiBvI,OAAOG,EAAQA,EAAOR,WACzD,MACJ,KAAK,EACDJ,EAAQkI,MAAMhH,KAAK8H,EAAiBvI,OAAOG,EAAQA,EAAOR,WAC1D,MACJ,KAAK,EACDJ,EAAQsF,UAAYE,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D2F,SAAU7G,GAAMD,EAAO8G,UAAY5G,OAAOF,EAAO8G,UAAY,IAC7DH,KAAMxG,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAO2G,MAAQ3G,EAAO2G,KAAKtG,KAAKC,GAAMqH,EAAiB5H,SAASO,KAAM,GAC1IuG,MAAO1G,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAO6G,OAAS7G,EAAO6G,MAAMxG,KAAKC,GAAMqH,EAAiB5H,SAASO,KAAM,GAC7I2D,UAAWhE,GAAMD,EAAOiE,WAAa/D,OAAOF,EAAOiE,WAAa,MAGxE,MAAA1D,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAgBb,YAfqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACrC1B,IAArBd,EAAQmI,WAA2BtG,EAAIsG,SAAWnI,EAAQmI,UACtDnI,EAAQgI,KACRnG,EAAImG,KAAOhI,EAAQgI,KAAKtG,KAAKC,GAAMA,EAAIqH,EAAiBpH,OAAOD,QAAKb,IAGpEe,EAAImG,KAAO,GAEXhI,EAAQkI,MACRrG,EAAIqG,MAAQlI,EAAQkI,MAAMxG,KAAKC,GAAMA,EAAIqH,EAAiBpH,OAAOD,QAAKb,IAGtEe,EAAIqG,MAAQ,QAEMpH,IAAtBd,EAAQsF,YAA4BzD,EAAIyD,UAAYtF,EAAQsF,WACrDzD,CACX,EACA3B,OAAO4B,GACIiH,EAAsBhH,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAExF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EACpB,MAAMpE,EAnFH,CAAEwC,SAAU,GAAI2F,SAAU,IAAKH,KAAM,GAAIE,MAAO,GAAI5C,UAAW,KAyFlE,OALAtF,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQmI,SAAsC,QAA1BlG,EAAKZ,EAAO8G,gBAA6B,IAAPlG,EAAgBA,EAAK,IAC3EjC,EAAQgI,MAA+B,QAAtB9F,EAAKb,EAAO2G,YAAyB,IAAP9F,OAAgB,EAASA,EAAGR,KAAKC,GAAMqH,EAAiBjH,YAAYJ,OAAQ,GAC3H3B,EAAQkI,OAAiC,QAAvB/D,EAAK9C,EAAO6G,aAA0B,IAAP/D,OAAgB,EAASA,EAAGzC,KAAKC,GAAMqH,EAAiBjH,YAAYJ,OAAQ,GAC7H3B,EAAQsF,UAAwC,QAA3BlB,EAAK/C,EAAOiE,iBAA8B,IAAPlB,EAAgBA,EAAK,IACtEpE,CACX,GAKG,MAAMgJ,EAAmB,CAC5BjJ,OAAM,CAACC,EAASC,EAAS,SAAWC,YACV,KAAlBF,EAAQoI,OACRnI,EAAOG,OAAO,IAAIC,OAAOL,EAAQoI,OAEZ,KAArBpI,EAAQqI,UACRpI,EAAOG,OAAO,IAAIC,OAAOL,EAAQqI,WAEZ,IAArBrI,EAAQiJ,UACRhJ,EAAOG,OAAO,IAAIkD,KAAKtD,EAAQiJ,UAET,MAAtBjJ,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAE9BxG,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EArBH,CAAEoI,MAAO,GAAIC,SAAU,GAAIY,UAAU,EAAOxC,UAAW,KAsB1D,KAAO7F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoI,MAAQxH,EAAOP,SACvB,MACJ,KAAK,EACDL,EAAQqI,SAAWzH,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQiJ,SAAWrI,EAAO0C,OAC1B,MACJ,KAAK,EACDtD,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+G,MAAO9G,GAAMD,EAAO+G,OAAS7G,OAAOF,EAAO+G,OAAS,GACpDC,SAAU/G,GAAMD,EAAOgH,UAAY9G,OAAOF,EAAOgH,UAAY,GAC7DY,WAAU3H,GAAMD,EAAO4H,WAAYjF,QAAQ3C,EAAO4H,UAClDxC,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,MAGxE,MAAA7E,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAKb,YAJkBf,IAAlBd,EAAQoI,QAAwBvG,EAAIuG,MAAQpI,EAAQoI,YAC/BtH,IAArBd,EAAQqI,WAA2BxG,EAAIwG,SAAWrI,EAAQqI,eACrCvH,IAArBd,EAAQiJ,WAA2BpH,EAAIoH,SAAWjJ,EAAQiJ,eACpCnI,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,WACrD5E,CACX,EACA3B,OAAO4B,GACIkH,EAAiBjH,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEnF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAChB,MAAMnE,EAjEH,CAAEoI,MAAO,GAAIC,SAAU,GAAIY,UAAU,EAAOxC,UAAW,KAsE1D,OAJAzG,EAAQoI,MAAgC,QAAvBpG,EAAKX,EAAO+G,aAA0B,IAAPpG,EAAgBA,EAAK,GACrEhC,EAAQqI,SAAsC,QAA1BpG,EAAKZ,EAAOgH,gBAA6B,IAAPpG,EAAgBA,EAAK,GAC3EjC,EAAQiJ,SAAsC,QAA1B/G,EAAKb,EAAO4H,gBAA6B,IAAP/G,GAAgBA,EACtElC,EAAQyG,UAAwC,QAA3BtC,EAAK9C,EAAOoF,iBAA8B,IAAPtC,EAAgBA,EAAK,IACtEnE,CACX,GAoBG,MAAMkJ,EAAgB,CACzB,MAAAnJ,CAAOC,EAASC,EAAS,SAAWC,UACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEX,KAAtBxC,EAAQmJ,WACRlJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQmJ,WAER,KAAzBnJ,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEhB,MAAjBpJ,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAEX,MAAtB7G,EAAQqJ,WACRpJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQqJ,WAEb,MAApBrJ,EAAQsJ,SACRrJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsJ,SAErC,IAAK,MAAM/I,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAoB7B,MAlB8B,KAA1BP,EAAQuJ,eACRtJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQuJ,eAEX,KAAtBvJ,EAAQwJ,WACRvJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQwJ,YAEL,IAA5BxJ,EAAQyJ,iBACRxJ,EAAOG,OAAO,IAAIkD,KAAKtD,EAAQyJ,kBAEG,IAAlCzJ,EAAQ0J,uBACRzJ,EAAOG,OAAO,IAAIkD,KAAKtD,EAAQ0J,uBAEX,KAApB1J,EAAQ2J,SACR1J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ2J,SAElB,KAAhB3J,EAAQ4J,KACR3J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ4J,KAE/B3J,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlEH,CACHwC,SAAU,GACV2G,UAAW,GACXC,aAAc,GACdzC,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACXiD,cAAe,GACfC,UAAW,GACXC,iBAAiB,EACjBC,uBAAuB,EACvBC,QAAS,GACTC,IAAK,IAqDL,KAAOhJ,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQmJ,UAAYvI,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,KAAK,EACDrF,EAAQqJ,UAAY7D,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,EACDvF,EAAQsJ,QAAU9D,GAAa5E,EAAO2E,UACtC,MACJ,KAAK,EACDvF,EAAQsG,UAAUpF,KAAKN,EAAOP,UAC9B,MACJ,KAAK,EACDL,EAAQuJ,cAAgB3I,EAAOP,SAC/B,MACJ,KAAK,GACDL,EAAQwJ,UAAY5I,EAAOP,SAC3B,MACJ,KAAK,GACDL,EAAQyJ,gBAAkB7I,EAAO0C,OACjC,MACJ,KAAK,GACDtD,EAAQ0J,sBAAwB9I,EAAO0C,OACvC,MACJ,KAAK,GACDtD,EAAQ2J,QAAU/I,EAAOP,SACzB,MACJ,KAAK,GACDL,EAAQ4J,IAAMhJ,EAAOP,SACrB,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D2G,UAAW7H,GAAMD,EAAO8H,WAAa5H,OAAOF,EAAO8H,WAAa,GAChEC,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzEzC,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,EACpDwC,UAAW/H,GAAMD,EAAOgI,WAAa9H,OAAOF,EAAOgI,WAAa,IAChEC,QAAShI,GAAMD,EAAOiI,SAAW/H,OAAOF,EAAOiI,SAAW,IAC1DhD,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,GACtI4H,cAAejI,GAAMD,EAAOkI,eAAiBhI,OAAOF,EAAOkI,eAAiB,GAC5EC,UAAWlI,GAAMD,EAAOmI,WAAajI,OAAOF,EAAOmI,WAAa,GAChEC,kBAAiBnI,GAAMD,EAAOoI,kBAAmBzF,QAAQ3C,EAAOoI,iBAChEC,wBAAuBpI,GAAMD,EAAOqI,wBAAyB1F,QAAQ3C,EAAOqI,uBAC5EC,QAASrI,GAAMD,EAAOsI,SAAWpI,OAAOF,EAAOsI,SAAW,GAC1DC,IAAKtI,GAAMD,EAAOuI,KAAOrI,OAAOF,EAAOuI,KAAO,KAGtD,MAAAhI,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAoBb,YAnBqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACpC1B,IAAtBd,EAAQmJ,YAA4BtH,EAAIsH,UAAYnJ,EAAQmJ,gBACnCrI,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBACjDtI,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,aACzC/F,IAAtBd,EAAQqJ,YAA4BxH,EAAIwH,UAAYrJ,EAAQqJ,gBACxCvI,IAApBd,EAAQsJ,UAA0BzH,EAAIyH,QAAUtJ,EAAQsJ,SACpDtJ,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,QAEMxF,IAA1Bd,EAAQuJ,gBAAgC1H,EAAI0H,cAAgBvJ,EAAQuJ,oBAC9CzI,IAAtBd,EAAQwJ,YAA4B3H,EAAI2H,UAAYxJ,EAAQwJ,gBAChC1I,IAA5Bd,EAAQyJ,kBAAkC5H,EAAI4H,gBAAkBzJ,EAAQyJ,sBACtC3I,IAAlCd,EAAQ0J,wBAAwC7H,EAAI6H,sBAAwB1J,EAAQ0J,4BAChE5I,IAApBd,EAAQ2J,UAA0B9H,EAAI8H,QAAU3J,EAAQ2J,cACxC7I,IAAhBd,EAAQ4J,MAAsB/H,EAAI+H,IAAM5J,EAAQ4J,KACzC/H,CACX,EACA3B,OAAO4B,GACIoH,EAAcnH,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEhF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACxD,MAAM7E,EArKH,CACHwC,SAAU,GACV2G,UAAW,GACXC,aAAc,GACdzC,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACXiD,cAAe,GACfC,UAAW,GACXC,iBAAiB,EACjBC,uBAAuB,EACvBC,QAAS,GACTC,IAAK,IAsKL,OAdA5J,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQmJ,UAAwC,QAA3BlH,EAAKZ,EAAO8H,iBAA8B,IAAPlH,EAAgBA,EAAK,GAC7EjC,EAAQoJ,aAA8C,QAA9BlH,EAAKb,EAAO+H,oBAAiC,IAAPlH,EAAgBA,EAAK,GACnFlC,EAAQ2G,KAA8B,QAAtBxC,EAAK9C,EAAOsF,YAAyB,IAAPxC,EAAgBA,EAAK,IACnEnE,EAAQ6G,MAAgC,QAAvBzC,EAAK/C,EAAOwF,aAA0B,IAAPzC,EAAgBA,EAAK,EACrEpE,EAAQqJ,UAAwC,QAA3BhF,EAAKhD,EAAOgI,iBAA8B,IAAPhF,EAAgBA,EAAK,IAC7ErE,EAAQsJ,QAAoC,QAAzBhF,EAAKjD,EAAOiI,eAA4B,IAAPhF,EAAgBA,EAAK,IACzEtE,EAAQsG,WAAyC,QAA3B/B,EAAKlD,EAAOiF,iBAA8B,IAAP/B,OAAgB,EAASA,EAAG7C,KAAKC,GAAMA,MAAO,GACvG3B,EAAQuJ,cAAgD,QAA/B/E,EAAKnD,EAAOkI,qBAAkC,IAAP/E,EAAgBA,EAAK,GACrFxE,EAAQwJ,UAAwC,QAA3B/E,EAAKpD,EAAOmI,iBAA8B,IAAP/E,EAAgBA,EAAK,GAC7EzE,EAAQyJ,gBAAoD,QAAjC/E,EAAKrD,EAAOoI,uBAAoC,IAAP/E,GAAgBA,EACpF1E,EAAQ0J,sBAAgE,QAAvC/E,EAAKtD,EAAOqI,6BAA0C,IAAP/E,GAAgBA,EAChG3E,EAAQ2J,QAAoC,QAAzB/E,EAAKvD,EAAOsI,eAA4B,IAAP/E,EAAgBA,EAAK,GACzE5E,EAAQ4J,IAA4B,QAArB/E,EAAKxD,EAAOuI,WAAwB,IAAP/E,EAAgBA,EAAK,GAC1D7E,CACX,GAKG,MAAM6J,EAAiB,CAC1B,MAAA9J,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQ8J,OACpBC,EAAqBhK,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAK7D,YAHuBzB,IAAnBd,EAAQgH,QACRC,EAAOlH,OAAOC,EAAQgH,OAAQ/G,EAAOG,OAAO,IAAIkC,QAAQC,SAErDtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAE8J,OAAQ,GAAI9C,YAAQlG,GAgBzB,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQ8J,OAAO5I,KAAK6I,EAAqBtJ,OAAOG,EAAQA,EAAOR,WAC/D,MACJ,KAAK,EACDJ,EAAQgH,OAASC,EAAOxG,OAAOG,EAAQA,EAAOR,UAC9C,MACJ,QACIQ,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHyI,OAAQtI,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOyI,QAAUzI,EAAOyI,OAAOpI,KAAKC,GAAMoI,EAAqB3I,SAASO,KAAM,GACpJqF,OAAQ1F,GAAMD,EAAO2F,QAAUC,EAAO7F,SAASC,EAAO2F,aAAUlG,IAGxE,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAQb,OAPI7B,EAAQ8J,OACRjI,EAAIiI,OAAS9J,EAAQ8J,OAAOpI,KAAKC,GAAMA,EAAIoI,EAAqBnI,OAAOD,QAAKb,IAG5Ee,EAAIiI,OAAS,QAEEhJ,IAAnBd,EAAQgH,SAAyBnF,EAAImF,OAAShH,EAAQgH,OAASC,EAAOrF,OAAO5B,EAAQgH,aAAUlG,GACxFe,CACX,EACA3B,OAAO4B,GACI+H,EAAe9H,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEjF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAtDH,CAAE8J,OAAQ,GAAI9C,YAAQlG,GA2DzB,OAJAd,EAAQ8J,QAAmC,QAAxB9H,EAAKX,EAAOyI,cAA2B,IAAP9H,OAAgB,EAASA,EAAGN,KAAKC,GAAMoI,EAAqBhI,YAAYJ,OAAQ,GACnI3B,EAAQgH,YAA4BlG,IAAlBO,EAAO2F,QAA0C,OAAlB3F,EAAO2F,OAClDC,EAAOlF,YAAYV,EAAO2F,aAC1BlG,EACCd,CACX,GA4BG,MAAM+J,EAAuB,CAChChK,OAAM,CAACC,EAASC,EAAS,SAAWC,YACN,KAAtBF,EAAQgK,WACR/J,EAAOG,OAAO,IAAIC,OAAOL,EAAQgK,WAEX,KAAtBhK,EAAQmJ,WACRlJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQmJ,WAEZ,KAArBnJ,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAER,KAAzBxC,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,eAER,IAAzBpJ,EAAQiK,cACRhK,EAAOG,OAAO,IAAIkD,KAAKtD,EAAQiK,cAEZ,KAAnBjK,EAAQkK,QACRjK,EAAOG,OAAO,IAAIC,OAAOL,EAAQkK,QAEf,KAAlBlK,EAAQoI,OACRnI,EAAOG,OAAO,IAAIC,OAAOL,EAAQoI,OAEZ,KAArBpI,EAAQqI,UACRpI,EAAOG,OAAO,IAAIC,OAAOL,EAAQqI,UAEJ,KAA7BrI,EAAQmK,kBACRlK,EAAOG,OAAO,IAAIC,OAAOL,EAAQmK,kBAER,KAAzBnK,EAAQoK,cACRnK,EAAOG,OAAO,IAAIC,OAAOL,EAAQoK,cAER,KAAzBpK,EAAQqK,cACRpK,EAAOG,OAAO,IAAIC,OAAOL,EAAQqK,cAEf,KAAlBrK,EAAQsK,OACRrK,EAAOG,OAAO,IAAIC,OAAOL,EAAQsK,OAEX,MAAtBtK,EAAQuK,WACRtK,EAAOG,OAAO,KAAKmF,OAAOvF,EAAQuK,WAEZ,MAAtBvK,EAAQsF,WACRrF,EAAOG,OAAO,KAAKmF,OAAOvF,EAAQsF,WAEV,MAAxBtF,EAAQwK,aACRvK,EAAOG,OAAO,KAAKmF,OAAOvF,EAAQwK,aAEZ,KAAtBxK,EAAQwJ,WACRvJ,EAAOG,OAAO,KAAKC,OAAOL,EAAQwJ,YAER,IAA1BxJ,EAAQuJ,eACRtJ,EAAOG,OAAO,KAAKkD,KAAKtD,EAAQuJ,eAEV,MAAtBvJ,EAAQyK,WACRxK,EAAOG,OAAO,KAAKwG,OAAO5G,EAAQyK,WAEN,KAA5BzK,EAAQ0K,iBACRzK,EAAOG,OAAO,KAAKC,OAAOL,EAAQ0K,iBAER,KAA1B1K,EAAQ2K,eACR1K,EAAOG,OAAO,KAAKC,OAAOL,EAAQ2K,eAEf,KAAnB3K,EAAQ4K,QACR3K,EAAOG,OAAO,KAAKC,OAAOL,EAAQ4K,QAElB,KAAhB5K,EAAQ4J,KACR3J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ4J,KAE/B3J,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlGH,CACHgK,UAAW,GACXb,UAAW,GACX3G,SAAU,GACV4G,aAAc,GACda,cAAc,EACdC,OAAQ,GACR9B,MAAO,GACPC,SAAU,GACV8B,iBAAkB,GAClBC,aAAc,GACdC,aAAc,GACdC,MAAO,GACPC,UAAW,IACXjF,UAAW,IACXkF,YAAa,IACbhB,UAAW,GACXD,eAAe,EACfkB,UAAW,IACXC,gBAAiB,GACjBC,cAAe,GACfC,OAAQ,GACRhB,IAAK,IA6EL,KAAOhJ,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQgK,UAAYpJ,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQmJ,UAAYvI,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQiK,aAAerJ,EAAO0C,OAC9B,MACJ,KAAK,EACDtD,EAAQkK,OAAStJ,EAAOP,SACxB,MACJ,KAAK,EACDL,EAAQoI,MAAQxH,EAAOP,SACvB,MACJ,KAAK,EACDL,EAAQqI,SAAWzH,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQmK,iBAAmBvJ,EAAOP,SAClC,MACJ,KAAK,GACDL,EAAQoK,aAAexJ,EAAOP,SAC9B,MACJ,KAAK,GACDL,EAAQqK,aAAezJ,EAAOP,SAC9B,MACJ,KAAK,GACDL,EAAQsK,MAAQ1J,EAAOP,SACvB,MACJ,KAAK,GACDL,EAAQuK,UAAY/E,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,GACDvF,EAAQsF,UAAYE,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,GACDvF,EAAQwK,YAAchF,GAAa5E,EAAO2E,UAC1C,MACJ,KAAK,GACDvF,EAAQwJ,UAAY5I,EAAOP,SAC3B,MACJ,KAAK,GACDL,EAAQuJ,cAAgB3I,EAAO0C,OAC/B,MACJ,KAAK,GACDtD,EAAQyK,UAAYjF,GAAa5E,EAAOgG,UACxC,MACJ,KAAK,GACD5G,EAAQ0K,gBAAkB9J,EAAOP,SACjC,MACJ,KAAK,GACDL,EAAQ2K,cAAgB/J,EAAOP,SAC/B,MACJ,KAAK,GACDL,EAAQ4K,OAAShK,EAAOP,SACxB,MACJ,KAAK,GACDL,EAAQ4J,IAAMhJ,EAAOP,SACrB,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH2I,UAAW1I,GAAMD,EAAO2I,WAAazI,OAAOF,EAAO2I,WAAa,GAChEb,UAAW7H,GAAMD,EAAO8H,WAAa5H,OAAOF,EAAO8H,WAAa,GAChE3G,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D4G,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzEa,eAAc3I,GAAMD,EAAO4I,eAAgBjG,QAAQ3C,EAAO4I,cAC1DC,OAAQ5I,GAAMD,EAAO6I,QAAU3I,OAAOF,EAAO6I,QAAU,GACvD9B,MAAO9G,GAAMD,EAAO+G,OAAS7G,OAAOF,EAAO+G,OAAS,GACpDC,SAAU/G,GAAMD,EAAOgH,UAAY9G,OAAOF,EAAOgH,UAAY,GAC7D8B,iBAAkB7I,GAAMD,EAAO8I,kBAAoB5I,OAAOF,EAAO8I,kBAAoB,GACrFC,aAAc9I,GAAMD,EAAO+I,cAAgB7I,OAAOF,EAAO+I,cAAgB,GACzEC,aAAc/I,GAAMD,EAAOgJ,cAAgB9I,OAAOF,EAAOgJ,cAAgB,GACzEC,MAAOhJ,GAAMD,EAAOiJ,OAAS/I,OAAOF,EAAOiJ,OAAS,GACpDC,UAAWjJ,GAAMD,EAAOkJ,WAAahJ,OAAOF,EAAOkJ,WAAa,IAChEjF,UAAWhE,GAAMD,EAAOiE,WAAa/D,OAAOF,EAAOiE,WAAa,IAChEkF,YAAalJ,GAAMD,EAAOmJ,aAAejJ,OAAOF,EAAOmJ,aAAe,IACtEhB,UAAWlI,GAAMD,EAAOmI,WAAajI,OAAOF,EAAOmI,WAAa,GAChED,gBAAejI,GAAMD,EAAOkI,gBAAiBvF,QAAQ3C,EAAOkI,eAC5DkB,UAAWnJ,GAAMD,EAAOoJ,WAAalJ,OAAOF,EAAOoJ,WAAa,IAChEC,gBAAiBpJ,GAAMD,EAAOqJ,iBAAmBnJ,OAAOF,EAAOqJ,iBAAmB,GAClFC,cAAerJ,GAAMD,EAAOsJ,eAAiBpJ,OAAOF,EAAOsJ,eAAiB,GAC5EC,OAAQtJ,GAAMD,EAAOuJ,QAAUrJ,OAAOF,EAAOuJ,QAAU,GACvDhB,IAAKtI,GAAMD,EAAOuI,KAAOrI,OAAOF,EAAOuI,KAAO,KAGtD,MAAAhI,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAuBb,YAtBsBf,IAAtBd,EAAQgK,YAA4BnI,EAAImI,UAAYhK,EAAQgK,gBACtClJ,IAAtBd,EAAQmJ,YAA4BtH,EAAIsH,UAAYnJ,EAAQmJ,gBACvCrI,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACjC1B,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBACzCtI,IAAzBd,EAAQiK,eAA+BpI,EAAIoI,aAAejK,EAAQiK,mBAC/CnJ,IAAnBd,EAAQkK,SAAyBrI,EAAIqI,OAASlK,EAAQkK,aACpCpJ,IAAlBd,EAAQoI,QAAwBvG,EAAIuG,MAAQpI,EAAQoI,YAC/BtH,IAArBd,EAAQqI,WAA2BxG,EAAIwG,SAAWrI,EAAQqI,eAC7BvH,IAA7Bd,EAAQmK,mBAAmCtI,EAAIsI,iBAAmBnK,EAAQmK,uBACjDrJ,IAAzBd,EAAQoK,eAA+BvI,EAAIuI,aAAepK,EAAQoK,mBACzCtJ,IAAzBd,EAAQqK,eAA+BxI,EAAIwI,aAAerK,EAAQqK,mBAChDvJ,IAAlBd,EAAQsK,QAAwBzI,EAAIyI,MAAQtK,EAAQsK,YAC9BxJ,IAAtBd,EAAQuK,YAA4B1I,EAAI0I,UAAYvK,EAAQuK,gBACtCzJ,IAAtBd,EAAQsF,YAA4BzD,EAAIyD,UAAYtF,EAAQsF,gBACpCxE,IAAxBd,EAAQwK,cAA8B3I,EAAI2I,YAAcxK,EAAQwK,kBAC1C1J,IAAtBd,EAAQwJ,YAA4B3H,EAAI2H,UAAYxJ,EAAQwJ,gBAClC1I,IAA1Bd,EAAQuJ,gBAAgC1H,EAAI0H,cAAgBvJ,EAAQuJ,oBAC9CzI,IAAtBd,EAAQyK,YAA4B5I,EAAI4I,UAAYzK,EAAQyK,gBAChC3J,IAA5Bd,EAAQ0K,kBAAkC7I,EAAI6I,gBAAkB1K,EAAQ0K,sBAC9C5J,IAA1Bd,EAAQ2K,gBAAgC9I,EAAI8I,cAAgB3K,EAAQ2K,oBACjD7J,IAAnBd,EAAQ4K,SAAyB/I,EAAI+I,OAAS5K,EAAQ4K,aACtC9J,IAAhBd,EAAQ4J,MAAsB/H,EAAI+H,IAAM5J,EAAQ4J,KACzC/H,CACX,EACA3B,OAAO4B,GACIiI,EAAqBhI,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEvF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAI8F,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACxF,MAAMlL,EAxOH,CACHgK,UAAW,GACXb,UAAW,GACX3G,SAAU,GACV4G,aAAc,GACda,cAAc,EACdC,OAAQ,GACR9B,MAAO,GACPC,SAAU,GACV8B,iBAAkB,GAClBC,aAAc,GACdC,aAAc,GACdC,MAAO,GACPC,UAAW,IACXjF,UAAW,IACXkF,YAAa,IACbhB,UAAW,GACXD,eAAe,EACfkB,UAAW,IACXC,gBAAiB,GACjBC,cAAe,GACfC,OAAQ,GACRhB,IAAK,IAyOL,OAtBA5J,EAAQgK,UAAwC,QAA3BhI,EAAKX,EAAO2I,iBAA8B,IAAPhI,EAAgBA,EAAK,GAC7EhC,EAAQmJ,UAAwC,QAA3BlH,EAAKZ,EAAO8H,iBAA8B,IAAPlH,EAAgBA,EAAK,GAC7EjC,EAAQwC,SAAsC,QAA1BN,EAAKb,EAAOmB,gBAA6B,IAAPN,EAAgBA,EAAK,GAC3ElC,EAAQoJ,aAA8C,QAA9BjF,EAAK9C,EAAO+H,oBAAiC,IAAPjF,EAAgBA,EAAK,GACnFnE,EAAQiK,aAA8C,QAA9B7F,EAAK/C,EAAO4I,oBAAiC,IAAP7F,GAAgBA,EAC9EpE,EAAQkK,OAAkC,QAAxB7F,EAAKhD,EAAO6I,cAA2B,IAAP7F,EAAgBA,EAAK,GACvErE,EAAQoI,MAAgC,QAAvB9D,EAAKjD,EAAO+G,aAA0B,IAAP9D,EAAgBA,EAAK,GACrEtE,EAAQqI,SAAsC,QAA1B9D,EAAKlD,EAAOgH,gBAA6B,IAAP9D,EAAgBA,EAAK,GAC3EvE,EAAQmK,iBAAsD,QAAlC3F,EAAKnD,EAAO8I,wBAAqC,IAAP3F,EAAgBA,EAAK,GAC3FxE,EAAQoK,aAA8C,QAA9B3F,EAAKpD,EAAO+I,oBAAiC,IAAP3F,EAAgBA,EAAK,GACnFzE,EAAQqK,aAA8C,QAA9B3F,EAAKrD,EAAOgJ,oBAAiC,IAAP3F,EAAgBA,EAAK,GACnF1E,EAAQsK,MAAgC,QAAvB3F,EAAKtD,EAAOiJ,aAA0B,IAAP3F,EAAgBA,EAAK,GACrE3E,EAAQuK,UAAwC,QAA3B3F,EAAKvD,EAAOkJ,iBAA8B,IAAP3F,EAAgBA,EAAK,IAC7E5E,EAAQsF,UAAwC,QAA3BT,EAAKxD,EAAOiE,iBAA8B,IAAPT,EAAgBA,EAAK,IAC7E7E,EAAQwK,YAA4C,QAA7B1F,EAAKzD,EAAOmJ,mBAAgC,IAAP1F,EAAgBA,EAAK,IACjF9E,EAAQwJ,UAAwC,QAA3BzE,EAAK1D,EAAOmI,iBAA8B,IAAPzE,EAAgBA,EAAK,GAC7E/E,EAAQuJ,cAAgD,QAA/BsB,EAAKxJ,EAAOkI,qBAAkC,IAAPsB,GAAgBA,EAChF7K,EAAQyK,UAAwC,QAA3BK,EAAKzJ,EAAOoJ,iBAA8B,IAAPK,EAAgBA,EAAK,IAC7E9K,EAAQ0K,gBAAoD,QAAjCK,EAAK1J,EAAOqJ,uBAAoC,IAAPK,EAAgBA,EAAK,GACzF/K,EAAQ2K,cAAgD,QAA/BK,EAAK3J,EAAOsJ,qBAAkC,IAAPK,EAAgBA,EAAK,GACrFhL,EAAQ4K,OAAkC,QAAxBK,EAAK5J,EAAOuJ,cAA2B,IAAPK,EAAgBA,EAAK,GACvEjL,EAAQ4J,IAA4B,QAArBsB,EAAK7J,EAAOuI,WAAwB,IAAPsB,EAAgBA,EAAK,GAC1DlL,CACX,GAgBG,MAAMmL,EAAmB,CAC5B,MAAApL,CAAOC,EAASC,EAAS,SAAWC,UACH,KAAzBF,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEZ,KAArBpJ,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEhB,MAAjBxC,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAEX,MAAtB7G,EAAQqJ,WACRpJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQqJ,WAEb,MAApBrJ,EAAQsJ,SACRrJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsJ,SAErC,IAAK,MAAM/I,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAW7B,MAT0B,KAAtBP,EAAQoL,WACRnL,EAAOG,OAAO,IAAIC,OAAOL,EAAQoL,YAEI,IAArCpL,EAAQqL,0BACRpL,EAAOG,OAAO,IAAIkD,KAAKtD,EAAQqL,0BAEJ,KAA3BrL,EAAQsL,gBACRrL,EAAOG,OAAO,IAAIC,OAAOL,EAAQsL,gBAE9BrL,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlDH,CACHoJ,aAAc,GACd5G,SAAU,GACVmE,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACX8E,UAAW,GACXC,0BAA0B,EAC1BC,eAAgB,IAyChB,KAAO1K,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,KAAK,EACDrF,EAAQqJ,UAAY7D,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,EACDvF,EAAQsJ,QAAU9D,GAAa5E,EAAO2E,UACtC,MACJ,KAAK,EACDvF,EAAQsG,UAAUpF,KAAKN,EAAOP,UAC9B,MACJ,KAAK,EACDL,EAAQoL,UAAYxK,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQqL,yBAA2BzK,EAAO0C,OAC1C,MACJ,KAAK,GACDtD,EAAQsL,eAAiB1K,EAAOP,SAChC,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+H,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzE5G,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DmE,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,EACpDwC,UAAW/H,GAAMD,EAAOgI,WAAa9H,OAAOF,EAAOgI,WAAa,IAChEC,QAAShI,GAAMD,EAAOiI,SAAW/H,OAAOF,EAAOiI,SAAW,IAC1DhD,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,GACtIyJ,UAAW9J,GAAMD,EAAO+J,WAAa7J,OAAOF,EAAO+J,WAAa,GAChEC,2BAA0B/J,GAAMD,EAAOgK,2BACjCrH,QAAQ3C,EAAOgK,0BAErBC,eAAgBhK,GAAMD,EAAOiK,gBAAkB/J,OAAOF,EAAOiK,gBAAkB,KAGvF,MAAA1J,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAgBb,YAfyBf,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBAC7CtI,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACzC1B,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,aACzC/F,IAAtBd,EAAQqJ,YAA4BxH,EAAIwH,UAAYrJ,EAAQqJ,gBACxCvI,IAApBd,EAAQsJ,UAA0BzH,EAAIyH,QAAUtJ,EAAQsJ,SACpDtJ,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,QAEExF,IAAtBd,EAAQoL,YAA4BvJ,EAAIuJ,UAAYpL,EAAQoL,gBACvBtK,IAArCd,EAAQqL,2BAA2CxJ,EAAIwJ,yBAA2BrL,EAAQqL,+BAC/DvK,IAA3Bd,EAAQsL,iBAAiCzJ,EAAIyJ,eAAiBtL,EAAQsL,gBAC/DzJ,CACX,EACA3B,OAAO4B,GACIqJ,EAAiBpJ,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEnF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACxC,MAAMzE,EAnIH,CACHoJ,aAAc,GACd5G,SAAU,GACVmE,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACX8E,UAAW,GACXC,0BAA0B,EAC1BC,eAAgB,IAoIhB,OAVAtL,EAAQoJ,aAA8C,QAA9BpH,EAAKX,EAAO+H,oBAAiC,IAAPpH,EAAgBA,EAAK,GACnFhC,EAAQwC,SAAsC,QAA1BP,EAAKZ,EAAOmB,gBAA6B,IAAPP,EAAgBA,EAAK,GAC3EjC,EAAQ2G,KAA8B,QAAtBzE,EAAKb,EAAOsF,YAAyB,IAAPzE,EAAgBA,EAAK,IACnElC,EAAQ6G,MAAgC,QAAvB1C,EAAK9C,EAAOwF,aAA0B,IAAP1C,EAAgBA,EAAK,EACrEnE,EAAQqJ,UAAwC,QAA3BjF,EAAK/C,EAAOgI,iBAA8B,IAAPjF,EAAgBA,EAAK,IAC7EpE,EAAQsJ,QAAoC,QAAzBjF,EAAKhD,EAAOiI,eAA4B,IAAPjF,EAAgBA,EAAK,IACzErE,EAAQsG,WAAyC,QAA3BhC,EAAKjD,EAAOiF,iBAA8B,IAAPhC,OAAgB,EAASA,EAAG5C,KAAKC,GAAMA,MAAO,GACvG3B,EAAQoL,UAAwC,QAA3B7G,EAAKlD,EAAO+J,iBAA8B,IAAP7G,EAAgBA,EAAK,GAC7EvE,EAAQqL,yBAAsE,QAA1C7G,EAAKnD,EAAOgK,gCAA6C,IAAP7G,GAAgBA,EACtGxE,EAAQsL,eAAkD,QAAhC7G,EAAKpD,EAAOiK,sBAAmC,IAAP7G,EAAgBA,EAAK,GAChFzE,CACX,GAKG,MAAMuL,EAAoB,CAC7B,MAAAxL,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQwL,UACpBC,EAAmB1L,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAK3D,YAHuBzB,IAAnBd,EAAQgH,QACRC,EAAOlH,OAAOC,EAAQgH,OAAQ/G,EAAOG,OAAO,IAAIkC,QAAQC,SAErDtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAEwL,UAAW,GAAIxE,YAAQlG,GAgB5B,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwL,UAAUtK,KAAKuK,EAAmBhL,OAAOG,EAAQA,EAAOR,WAChE,MACJ,KAAK,EACDJ,EAAQgH,OAASC,EAAOxG,OAAOG,EAAQA,EAAOR,UAC9C,MACJ,QACIQ,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmK,UAAWhK,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOmK,WAC1EnK,EAAOmK,UAAU9J,KAAKC,GAAM8J,EAAmBrK,SAASO,KACxD,GACNqF,OAAQ1F,GAAMD,EAAO2F,QAAUC,EAAO7F,SAASC,EAAO2F,aAAUlG,IAGxE,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAQb,OAPI7B,EAAQwL,UACR3J,EAAI2J,UAAYxL,EAAQwL,UAAU9J,KAAKC,GAAMA,EAAI8J,EAAmB7J,OAAOD,QAAKb,IAGhFe,EAAI2J,UAAY,QAED1K,IAAnBd,EAAQgH,SAAyBnF,EAAImF,OAAShH,EAAQgH,OAASC,EAAOrF,OAAO5B,EAAQgH,aAAUlG,GACxFe,CACX,EACA3B,OAAO4B,GACIyJ,EAAkBxJ,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEpF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAxDH,CAAEwL,UAAW,GAAIxE,YAAQlG,GA6D5B,OAJAd,EAAQwL,WAAyC,QAA3BxJ,EAAKX,EAAOmK,iBAA8B,IAAPxJ,OAAgB,EAASA,EAAGN,KAAKC,GAAM8J,EAAmB1J,YAAYJ,OAAQ,GACvI3B,EAAQgH,YAA4BlG,IAAlBO,EAAO2F,QAA0C,OAAlB3F,EAAO2F,OAClDC,EAAOlF,YAAYV,EAAO2F,aAC1BlG,EACCd,CACX,GAkBG,MAAMyL,EAAqB,CAC9B1L,OAAM,CAACC,EAASC,EAAS,SAAWC,YACT,KAAnBF,EAAQyC,QACRxC,EAAOG,OAAO,IAAIC,OAAOL,EAAQyC,QAEZ,KAArBzC,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAER,KAAzBxC,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEX,KAAtBpJ,EAAQoL,WACRnL,EAAOG,OAAO,IAAIC,OAAOL,EAAQoL,WAEZ,KAArBpL,EAAQqI,UACRpI,EAAOG,OAAO,IAAIC,OAAOL,EAAQqI,UAEV,KAAvBrI,EAAQ0L,YACRzL,EAAOG,OAAO,IAAIC,OAAOL,EAAQ0L,YAEd,KAAnB1L,EAAQkK,QACRjK,EAAOG,OAAO,IAAIC,OAAOL,EAAQkK,QAEJ,KAA7BlK,EAAQ2L,kBACR1L,EAAOG,OAAO,IAAIC,OAAOL,EAAQ2L,kBAEX,KAAtB3L,EAAQ4L,WACR3L,EAAOG,OAAO,IAAIC,OAAOL,EAAQ4L,WAEO,KAAxC5L,EAAQ6L,6BACR5L,EAAOG,OAAO,IAAIC,OAAOL,EAAQ6L,6BAEX,MAAtB7L,EAAQsF,WACRrF,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsF,WAEX,MAAtBtF,EAAQuK,WACRtK,EAAOG,OAAO,KAAKmF,OAAOvF,EAAQuK,WAE/BtK,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EA1DH,CACHyC,OAAQ,GACRD,SAAU,GACV4G,aAAc,GACdgC,UAAW,GACX/C,SAAU,GACVqD,WAAY,GACZxB,OAAQ,GACRyB,iBAAkB,GAClBC,UAAW,GACXC,4BAA6B,GAC7BvG,UAAW,IACXiF,UAAW,KA+CX,KAAO3J,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQyC,OAAS7B,EAAOP,SACxB,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQoL,UAAYxK,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQqI,SAAWzH,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ0L,WAAa9K,EAAOP,SAC5B,MACJ,KAAK,EACDL,EAAQkK,OAAStJ,EAAOP,SACxB,MACJ,KAAK,EACDL,EAAQ2L,iBAAmB/K,EAAOP,SAClC,MACJ,KAAK,EACDL,EAAQ4L,UAAYhL,EAAOP,SAC3B,MACJ,KAAK,GACDL,EAAQ6L,4BAA8BjL,EAAOP,SAC7C,MACJ,KAAK,GACDL,EAAQsF,UAAYE,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,GACDvF,EAAQuK,UAAY/E,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHoB,OAAQnB,GAAMD,EAAOoB,QAAUlB,OAAOF,EAAOoB,QAAU,GACvDD,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D4G,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzEgC,UAAW9J,GAAMD,EAAO+J,WAAa7J,OAAOF,EAAO+J,WAAa,GAChE/C,SAAU/G,GAAMD,EAAOgH,UAAY9G,OAAOF,EAAOgH,UAAY,GAC7DqD,WAAYpK,GAAMD,EAAOqK,YAAcnK,OAAOF,EAAOqK,YAAc,GACnExB,OAAQ5I,GAAMD,EAAO6I,QAAU3I,OAAOF,EAAO6I,QAAU,GACvDyB,iBAAkBrK,GAAMD,EAAOsK,kBAAoBpK,OAAOF,EAAOsK,kBAAoB,GACrFC,UAAWtK,GAAMD,EAAOuK,WAAarK,OAAOF,EAAOuK,WAAa,GAChEC,4BAA6BvK,GAAMD,EAAOwK,6BACpCtK,OAAOF,EAAOwK,6BACd,GACNvG,UAAWhE,GAAMD,EAAOiE,WAAa/D,OAAOF,EAAOiE,WAAa,IAChEiF,UAAWjJ,GAAMD,EAAOkJ,WAAahJ,OAAOF,EAAOkJ,WAAa,MAGxE,MAAA3I,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAcb,YAbmBf,IAAnBd,EAAQyC,SAAyBZ,EAAIY,OAASzC,EAAQyC,aACjC3B,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACjC1B,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBAC5CtI,IAAtBd,EAAQoL,YAA4BvJ,EAAIuJ,UAAYpL,EAAQoL,gBACvCtK,IAArBd,EAAQqI,WAA2BxG,EAAIwG,SAAWrI,EAAQqI,eACnCvH,IAAvBd,EAAQ0L,aAA6B7J,EAAI6J,WAAa1L,EAAQ0L,iBAC3C5K,IAAnBd,EAAQkK,SAAyBrI,EAAIqI,OAASlK,EAAQkK,aACzBpJ,IAA7Bd,EAAQ2L,mBAAmC9J,EAAI8J,iBAAmB3L,EAAQ2L,uBACpD7K,IAAtBd,EAAQ4L,YAA4B/J,EAAI+J,UAAY5L,EAAQ4L,gBACpB9K,IAAxCd,EAAQ6L,8BACHhK,EAAIgK,4BAA8B7L,EAAQ6L,kCACzB/K,IAAtBd,EAAQsF,YAA4BzD,EAAIyD,UAAYtF,EAAQsF,gBACtCxE,IAAtBd,EAAQuK,YAA4B1I,EAAI0I,UAAYvK,EAAQuK,WACrD1I,CACX,EACA3B,OAAO4B,GACI2J,EAAmB1J,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAErF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAChD,MAAM3E,EAjJH,CACHyC,OAAQ,GACRD,SAAU,GACV4G,aAAc,GACdgC,UAAW,GACX/C,SAAU,GACVqD,WAAY,GACZxB,OAAQ,GACRyB,iBAAkB,GAClBC,UAAW,GACXC,4BAA6B,GAC7BvG,UAAW,IACXiF,UAAW,KAkJX,OAZAvK,EAAQyC,OAAkC,QAAxBT,EAAKX,EAAOoB,cAA2B,IAAPT,EAAgBA,EAAK,GACvEhC,EAAQwC,SAAsC,QAA1BP,EAAKZ,EAAOmB,gBAA6B,IAAPP,EAAgBA,EAAK,GAC3EjC,EAAQoJ,aAA8C,QAA9BlH,EAAKb,EAAO+H,oBAAiC,IAAPlH,EAAgBA,EAAK,GACnFlC,EAAQoL,UAAwC,QAA3BjH,EAAK9C,EAAO+J,iBAA8B,IAAPjH,EAAgBA,EAAK,GAC7EnE,EAAQqI,SAAsC,QAA1BjE,EAAK/C,EAAOgH,gBAA6B,IAAPjE,EAAgBA,EAAK,GAC3EpE,EAAQ0L,WAA0C,QAA5BrH,EAAKhD,EAAOqK,kBAA+B,IAAPrH,EAAgBA,EAAK,GAC/ErE,EAAQkK,OAAkC,QAAxB5F,EAAKjD,EAAO6I,cAA2B,IAAP5F,EAAgBA,EAAK,GACvEtE,EAAQ2L,iBAAsD,QAAlCpH,EAAKlD,EAAOsK,wBAAqC,IAAPpH,EAAgBA,EAAK,GAC3FvE,EAAQ4L,UAAwC,QAA3BpH,EAAKnD,EAAOuK,iBAA8B,IAAPpH,EAAgBA,EAAK,GAC7ExE,EAAQ6L,4BAA4E,QAA7CpH,EAAKpD,EAAOwK,mCAAgD,IAAPpH,EAAgBA,EAAK,GACjHzE,EAAQsF,UAAwC,QAA3BZ,EAAKrD,EAAOiE,iBAA8B,IAAPZ,EAAgBA,EAAK,IAC7E1E,EAAQuK,UAAwC,QAA3B5F,EAAKtD,EAAOkJ,iBAA8B,IAAP5F,EAAgBA,EAAK,IACtE3E,CACX,GAgBG,MAAM8L,EAAqB,CAC9B,MAAA/L,CAAOC,EAASC,EAAS,SAAWC,UACH,KAAzBF,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEZ,KAArBpJ,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEhB,MAAjBxC,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAEX,MAAtB7G,EAAQqJ,WACRpJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQqJ,WAEb,MAApBrJ,EAAQsJ,SACRrJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsJ,SAErC,IAAK,MAAM/I,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAW7B,MAT0B,KAAtBP,EAAQoL,WACRnL,EAAOG,OAAO,IAAIC,OAAOL,EAAQoL,YAEI,IAArCpL,EAAQqL,0BACRpL,EAAOG,OAAO,IAAIkD,KAAKtD,EAAQqL,0BAEJ,KAA3BrL,EAAQsL,gBACRrL,EAAOG,OAAO,IAAIC,OAAOL,EAAQsL,gBAE9BrL,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlDH,CACHoJ,aAAc,GACd5G,SAAU,GACVmE,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACX8E,UAAW,GACXC,0BAA0B,EAC1BC,eAAgB,IAyChB,KAAO1K,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,KAAK,EACDrF,EAAQqJ,UAAY7D,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,EACDvF,EAAQsJ,QAAU9D,GAAa5E,EAAO2E,UACtC,MACJ,KAAK,EACDvF,EAAQsG,UAAUpF,KAAKN,EAAOP,UAC9B,MACJ,KAAK,EACDL,EAAQoL,UAAYxK,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQqL,yBAA2BzK,EAAO0C,OAC1C,MACJ,KAAK,GACDtD,EAAQsL,eAAiB1K,EAAOP,SAChC,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+H,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzE5G,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DmE,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,EACpDwC,UAAW/H,GAAMD,EAAOgI,WAAa9H,OAAOF,EAAOgI,WAAa,IAChEC,QAAShI,GAAMD,EAAOiI,SAAW/H,OAAOF,EAAOiI,SAAW,IAC1DhD,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,GACtIyJ,UAAW9J,GAAMD,EAAO+J,WAAa7J,OAAOF,EAAO+J,WAAa,GAChEC,2BAA0B/J,GAAMD,EAAOgK,2BACjCrH,QAAQ3C,EAAOgK,0BAErBC,eAAgBhK,GAAMD,EAAOiK,gBAAkB/J,OAAOF,EAAOiK,gBAAkB,KAGvF,MAAA1J,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAgBb,YAfyBf,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBAC7CtI,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACzC1B,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,aACzC/F,IAAtBd,EAAQqJ,YAA4BxH,EAAIwH,UAAYrJ,EAAQqJ,gBACxCvI,IAApBd,EAAQsJ,UAA0BzH,EAAIyH,QAAUtJ,EAAQsJ,SACpDtJ,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,QAEExF,IAAtBd,EAAQoL,YAA4BvJ,EAAIuJ,UAAYpL,EAAQoL,gBACvBtK,IAArCd,EAAQqL,2BAA2CxJ,EAAIwJ,yBAA2BrL,EAAQqL,+BAC/DvK,IAA3Bd,EAAQsL,iBAAiCzJ,EAAIyJ,eAAiBtL,EAAQsL,gBAC/DzJ,CACX,EACA3B,OAAO4B,GACIgK,EAAmB/J,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAErF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACxC,MAAMzE,EAnIH,CACHoJ,aAAc,GACd5G,SAAU,GACVmE,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACX8E,UAAW,GACXC,0BAA0B,EAC1BC,eAAgB,IAoIhB,OAVAtL,EAAQoJ,aAA8C,QAA9BpH,EAAKX,EAAO+H,oBAAiC,IAAPpH,EAAgBA,EAAK,GACnFhC,EAAQwC,SAAsC,QAA1BP,EAAKZ,EAAOmB,gBAA6B,IAAPP,EAAgBA,EAAK,GAC3EjC,EAAQ2G,KAA8B,QAAtBzE,EAAKb,EAAOsF,YAAyB,IAAPzE,EAAgBA,EAAK,IACnElC,EAAQ6G,MAAgC,QAAvB1C,EAAK9C,EAAOwF,aAA0B,IAAP1C,EAAgBA,EAAK,EACrEnE,EAAQqJ,UAAwC,QAA3BjF,EAAK/C,EAAOgI,iBAA8B,IAAPjF,EAAgBA,EAAK,IAC7EpE,EAAQsJ,QAAoC,QAAzBjF,EAAKhD,EAAOiI,eAA4B,IAAPjF,EAAgBA,EAAK,IACzErE,EAAQsG,WAAyC,QAA3BhC,EAAKjD,EAAOiF,iBAA8B,IAAPhC,OAAgB,EAASA,EAAG5C,KAAKC,GAAMA,MAAO,GACvG3B,EAAQoL,UAAwC,QAA3B7G,EAAKlD,EAAO+J,iBAA8B,IAAP7G,EAAgBA,EAAK,GAC7EvE,EAAQqL,yBAAsE,QAA1C7G,EAAKnD,EAAOgK,gCAA6C,IAAP7G,GAAgBA,EACtGxE,EAAQsL,eAAkD,QAAhC7G,EAAKpD,EAAOiK,sBAAmC,IAAP7G,EAAgBA,EAAK,GAChFzE,CACX,GAKG,MAAM+L,EAAsB,CAC/B,MAAAhM,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQwL,UACpBQ,EAAqBjM,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAK7D,YAHuBzB,IAAnBd,EAAQgH,QACRC,EAAOlH,OAAOC,EAAQgH,OAAQ/G,EAAOG,OAAO,IAAIkC,QAAQC,SAErDtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAEwL,UAAW,GAAIxE,YAAQlG,GAgB5B,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwL,UAAUtK,KAAK8K,EAAqBvL,OAAOG,EAAQA,EAAOR,WAClE,MACJ,KAAK,EACDJ,EAAQgH,OAASC,EAAOxG,OAAOG,EAAQA,EAAOR,UAC9C,MACJ,QACIQ,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmK,UAAWhK,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOmK,WAC1EnK,EAAOmK,UAAU9J,KAAKC,GAAMqK,EAAqB5K,SAASO,KAC1D,GACNqF,OAAQ1F,GAAMD,EAAO2F,QAAUC,EAAO7F,SAASC,EAAO2F,aAAUlG,IAGxE,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAQb,OAPI7B,EAAQwL,UACR3J,EAAI2J,UAAYxL,EAAQwL,UAAU9J,KAAKC,GAAMA,EAAIqK,EAAqBpK,OAAOD,QAAKb,IAGlFe,EAAI2J,UAAY,QAED1K,IAAnBd,EAAQgH,SAAyBnF,EAAImF,OAAShH,EAAQgH,OAASC,EAAOrF,OAAO5B,EAAQgH,aAAUlG,GACxFe,CACX,EACA3B,OAAO4B,GACIiK,EAAoBhK,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEtF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAxDH,CAAEwL,UAAW,GAAIxE,YAAQlG,GA6D5B,OAJAd,EAAQwL,WAAyC,QAA3BxJ,EAAKX,EAAOmK,iBAA8B,IAAPxJ,OAAgB,EAASA,EAAGN,KAAKC,GAAMqK,EAAqBjK,YAAYJ,OAAQ,GACzI3B,EAAQgH,YAA4BlG,IAAlBO,EAAO2F,QAA0C,OAAlB3F,EAAO2F,OAClDC,EAAOlF,YAAYV,EAAO2F,aAC1BlG,EACCd,CACX,GAiBG,MAAMgM,EAAuB,CAChCjM,OAAM,CAACC,EAASC,EAAS,SAAWC,YACT,KAAnBF,EAAQyC,QACRxC,EAAOG,OAAO,IAAIC,OAAOL,EAAQyC,QAEZ,KAArBzC,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAER,KAAzBxC,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEX,KAAtBpJ,EAAQoL,WACRnL,EAAOG,OAAO,IAAIC,OAAOL,EAAQoL,WAEZ,KAArBpL,EAAQqI,UACRpI,EAAOG,OAAO,IAAIC,OAAOL,EAAQqI,UAEV,KAAvBrI,EAAQ0L,YACRzL,EAAOG,OAAO,IAAIC,OAAOL,EAAQ0L,YAEd,KAAnB1L,EAAQkK,QACRjK,EAAOG,OAAO,IAAIC,OAAOL,EAAQkK,QAEJ,KAA7BlK,EAAQ2L,kBACR1L,EAAOG,OAAO,IAAIC,OAAOL,EAAQ2L,kBAEX,KAAtB3L,EAAQ4L,WACR3L,EAAOG,OAAO,IAAIC,OAAOL,EAAQ4L,WAEX,MAAtB5L,EAAQsF,WACRrF,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsF,WAEf,KAAlBtF,EAAQiM,OACRhM,EAAOG,OAAO,IAAIC,OAAOL,EAAQiM,OAE9BhM,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAtDH,CACHyC,OAAQ,GACRD,SAAU,GACV4G,aAAc,GACdgC,UAAW,GACX/C,SAAU,GACVqD,WAAY,GACZxB,OAAQ,GACRyB,iBAAkB,GAClBC,UAAW,GACXtG,UAAW,IACX2G,MAAO,IA4CP,KAAOrL,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQyC,OAAS7B,EAAOP,SACxB,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQoL,UAAYxK,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQqI,SAAWzH,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ0L,WAAa9K,EAAOP,SAC5B,MACJ,KAAK,EACDL,EAAQkK,OAAStJ,EAAOP,SACxB,MACJ,KAAK,EACDL,EAAQ2L,iBAAmB/K,EAAOP,SAClC,MACJ,KAAK,EACDL,EAAQ4L,UAAYhL,EAAOP,SAC3B,MACJ,KAAK,GACDL,EAAQsF,UAAYE,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,GACDvF,EAAQiM,MAAQrL,EAAOP,SACvB,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHoB,OAAQnB,GAAMD,EAAOoB,QAAUlB,OAAOF,EAAOoB,QAAU,GACvDD,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D4G,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzEgC,UAAW9J,GAAMD,EAAO+J,WAAa7J,OAAOF,EAAO+J,WAAa,GAChE/C,SAAU/G,GAAMD,EAAOgH,UAAY9G,OAAOF,EAAOgH,UAAY,GAC7DqD,WAAYpK,GAAMD,EAAOqK,YAAcnK,OAAOF,EAAOqK,YAAc,GACnExB,OAAQ5I,GAAMD,EAAO6I,QAAU3I,OAAOF,EAAO6I,QAAU,GACvDyB,iBAAkBrK,GAAMD,EAAOsK,kBAAoBpK,OAAOF,EAAOsK,kBAAoB,GACrFC,UAAWtK,GAAMD,EAAOuK,WAAarK,OAAOF,EAAOuK,WAAa,GAChEtG,UAAWhE,GAAMD,EAAOiE,WAAa/D,OAAOF,EAAOiE,WAAa,IAChE2G,MAAO3K,GAAMD,EAAO4K,OAAS1K,OAAOF,EAAO4K,OAAS,KAG5D,MAAArK,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAYb,YAXmBf,IAAnBd,EAAQyC,SAAyBZ,EAAIY,OAASzC,EAAQyC,aACjC3B,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACjC1B,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBAC5CtI,IAAtBd,EAAQoL,YAA4BvJ,EAAIuJ,UAAYpL,EAAQoL,gBACvCtK,IAArBd,EAAQqI,WAA2BxG,EAAIwG,SAAWrI,EAAQqI,eACnCvH,IAAvBd,EAAQ0L,aAA6B7J,EAAI6J,WAAa1L,EAAQ0L,iBAC3C5K,IAAnBd,EAAQkK,SAAyBrI,EAAIqI,OAASlK,EAAQkK,aACzBpJ,IAA7Bd,EAAQ2L,mBAAmC9J,EAAI8J,iBAAmB3L,EAAQ2L,uBACpD7K,IAAtBd,EAAQ4L,YAA4B/J,EAAI+J,UAAY5L,EAAQ4L,gBACtC9K,IAAtBd,EAAQsF,YAA4BzD,EAAIyD,UAAYtF,EAAQsF,gBAC1CxE,IAAlBd,EAAQiM,QAAwBpK,EAAIoK,MAAQjM,EAAQiM,OAC7CpK,CACX,EACA3B,OAAO4B,GACIkK,EAAqBjK,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEvF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAC5C,MAAM1E,EArIH,CACHyC,OAAQ,GACRD,SAAU,GACV4G,aAAc,GACdgC,UAAW,GACX/C,SAAU,GACVqD,WAAY,GACZxB,OAAQ,GACRyB,iBAAkB,GAClBC,UAAW,GACXtG,UAAW,IACX2G,MAAO,IAsIP,OAXAjM,EAAQyC,OAAkC,QAAxBT,EAAKX,EAAOoB,cAA2B,IAAPT,EAAgBA,EAAK,GACvEhC,EAAQwC,SAAsC,QAA1BP,EAAKZ,EAAOmB,gBAA6B,IAAPP,EAAgBA,EAAK,GAC3EjC,EAAQoJ,aAA8C,QAA9BlH,EAAKb,EAAO+H,oBAAiC,IAAPlH,EAAgBA,EAAK,GACnFlC,EAAQoL,UAAwC,QAA3BjH,EAAK9C,EAAO+J,iBAA8B,IAAPjH,EAAgBA,EAAK,GAC7EnE,EAAQqI,SAAsC,QAA1BjE,EAAK/C,EAAOgH,gBAA6B,IAAPjE,EAAgBA,EAAK,GAC3EpE,EAAQ0L,WAA0C,QAA5BrH,EAAKhD,EAAOqK,kBAA+B,IAAPrH,EAAgBA,EAAK,GAC/ErE,EAAQkK,OAAkC,QAAxB5F,EAAKjD,EAAO6I,cAA2B,IAAP5F,EAAgBA,EAAK,GACvEtE,EAAQ2L,iBAAsD,QAAlCpH,EAAKlD,EAAOsK,wBAAqC,IAAPpH,EAAgBA,EAAK,GAC3FvE,EAAQ4L,UAAwC,QAA3BpH,EAAKnD,EAAOuK,iBAA8B,IAAPpH,EAAgBA,EAAK,GAC7ExE,EAAQsF,UAAwC,QAA3Bb,EAAKpD,EAAOiE,iBAA8B,IAAPb,EAAgBA,EAAK,IAC7EzE,EAAQiM,MAAgC,QAAvBvH,EAAKrD,EAAO4K,aAA0B,IAAPvH,EAAgBA,EAAK,GAC9D1E,CACX,GAKG,MAAMkM,EAA6B,CACtCnM,OAAM,CAACC,EAASC,EAAS,SAAWC,YACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEhB,MAAjBxC,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAE9B5G,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlBH,CAAEwC,SAAU,GAAImE,KAAM,IAAKE,MAAO,GAmBrC,KAAOjG,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,QACIzE,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DmE,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,IAG5D,MAAAjF,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAIb,YAHqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACzC1B,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,QACxDhF,CACX,EACA3B,OAAO4B,GACIoK,EAA2BnK,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE7F,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EACZ,MAAMlC,EAzDH,CAAEwC,SAAU,GAAImE,KAAM,IAAKE,MAAO,GA6DrC,OAHA7G,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQ2G,KAA8B,QAAtB1E,EAAKZ,EAAOsF,YAAyB,IAAP1E,EAAgBA,EAAK,IACnEjC,EAAQ6G,MAAgC,QAAvB3E,EAAKb,EAAOwF,aAA0B,IAAP3E,EAAgBA,EAAK,EAC9DlC,CACX,GAKG,MAAMmM,EAA8B,CACvC,MAAApM,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQwL,UACpBC,EAAmB1L,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAE3D,OAAOtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEwL,UAAW,IAahB,KAAO5K,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQwL,UAAUtK,KAAKuK,EAAmBhL,OAAOG,EAAQA,EAAOR,gBAGhEQ,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmK,UAAWhK,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOmK,WAC1EnK,EAAOmK,UAAU9J,KAAKC,GAAM8J,EAAmBrK,SAASO,KACxD,KAGd,MAAAC,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAOb,OANI7B,EAAQwL,UACR3J,EAAI2J,UAAYxL,EAAQwL,UAAU9J,KAAKC,GAAMA,EAAI8J,EAAmB7J,OAAOD,QAAKb,IAGhFe,EAAI2J,UAAY,GAEb3J,CACX,EACA3B,OAAO4B,GACIqK,EAA4BpK,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE9F,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAhDH,CAAEwL,UAAW,IAkDhB,OADAxL,EAAQwL,WAAyC,QAA3BxJ,EAAKX,EAAOmK,iBAA8B,IAAPxJ,OAAgB,EAASA,EAAGN,KAAKC,GAAM8J,EAAmB1J,YAAYJ,OAAQ,GAChI3B,CACX,GAKG,MAAMoM,EAAyB,CAClC,MAAArM,CAAOC,EAASC,EAAS,SAAWC,UACH,KAAzBF,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEZ,KAArBpJ,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEhB,MAAjBxC,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAEb,MAApB7G,EAAQsJ,SACRrJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsJ,SAErC,IAAK,MAAM/I,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,OAAON,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EA3BH,CAAEoJ,aAAc,GAAI5G,SAAU,GAAImE,KAAM,IAAKE,MAAO,EAAGyC,QAAS,IAAKhD,UAAW,IA4BnF,KAAO1F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,KAAK,EACDrF,EAAQsJ,QAAU9D,GAAa5E,EAAO2E,UACtC,MACJ,KAAK,EACDvF,EAAQsG,UAAUpF,KAAKN,EAAOP,UAC9B,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+H,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzE5G,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DmE,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,EACpDyC,QAAShI,GAAMD,EAAOiI,SAAW/H,OAAOF,EAAOiI,SAAW,IAC1DhD,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,KAG9I,MAAAC,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAYb,YAXyBf,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBAC7CtI,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACzC1B,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,aAC3C/F,IAApBd,EAAQsJ,UAA0BzH,EAAIyH,QAAUtJ,EAAQsJ,SACpDtJ,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,GAEbzE,CACX,EACA3B,OAAO4B,GACIsK,EAAuBrK,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEzF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EACxB,MAAMrE,EAtFH,CAAEoJ,aAAc,GAAI5G,SAAU,GAAImE,KAAM,IAAKE,MAAO,EAAGyC,QAAS,IAAKhD,UAAW,IA6FnF,OANAtG,EAAQoJ,aAA8C,QAA9BpH,EAAKX,EAAO+H,oBAAiC,IAAPpH,EAAgBA,EAAK,GACnFhC,EAAQwC,SAAsC,QAA1BP,EAAKZ,EAAOmB,gBAA6B,IAAPP,EAAgBA,EAAK,GAC3EjC,EAAQ2G,KAA8B,QAAtBzE,EAAKb,EAAOsF,YAAyB,IAAPzE,EAAgBA,EAAK,IACnElC,EAAQ6G,MAAgC,QAAvB1C,EAAK9C,EAAOwF,aAA0B,IAAP1C,EAAgBA,EAAK,EACrEnE,EAAQsJ,QAAoC,QAAzBlF,EAAK/C,EAAOiI,eAA4B,IAAPlF,EAAgBA,EAAK,IACzEpE,EAAQsG,WAAyC,QAA3BjC,EAAKhD,EAAOiF,iBAA8B,IAAPjC,OAAgB,EAASA,EAAG3C,KAAKC,GAAMA,MAAO,GAChG3B,CACX,GAKG,MAAMqM,EAA0B,CACnC,MAAAtM,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQsM,SACpBC,EAAexM,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAKvD,YAHuBzB,IAAnBd,EAAQgH,QACRC,EAAOlH,OAAOC,EAAQgH,OAAQ/G,EAAOG,OAAO,IAAIkC,QAAQC,SAErDtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAEsM,SAAU,GAAItF,YAAQlG,GAgB3B,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQsM,SAASpL,KAAKqL,EAAe9L,OAAOG,EAAQA,EAAOR,WAC3D,MACJ,KAAK,EACDJ,EAAQgH,OAASC,EAAOxG,OAAOG,EAAQA,EAAOR,UAC9C,MACJ,QACIQ,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHiL,SAAU9K,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiL,UAAYjL,EAAOiL,SAAS5K,KAAKC,GAAM4K,EAAenL,SAASO,KAAM,GACpJqF,OAAQ1F,GAAMD,EAAO2F,QAAUC,EAAO7F,SAASC,EAAO2F,aAAUlG,IAGxE,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAQb,OAPI7B,EAAQsM,SACRzK,EAAIyK,SAAWtM,EAAQsM,SAAS5K,KAAKC,GAAMA,EAAI4K,EAAe3K,OAAOD,QAAKb,IAG1Ee,EAAIyK,SAAW,QAEAxL,IAAnBd,EAAQgH,SAAyBnF,EAAImF,OAAShH,EAAQgH,OAASC,EAAOrF,OAAO5B,EAAQgH,aAAUlG,GACxFe,CACX,EACA3B,OAAO4B,GACIuK,EAAwBtK,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE1F,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAtDH,CAAEsM,SAAU,GAAItF,YAAQlG,GA2D3B,OAJAd,EAAQsM,UAAuC,QAA1BtK,EAAKX,EAAOiL,gBAA6B,IAAPtK,OAAgB,EAASA,EAAGN,KAAKC,GAAM4K,EAAexK,YAAYJ,OAAQ,GACjI3B,EAAQgH,YAA4BlG,IAAlBO,EAAO2F,QAA0C,OAAlB3F,EAAO2F,OAClDC,EAAOlF,YAAYV,EAAO2F,aAC1BlG,EACCd,CACX,GAKG,MAAMuM,EAAiB,CAC1BxM,OAAM,CAACC,EAASC,EAAS,SAAWC,YACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAER,KAAzBxC,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEd,KAAnBpJ,EAAQwM,QACRvM,EAAOG,OAAO,IAAIC,OAAOL,EAAQwM,QAEX,MAAtBxM,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAE9BxG,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EArBH,CAAEwC,SAAU,GAAI4G,aAAc,GAAIoD,OAAQ,GAAI/F,UAAW,KAsB5D,KAAO7F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQwM,OAAS5L,EAAOP,SACxB,MACJ,KAAK,EACDL,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D4G,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzEoD,OAAQlL,GAAMD,EAAOmL,QAAUjL,OAAOF,EAAOmL,QAAU,GACvD/F,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,MAGxE,MAAA7E,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAKb,YAJqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACjC1B,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBAC/CtI,IAAnBd,EAAQwM,SAAyB3K,EAAI2K,OAASxM,EAAQwM,aAChC1L,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,WACrD5E,CACX,EACA3B,OAAO4B,GACIyK,EAAexK,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEjF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAChB,MAAMnE,EAjEH,CAAEwC,SAAU,GAAI4G,aAAc,GAAIoD,OAAQ,GAAI/F,UAAW,KAsE5D,OAJAzG,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQoJ,aAA8C,QAA9BnH,EAAKZ,EAAO+H,oBAAiC,IAAPnH,EAAgBA,EAAK,GACnFjC,EAAQwM,OAAkC,QAAxBtK,EAAKb,EAAOmL,cAA2B,IAAPtK,EAAgBA,EAAK,GACvElC,EAAQyG,UAAwC,QAA3BtC,EAAK9C,EAAOoF,iBAA8B,IAAPtC,EAAgBA,EAAK,IACtEnE,CACX,GAKG,MAAMyM,GAAsB,CAC/B1M,OAAM,CAACC,EAASC,EAAS,SAAWC,YACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEhB,MAAjBxC,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAEb,MAApB7G,EAAQsJ,SACRrJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsJ,SAE9BrJ,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EArBH,CAAEwC,SAAU,GAAImE,KAAM,IAAKE,MAAO,EAAGyC,QAAS,KAsBjD,KAAO1I,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,KAAK,EACDrF,EAAQsJ,QAAU9D,GAAa5E,EAAO2E,UACtC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DmE,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,EACpDyC,QAAShI,GAAMD,EAAOiI,SAAW/H,OAAOF,EAAOiI,SAAW,MAGlE,MAAA1H,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAKb,YAJqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACzC1B,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,aAC3C/F,IAApBd,EAAQsJ,UAA0BzH,EAAIyH,QAAUtJ,EAAQsJ,SACjDzH,CACX,EACA3B,OAAO4B,GACI2K,GAAoB1K,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEtF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAChB,MAAMnE,EAjEH,CAAEwC,SAAU,GAAImE,KAAM,IAAKE,MAAO,EAAGyC,QAAS,KAsEjD,OAJAtJ,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQ2G,KAA8B,QAAtB1E,EAAKZ,EAAOsF,YAAyB,IAAP1E,EAAgBA,EAAK,IACnEjC,EAAQ6G,MAAgC,QAAvB3E,EAAKb,EAAOwF,aAA0B,IAAP3E,EAAgBA,EAAK,EACrElC,EAAQsJ,QAAoC,QAAzBnF,EAAK9C,EAAOiI,eAA4B,IAAPnF,EAAgBA,EAAK,IAClEnE,CACX,GAKG,MAAM0M,GAAuB,CAChC,MAAA3M,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQ2M,aACpBC,GAAY7M,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAKpD,YAHuBzB,IAAnBd,EAAQgH,QACRC,EAAOlH,OAAOC,EAAQgH,OAAQ/G,EAAOG,OAAO,IAAIkC,QAAQC,SAErDtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAE2M,aAAc,GAAI3F,YAAQlG,GAgB/B,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQ2M,aAAazL,KAAK0L,GAAYnM,OAAOG,EAAQA,EAAOR,WAC5D,MACJ,KAAK,EACDJ,EAAQgH,OAASC,EAAOxG,OAAOG,EAAQA,EAAOR,UAC9C,MACJ,QACIQ,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHsL,aAAcnL,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOsL,cAC7EtL,EAAOsL,aAAajL,KAAKC,GAAMiL,GAAYxL,SAASO,KACpD,GACNqF,OAAQ1F,GAAMD,EAAO2F,QAAUC,EAAO7F,SAASC,EAAO2F,aAAUlG,IAGxE,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAQb,OAPI7B,EAAQ2M,aACR9K,EAAI8K,aAAe3M,EAAQ2M,aAAajL,KAAKC,GAAMA,EAAIiL,GAAYhL,OAAOD,QAAKb,IAG/Ee,EAAI8K,aAAe,QAEJ7L,IAAnBd,EAAQgH,SAAyBnF,EAAImF,OAAShH,EAAQgH,OAASC,EAAOrF,OAAO5B,EAAQgH,aAAUlG,GACxFe,CACX,EACA3B,OAAO4B,GACI4K,GAAqB3K,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEvF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAxDH,CAAE2M,aAAc,GAAI3F,YAAQlG,GA6D/B,OAJAd,EAAQ2M,cAA+C,QAA9B3K,EAAKX,EAAOsL,oBAAiC,IAAP3K,OAAgB,EAASA,EAAGN,KAAKC,GAAMiL,GAAY7K,YAAYJ,OAAQ,GACtI3B,EAAQgH,YAA4BlG,IAAlBO,EAAO2F,QAA0C,OAAlB3F,EAAO2F,OAClDC,EAAOlF,YAAYV,EAAO2F,aAC1BlG,EACCd,CACX,GAKG,MAAM4M,GAAc,CACvB7M,OAAM,CAACC,EAASC,EAAS,SAAWC,YACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEhB,KAAjBxC,EAAQ6M,MACR5M,EAAOG,OAAO,IAAIC,OAAOL,EAAQ6M,MAEX,MAAtB7M,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAE9BxG,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlBH,CAAEwC,SAAU,GAAIqK,KAAM,GAAIpG,UAAW,KAmBxC,KAAO7F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ6M,KAAOjM,EAAOP,SACtB,MACJ,KAAK,EACDL,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DqK,KAAMvL,GAAMD,EAAOwL,MAAQtL,OAAOF,EAAOwL,MAAQ,GACjDpG,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,MAGxE,MAAA7E,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAIb,YAHqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACzC1B,IAAjBd,EAAQ6M,OAAuBhL,EAAIgL,KAAO7M,EAAQ6M,WAC5B/L,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,WACrD5E,CACX,EACA3B,OAAO4B,GACI8K,GAAY7K,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE9E,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EACZ,MAAMlC,EAzDH,CAAEwC,SAAU,GAAIqK,KAAM,GAAIpG,UAAW,KA6DxC,OAHAzG,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQ6M,KAA8B,QAAtB5K,EAAKZ,EAAOwL,YAAyB,IAAP5K,EAAgBA,EAAK,GACnEjC,EAAQyG,UAAwC,QAA3BvE,EAAKb,EAAOoF,iBAA8B,IAAPvE,EAAgBA,EAAK,IACtElC,CACX,GAKG,MAAM8M,GAAyB,CAClC,MAAA/M,CAAOC,EAASC,EAAS,SAAWC,UACH,KAAzBF,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEZ,KAArBpJ,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAErC,IAAK,MAAMjC,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,IAAK,MAAMA,KAAKP,EAAQ+M,cACpB9M,EAAOG,OAAO,IAAIC,OAAOE,GAK7B,MAH+B,KAA3BP,EAAQsL,gBACRrL,EAAOG,OAAO,IAAIC,OAAOL,EAAQsL,gBAE9BrL,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAxBH,CAAEoJ,aAAc,GAAI5G,SAAU,GAAI8D,UAAW,GAAIyG,cAAe,GAAIzB,eAAgB,IAyBvF,KAAO1K,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQsG,UAAUpF,KAAKN,EAAOP,UAC9B,MACJ,KAAK,EACDL,EAAQ+M,cAAc7L,KAAKN,EAAOP,UAClC,MACJ,KAAK,EACDL,EAAQsL,eAAiB1K,EAAOP,SAChC,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+H,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzE5G,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D8D,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,GACtIoL,cAAevL,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAO0L,eAAiB1L,EAAO0L,cAAcrL,KAAKC,GAAMJ,OAAOI,KAAM,GAClJ2J,eAAgBhK,GAAMD,EAAOiK,gBAAkB/J,OAAOF,EAAOiK,gBAAkB,KAGvF,MAAA1J,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAgBb,YAfyBf,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBAC7CtI,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,UACtDxC,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,GAEhBtG,EAAQ+M,cACRlL,EAAIkL,cAAgB/M,EAAQ+M,cAAcrL,KAAKC,GAAMA,IAGrDE,EAAIkL,cAAgB,QAEGjM,IAA3Bd,EAAQsL,iBAAiCzJ,EAAIyJ,eAAiBtL,EAAQsL,gBAC/DzJ,CACX,EACA3B,OAAO4B,GACIgL,GAAuB/K,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEzF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EACpB,MAAMpE,EAnFH,CAAEoJ,aAAc,GAAI5G,SAAU,GAAI8D,UAAW,GAAIyG,cAAe,GAAIzB,eAAgB,IAyFvF,OALAtL,EAAQoJ,aAA8C,QAA9BpH,EAAKX,EAAO+H,oBAAiC,IAAPpH,EAAgBA,EAAK,GACnFhC,EAAQwC,SAAsC,QAA1BP,EAAKZ,EAAOmB,gBAA6B,IAAPP,EAAgBA,EAAK,GAC3EjC,EAAQsG,WAAyC,QAA3BpE,EAAKb,EAAOiF,iBAA8B,IAAPpE,OAAgB,EAASA,EAAGR,KAAKC,GAAMA,MAAO,GACvG3B,EAAQ+M,eAAiD,QAA/B5I,EAAK9C,EAAO0L,qBAAkC,IAAP5I,OAAgB,EAASA,EAAGzC,KAAKC,GAAMA,MAAO,GAC/G3B,EAAQsL,eAAkD,QAAhClH,EAAK/C,EAAOiK,sBAAmC,IAAPlH,EAAgBA,EAAK,GAChFpE,CACX,GAKG,MAAMgN,GAA0B,CACnCjN,OAAM,CAACC,EAASC,EAAS,SAAWC,iBACPY,IAArBd,EAAQiN,UACRxB,EAAmB1L,OAAOC,EAAQiN,SAAUhN,EAAOG,OAAO,IAAIkC,QAAQC,SAEhD,MAAtBvC,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAE9BxG,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAEiN,cAAUnM,EAAW2F,UAAW,KAgBrC,KAAO7F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQiN,SAAWxB,EAAmBhL,OAAOG,EAAQA,EAAOR,UAC5D,MACJ,KAAK,EACDJ,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH4L,SAAU3L,GAAMD,EAAO4L,UAAYxB,EAAmBrK,SAASC,EAAO4L,eAAYnM,EAClF2F,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,MAGxE,MAAA7E,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAIb,YAHqBf,IAArBd,EAAQiN,WACHpL,EAAIoL,SAAWjN,EAAQiN,SAAWxB,EAAmB7J,OAAO5B,EAAQiN,eAAYnM,QAC/DA,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,WACrD5E,CACX,EACA3B,OAAO4B,GACIkL,GAAwBjL,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE1F,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAlDH,CAAEiN,cAAUnM,EAAW2F,UAAW,KAuDrC,OAJAzG,EAAQiN,cAAgCnM,IAApBO,EAAO4L,UAA8C,OAApB5L,EAAO4L,SACtDxB,EAAmB1J,YAAYV,EAAO4L,eACtCnM,EACNd,EAAQyG,UAAwC,QAA3BzE,EAAKX,EAAOoF,iBAA8B,IAAPzE,EAAgBA,EAAK,IACtEhC,CACX,GAoBG,MAAMkN,GAAsB,CAC/B,MAAAnN,CAAOC,EAASC,EAAS,SAAWC,UACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEX,KAAtBxC,EAAQmJ,WACRlJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQmJ,WAER,KAAzBnJ,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEhB,MAAjBpJ,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAEX,MAAtB7G,EAAQqJ,WACRpJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQqJ,WAEb,MAApBrJ,EAAQsJ,SACRrJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsJ,SAErC,IAAK,MAAM/I,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAoB7B,MAlB8B,KAA1BP,EAAQuJ,eACRtJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQuJ,eAEX,KAAtBvJ,EAAQwJ,WACRvJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQwJ,YAEL,IAA5BxJ,EAAQyJ,iBACRxJ,EAAOG,OAAO,IAAIkD,KAAKtD,EAAQyJ,kBAEG,IAAlCzJ,EAAQ0J,uBACRzJ,EAAOG,OAAO,IAAIkD,KAAKtD,EAAQ0J,uBAEX,KAApB1J,EAAQ2J,SACR1J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ2J,SAElB,KAAhB3J,EAAQ4J,KACR3J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ4J,KAE/B3J,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlEH,CACHwC,SAAU,GACV2G,UAAW,GACXC,aAAc,GACdzC,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACXiD,cAAe,GACfC,UAAW,GACXC,iBAAiB,EACjBC,uBAAuB,EACvBC,QAAS,GACTC,IAAK,IAqDL,KAAOhJ,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQmJ,UAAYvI,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,KAAK,EACDrF,EAAQqJ,UAAY7D,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,EACDvF,EAAQsJ,QAAU9D,GAAa5E,EAAO2E,UACtC,MACJ,KAAK,EACDvF,EAAQsG,UAAUpF,KAAKN,EAAOP,UAC9B,MACJ,KAAK,EACDL,EAAQuJ,cAAgB3I,EAAOP,SAC/B,MACJ,KAAK,GACDL,EAAQwJ,UAAY5I,EAAOP,SAC3B,MACJ,KAAK,GACDL,EAAQyJ,gBAAkB7I,EAAO0C,OACjC,MACJ,KAAK,GACDtD,EAAQ0J,sBAAwB9I,EAAO0C,OACvC,MACJ,KAAK,GACDtD,EAAQ2J,QAAU/I,EAAOP,SACzB,MACJ,KAAK,GACDL,EAAQ4J,IAAMhJ,EAAOP,SACrB,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D2G,UAAW7H,GAAMD,EAAO8H,WAAa5H,OAAOF,EAAO8H,WAAa,GAChEC,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzEzC,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,EACpDwC,UAAW/H,GAAMD,EAAOgI,WAAa9H,OAAOF,EAAOgI,WAAa,IAChEC,QAAShI,GAAMD,EAAOiI,SAAW/H,OAAOF,EAAOiI,SAAW,IAC1DhD,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,GACtI4H,cAAejI,GAAMD,EAAOkI,eAAiBhI,OAAOF,EAAOkI,eAAiB,GAC5EC,UAAWlI,GAAMD,EAAOmI,WAAajI,OAAOF,EAAOmI,WAAa,GAChEC,kBAAiBnI,GAAMD,EAAOoI,kBAAmBzF,QAAQ3C,EAAOoI,iBAChEC,wBAAuBpI,GAAMD,EAAOqI,wBAAyB1F,QAAQ3C,EAAOqI,uBAC5EC,QAASrI,GAAMD,EAAOsI,SAAWpI,OAAOF,EAAOsI,SAAW,GAC1DC,IAAKtI,GAAMD,EAAOuI,KAAOrI,OAAOF,EAAOuI,KAAO,KAGtD,MAAAhI,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAoBb,YAnBqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACpC1B,IAAtBd,EAAQmJ,YAA4BtH,EAAIsH,UAAYnJ,EAAQmJ,gBACnCrI,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBACjDtI,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,aACzC/F,IAAtBd,EAAQqJ,YAA4BxH,EAAIwH,UAAYrJ,EAAQqJ,gBACxCvI,IAApBd,EAAQsJ,UAA0BzH,EAAIyH,QAAUtJ,EAAQsJ,SACpDtJ,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,QAEMxF,IAA1Bd,EAAQuJ,gBAAgC1H,EAAI0H,cAAgBvJ,EAAQuJ,oBAC9CzI,IAAtBd,EAAQwJ,YAA4B3H,EAAI2H,UAAYxJ,EAAQwJ,gBAChC1I,IAA5Bd,EAAQyJ,kBAAkC5H,EAAI4H,gBAAkBzJ,EAAQyJ,sBACtC3I,IAAlCd,EAAQ0J,wBAAwC7H,EAAI6H,sBAAwB1J,EAAQ0J,4BAChE5I,IAApBd,EAAQ2J,UAA0B9H,EAAI8H,QAAU3J,EAAQ2J,cACxC7I,IAAhBd,EAAQ4J,MAAsB/H,EAAI+H,IAAM5J,EAAQ4J,KACzC/H,CACX,EACA3B,OAAO4B,GACIoL,GAAoBnL,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEtF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACxD,MAAM7E,EArKH,CACHwC,SAAU,GACV2G,UAAW,GACXC,aAAc,GACdzC,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACXiD,cAAe,GACfC,UAAW,GACXC,iBAAiB,EACjBC,uBAAuB,EACvBC,QAAS,GACTC,IAAK,IAsKL,OAdA5J,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQmJ,UAAwC,QAA3BlH,EAAKZ,EAAO8H,iBAA8B,IAAPlH,EAAgBA,EAAK,GAC7EjC,EAAQoJ,aAA8C,QAA9BlH,EAAKb,EAAO+H,oBAAiC,IAAPlH,EAAgBA,EAAK,GACnFlC,EAAQ2G,KAA8B,QAAtBxC,EAAK9C,EAAOsF,YAAyB,IAAPxC,EAAgBA,EAAK,IACnEnE,EAAQ6G,MAAgC,QAAvBzC,EAAK/C,EAAOwF,aAA0B,IAAPzC,EAAgBA,EAAK,EACrEpE,EAAQqJ,UAAwC,QAA3BhF,EAAKhD,EAAOgI,iBAA8B,IAAPhF,EAAgBA,EAAK,IAC7ErE,EAAQsJ,QAAoC,QAAzBhF,EAAKjD,EAAOiI,eAA4B,IAAPhF,EAAgBA,EAAK,IACzEtE,EAAQsG,WAAyC,QAA3B/B,EAAKlD,EAAOiF,iBAA8B,IAAP/B,OAAgB,EAASA,EAAG7C,KAAKC,GAAMA,MAAO,GACvG3B,EAAQuJ,cAAgD,QAA/B/E,EAAKnD,EAAOkI,qBAAkC,IAAP/E,EAAgBA,EAAK,GACrFxE,EAAQwJ,UAAwC,QAA3B/E,EAAKpD,EAAOmI,iBAA8B,IAAP/E,EAAgBA,EAAK,GAC7EzE,EAAQyJ,gBAAoD,QAAjC/E,EAAKrD,EAAOoI,uBAAoC,IAAP/E,GAAgBA,EACpF1E,EAAQ0J,sBAAgE,QAAvC/E,EAAKtD,EAAOqI,6BAA0C,IAAP/E,GAAgBA,EAChG3E,EAAQ2J,QAAoC,QAAzB/E,EAAKvD,EAAOsI,eAA4B,IAAP/E,EAAgBA,EAAK,GACzE5E,EAAQ4J,IAA4B,QAArB/E,EAAKxD,EAAOuI,WAAwB,IAAP/E,EAAgBA,EAAK,GAC1D7E,CACX,GAKG,MAAMmN,GAAuB,CAChCpN,OAAM,CAACC,EAASC,EAAS,SAAWC,iBACVY,IAAlBd,EAAQoN,OACRrD,EAAqBhK,OAAOC,EAAQoN,MAAOnN,EAAOG,OAAO,IAAIkC,QAAQC,SAE3C,KAA1BvC,EAAQwG,eACRvG,EAAOG,OAAO,IAAIC,OAAOL,EAAQwG,eAEX,MAAtBxG,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAE9BxG,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlBH,CAAEoN,WAAOtM,EAAW0F,cAAe,GAAIC,UAAW,KAmBrD,KAAO7F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoN,MAAQrD,EAAqBtJ,OAAOG,EAAQA,EAAOR,UAC3D,MACJ,KAAK,EACDJ,EAAQwG,cAAgB5F,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+L,MAAO9L,GAAMD,EAAO+L,OAASrD,EAAqB3I,SAASC,EAAO+L,YAAStM,EAC3E0F,cAAelF,GAAMD,EAAOmF,eAAiBjF,OAAOF,EAAOmF,eAAiB,GAC5EC,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,MAGxE,MAAA7E,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAIb,YAHkBf,IAAlBd,EAAQoN,QAAwBvL,EAAIuL,MAAQpN,EAAQoN,MAAQrD,EAAqBnI,OAAO5B,EAAQoN,YAAStM,QAC/EA,IAA1Bd,EAAQwG,gBAAgC3E,EAAI2E,cAAgBxG,EAAQwG,oBAC9C1F,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,WACrD5E,CACX,EACA3B,OAAO4B,GACIqL,GAAqBpL,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEvF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EACR,MAAMjC,EAzDH,CAAEoN,WAAOtM,EAAW0F,cAAe,GAAIC,UAAW,KA+DrD,OALAzG,EAAQoN,WAA0BtM,IAAjBO,EAAO+L,OAAwC,OAAjB/L,EAAO+L,MAChDrD,EAAqBhI,YAAYV,EAAO+L,YACxCtM,EACNd,EAAQwG,cAAgD,QAA/BxE,EAAKX,EAAOmF,qBAAkC,IAAPxE,EAAgBA,EAAK,GACrFhC,EAAQyG,UAAwC,QAA3BxE,EAAKZ,EAAOoF,iBAA8B,IAAPxE,EAAgBA,EAAK,IACtEjC,CACX,GAoBG,MAAMqN,GAAgB,CACzB,MAAAtN,CAAOC,EAASC,EAAS,SAAWC,UACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEP,KAA1BxC,EAAQsN,eACRrN,EAAOG,OAAO,IAAIC,OAAOL,EAAQsN,eAEX,KAAtBtN,EAAQoL,WACRnL,EAAOG,OAAO,IAAIC,OAAOL,EAAQoL,WAER,KAAzBpL,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEhB,MAAjBpJ,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAEX,MAAtB7G,EAAQqJ,WACRpJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQqJ,WAEb,MAApBrJ,EAAQsJ,SACRrJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsJ,SAErC,IAAK,MAAM/I,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,IAAK,MAAMA,KAAKP,EAAQ+M,cACpB9M,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,IAAK,MAAMA,KAAKP,EAAQuN,eACpBtN,EAAOG,OAAO,IAAIC,OAAOE,GAW7B,MATwB,KAApBP,EAAQ2J,SACR1J,EAAOG,OAAO,IAAIC,OAAOL,EAAQ2J,SAEN,KAA3B3J,EAAQsL,gBACRrL,EAAOG,OAAO,KAAKC,OAAOL,EAAQsL,gBAElB,KAAhBtL,EAAQ4J,KACR3J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ4J,KAE/B3J,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlEH,CACHwC,SAAU,GACV8K,cAAe,GACflC,UAAW,GACXhC,aAAc,GACdzC,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACXyG,cAAe,GACfQ,eAAgB,GAChB5D,QAAS,GACT2B,eAAgB,GAChB1B,IAAK,IAqDL,KAAOhJ,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQsN,cAAgB1M,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQoL,UAAYxK,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,KAAK,EACDrF,EAAQqJ,UAAY7D,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,EACDvF,EAAQsJ,QAAU9D,GAAa5E,EAAO2E,UACtC,MACJ,KAAK,EACDvF,EAAQsG,UAAUpF,KAAKN,EAAOP,UAC9B,MACJ,KAAK,GACDL,EAAQ+M,cAAc7L,KAAKN,EAAOP,UAClC,MACJ,KAAK,GACDL,EAAQuN,eAAerM,KAAKN,EAAOP,UACnC,MACJ,KAAK,GACDL,EAAQ2J,QAAU/I,EAAOP,SACzB,MACJ,KAAK,GACDL,EAAQsL,eAAiB1K,EAAOP,SAChC,MACJ,KAAK,GACDL,EAAQ4J,IAAMhJ,EAAOP,SACrB,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D8K,cAAehM,GAAMD,EAAOiM,eAAiB/L,OAAOF,EAAOiM,eAAiB,GAC5ElC,UAAW9J,GAAMD,EAAO+J,WAAa7J,OAAOF,EAAO+J,WAAa,GAChEhC,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzEzC,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,EACpDwC,UAAW/H,GAAMD,EAAOgI,WAAa9H,OAAOF,EAAOgI,WAAa,IAChEC,QAAShI,GAAMD,EAAOiI,SAAW/H,OAAOF,EAAOiI,SAAW,IAC1DhD,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,GACtIoL,cAAevL,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAO0L,eAAiB1L,EAAO0L,cAAcrL,KAAKC,GAAMJ,OAAOI,KAAM,GAClJ4L,eAAgB/L,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOkM,gBAAkBlM,EAAOkM,eAAe7L,KAAKC,GAAMJ,OAAOI,KAAM,GACrJgI,QAASrI,GAAMD,EAAOsI,SAAWpI,OAAOF,EAAOsI,SAAW,GAC1D2B,eAAgBhK,GAAMD,EAAOiK,gBAAkB/J,OAAOF,EAAOiK,gBAAkB,GAC/E1B,IAAKtI,GAAMD,EAAOuI,KAAOrI,OAAOF,EAAOuI,KAAO,KAGtD,MAAAhI,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EA8Bb,YA7BqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eAChC1B,IAA1Bd,EAAQsN,gBAAgCzL,EAAIyL,cAAgBtN,EAAQsN,oBAC9CxM,IAAtBd,EAAQoL,YAA4BvJ,EAAIuJ,UAAYpL,EAAQoL,gBACnCtK,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBACjDtI,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,aACzC/F,IAAtBd,EAAQqJ,YAA4BxH,EAAIwH,UAAYrJ,EAAQqJ,gBACxCvI,IAApBd,EAAQsJ,UAA0BzH,EAAIyH,QAAUtJ,EAAQsJ,SACpDtJ,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,GAEhBtG,EAAQ+M,cACRlL,EAAIkL,cAAgB/M,EAAQ+M,cAAcrL,KAAKC,GAAMA,IAGrDE,EAAIkL,cAAgB,GAEpB/M,EAAQuN,eACR1L,EAAI0L,eAAiBvN,EAAQuN,eAAe7L,KAAKC,GAAMA,IAGvDE,EAAI0L,eAAiB,QAELzM,IAApBd,EAAQ2J,UAA0B9H,EAAI8H,QAAU3J,EAAQ2J,cAC7B7I,IAA3Bd,EAAQsL,iBAAiCzJ,EAAIyJ,eAAiBtL,EAAQsL,qBACtDxK,IAAhBd,EAAQ4J,MAAsB/H,EAAI+H,IAAM5J,EAAQ4J,KACzC/H,CACX,EACA3B,OAAO4B,GACIuL,GAActL,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEhF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACxD,MAAM7E,EA/KH,CACHwC,SAAU,GACV8K,cAAe,GACflC,UAAW,GACXhC,aAAc,GACdzC,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACXyG,cAAe,GACfQ,eAAgB,GAChB5D,QAAS,GACT2B,eAAgB,GAChB1B,IAAK,IAgLL,OAdA5J,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQsN,cAAgD,QAA/BrL,EAAKZ,EAAOiM,qBAAkC,IAAPrL,EAAgBA,EAAK,GACrFjC,EAAQoL,UAAwC,QAA3BlJ,EAAKb,EAAO+J,iBAA8B,IAAPlJ,EAAgBA,EAAK,GAC7ElC,EAAQoJ,aAA8C,QAA9BjF,EAAK9C,EAAO+H,oBAAiC,IAAPjF,EAAgBA,EAAK,GACnFnE,EAAQ2G,KAA8B,QAAtBvC,EAAK/C,EAAOsF,YAAyB,IAAPvC,EAAgBA,EAAK,IACnEpE,EAAQ6G,MAAgC,QAAvBxC,EAAKhD,EAAOwF,aAA0B,IAAPxC,EAAgBA,EAAK,EACrErE,EAAQqJ,UAAwC,QAA3B/E,EAAKjD,EAAOgI,iBAA8B,IAAP/E,EAAgBA,EAAK,IAC7EtE,EAAQsJ,QAAoC,QAAzB/E,EAAKlD,EAAOiI,eAA4B,IAAP/E,EAAgBA,EAAK,IACzEvE,EAAQsG,WAAyC,QAA3B9B,EAAKnD,EAAOiF,iBAA8B,IAAP9B,OAAgB,EAASA,EAAG9C,KAAKC,GAAMA,MAAO,GACvG3B,EAAQ+M,eAAiD,QAA/BtI,EAAKpD,EAAO0L,qBAAkC,IAAPtI,OAAgB,EAASA,EAAG/C,KAAKC,GAAMA,MAAO,GAC/G3B,EAAQuN,gBAAmD,QAAhC7I,EAAKrD,EAAOkM,sBAAmC,IAAP7I,OAAgB,EAASA,EAAGhD,KAAKC,GAAMA,MAAO,GACjH3B,EAAQ2J,QAAoC,QAAzBhF,EAAKtD,EAAOsI,eAA4B,IAAPhF,EAAgBA,EAAK,GACzE3E,EAAQsL,eAAkD,QAAhC1G,EAAKvD,EAAOiK,sBAAmC,IAAP1G,EAAgBA,EAAK,GACvF5E,EAAQ4J,IAA4B,QAArB/E,EAAKxD,EAAOuI,WAAwB,IAAP/E,EAAgBA,EAAK,GAC1D7E,CACX,GAKG,MAAMwN,GAAiB,CAC1B,MAAAzN,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQyN,OACpBC,GAAgB3N,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAKxD,YAHuBzB,IAAnBd,EAAQgH,QACRC,EAAOlH,OAAOC,EAAQgH,OAAQ/G,EAAOG,OAAO,IAAIkC,QAAQC,SAErDtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAEyN,OAAQ,GAAIzG,YAAQlG,GAgBzB,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQyN,OAAOvM,KAAKwM,GAAgBjN,OAAOG,EAAQA,EAAOR,WAC1D,MACJ,KAAK,EACDJ,EAAQgH,OAASC,EAAOxG,OAAOG,EAAQA,EAAOR,UAC9C,MACJ,QACIQ,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHoM,OAAQjM,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOoM,QAAUpM,EAAOoM,OAAO/L,KAAKC,GAAM+L,GAAgBtM,SAASO,KAAM,GAC/IqF,OAAQ1F,GAAMD,EAAO2F,QAAUC,EAAO7F,SAASC,EAAO2F,aAAUlG,IAGxE,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAQb,OAPI7B,EAAQyN,OACR5L,EAAI4L,OAASzN,EAAQyN,OAAO/L,KAAKC,GAAMA,EAAI+L,GAAgB9L,OAAOD,QAAKb,IAGvEe,EAAI4L,OAAS,QAEE3M,IAAnBd,EAAQgH,SAAyBnF,EAAImF,OAAShH,EAAQgH,OAASC,EAAOrF,OAAO5B,EAAQgH,aAAUlG,GACxFe,CACX,EACA3B,OAAO4B,GACI0L,GAAezL,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEjF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAtDH,CAAEyN,OAAQ,GAAIzG,YAAQlG,GA2DzB,OAJAd,EAAQyN,QAAmC,QAAxBzL,EAAKX,EAAOoM,cAA2B,IAAPzL,OAAgB,EAASA,EAAGN,KAAKC,GAAM+L,GAAgB3L,YAAYJ,OAAQ,GAC9H3B,EAAQgH,YAA4BlG,IAAlBO,EAAO2F,QAA0C,OAAlB3F,EAAO2F,OAClDC,EAAOlF,YAAYV,EAAO2F,aAC1BlG,EACCd,CACX,GAmBG,MAAM0N,GAAkB,CAC3B3N,OAAM,CAACC,EAASC,EAAS,SAAWC,YACN,KAAtBF,EAAQgK,WACR/J,EAAOG,OAAO,IAAIC,OAAOL,EAAQgK,WAER,KAAzBhK,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEZ,KAArBpJ,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEF,KAA/BxC,EAAQ2N,oBACR1N,EAAOG,OAAO,IAAIC,OAAOL,EAAQ2N,qBAEP,IAA1B3N,EAAQ4N,eACR3N,EAAOG,OAAO,IAAIkD,KAAKtD,EAAQ4N,oBAEL9M,IAA1Bd,EAAQ6N,eACRC,GAAc/N,OAAOC,EAAQ6N,cAAe5N,EAAOG,OAAO,IAAIkC,QAAQC,SAEnD,KAAnBvC,EAAQ+N,QACR9N,EAAOG,OAAO,IAAIC,OAAOL,EAAQ+N,QAEjB,KAAhB/N,EAAQgO,KACR/N,EAAOG,OAAO,IAAIC,OAAOL,EAAQgO,KAEV,MAAvBhO,EAAQiO,YACRhO,EAAOG,OAAO,IAAImF,OAAOvF,EAAQiO,YAER,KAAzBjO,EAAQqK,cACRpK,EAAOG,OAAO,IAAIC,OAAOL,EAAQqK,cAEb,KAApBrK,EAAQ2J,SACR1J,EAAOG,OAAO,IAAIC,OAAOL,EAAQ2J,SAEP,KAA1B3J,EAAQsN,eACRrN,EAAOG,OAAO,IAAIC,OAAOL,EAAQsN,eAEjB,KAAhBtN,EAAQ4J,KACR3J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ4J,KAE/B3J,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EA9DH,CACHgK,UAAW,GACXZ,aAAc,GACd5G,SAAU,GACVmL,mBAAoB,GACpBC,eAAe,EACfC,mBAAe/M,EACfiN,OAAQ,GACRC,IAAK,GACLC,WAAY,IACZ5D,aAAc,GACdV,QAAS,GACT2D,cAAe,GACf1D,IAAK,IAkDL,KAAOhJ,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQgK,UAAYpJ,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ2N,mBAAqB/M,EAAOP,SACpC,MACJ,KAAK,EACDL,EAAQ4N,cAAgBhN,EAAO0C,OAC/B,MACJ,KAAK,EACDtD,EAAQ6N,cAAgBC,GAAcrN,OAAOG,EAAQA,EAAOR,UAC5D,MACJ,KAAK,EACDJ,EAAQ+N,OAASnN,EAAOP,SACxB,MACJ,KAAK,EACDL,EAAQgO,IAAMpN,EAAOP,SACrB,MACJ,KAAK,EACDL,EAAQiO,WAAazI,GAAa5E,EAAO2E,UACzC,MACJ,KAAK,GACDvF,EAAQqK,aAAezJ,EAAOP,SAC9B,MACJ,KAAK,GACDL,EAAQ2J,QAAU/I,EAAOP,SACzB,MACJ,KAAK,GACDL,EAAQsN,cAAgB1M,EAAOP,SAC/B,MACJ,KAAK,GACDL,EAAQ4J,IAAMhJ,EAAOP,SACrB,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH2I,UAAW1I,GAAMD,EAAO2I,WAAazI,OAAOF,EAAO2I,WAAa,GAChEZ,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzE5G,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DmL,mBAAoBrM,GAAMD,EAAOsM,oBAAsBpM,OAAOF,EAAOsM,oBAAsB,GAC3FC,gBAAetM,GAAMD,EAAOuM,gBAAiB5J,QAAQ3C,EAAOuM,eAC5DC,cAAevM,GAAMD,EAAOwM,eAAiBC,GAAc1M,SAASC,EAAOwM,oBAAiB/M,EAC5FiN,OAAQzM,GAAMD,EAAO0M,QAAUxM,OAAOF,EAAO0M,QAAU,GACvDC,IAAK1M,GAAMD,EAAO2M,KAAOzM,OAAOF,EAAO2M,KAAO,GAC9CC,WAAY3M,GAAMD,EAAO4M,YAAc1M,OAAOF,EAAO4M,YAAc,IACnE5D,aAAc/I,GAAMD,EAAOgJ,cAAgB9I,OAAOF,EAAOgJ,cAAgB,GACzEV,QAASrI,GAAMD,EAAOsI,SAAWpI,OAAOF,EAAOsI,SAAW,GAC1D2D,cAAehM,GAAMD,EAAOiM,eAAiB/L,OAAOF,EAAOiM,eAAiB,GAC5E1D,IAAKtI,GAAMD,EAAOuI,KAAOrI,OAAOF,EAAOuI,KAAO,KAGtD,MAAAhI,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAeb,YAdsBf,IAAtBd,EAAQgK,YAA4BnI,EAAImI,UAAYhK,EAAQgK,gBACnClJ,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBAC7CtI,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eAC3B1B,IAA/Bd,EAAQ2N,qBAAqC9L,EAAI8L,mBAAqB3N,EAAQ2N,yBACpD7M,IAA1Bd,EAAQ4N,gBAAgC/L,EAAI+L,cAAgB5N,EAAQ4N,oBAC1C9M,IAA1Bd,EAAQ6N,gBACHhM,EAAIgM,cAAgB7N,EAAQ6N,cAAgBC,GAAclM,OAAO5B,EAAQ6N,oBAAiB/M,QAC5EA,IAAnBd,EAAQ+N,SAAyBlM,EAAIkM,OAAS/N,EAAQ+N,aACtCjN,IAAhBd,EAAQgO,MAAsBnM,EAAImM,IAAMhO,EAAQgO,UACzBlN,IAAvBd,EAAQiO,aAA6BpM,EAAIoM,WAAajO,EAAQiO,iBACrCnN,IAAzBd,EAAQqK,eAA+BxI,EAAIwI,aAAerK,EAAQqK,mBAC9CvJ,IAApBd,EAAQ2J,UAA0B9H,EAAI8H,QAAU3J,EAAQ2J,cAC9B7I,IAA1Bd,EAAQsN,gBAAgCzL,EAAIyL,cAAgBtN,EAAQsN,oBACpDxM,IAAhBd,EAAQ4J,MAAsB/H,EAAI+H,IAAM5J,EAAQ4J,KACzC/H,CACX,EACA3B,OAAO4B,GACI4L,GAAgB3L,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAElF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAChD,MAAM3E,EAxJH,CACHgK,UAAW,GACXZ,aAAc,GACd5G,SAAU,GACVmL,mBAAoB,GACpBC,eAAe,EACfC,mBAAe/M,EACfiN,OAAQ,GACRC,IAAK,GACLC,WAAY,IACZ5D,aAAc,GACdV,QAAS,GACT2D,cAAe,GACf1D,IAAK,IA2JL,OAfA5J,EAAQgK,UAAwC,QAA3BhI,EAAKX,EAAO2I,iBAA8B,IAAPhI,EAAgBA,EAAK,GAC7EhC,EAAQoJ,aAA8C,QAA9BnH,EAAKZ,EAAO+H,oBAAiC,IAAPnH,EAAgBA,EAAK,GACnFjC,EAAQwC,SAAsC,QAA1BN,EAAKb,EAAOmB,gBAA6B,IAAPN,EAAgBA,EAAK,GAC3ElC,EAAQ2N,mBAA0D,QAApCxJ,EAAK9C,EAAOsM,0BAAuC,IAAPxJ,EAAgBA,EAAK,GAC/FnE,EAAQ4N,cAAgD,QAA/BxJ,EAAK/C,EAAOuM,qBAAkC,IAAPxJ,GAAgBA,EAChFpE,EAAQ6N,mBAA0C/M,IAAzBO,EAAOwM,eAAwD,OAAzBxM,EAAOwM,cAChEC,GAAc/L,YAAYV,EAAOwM,oBACjC/M,EACNd,EAAQ+N,OAAkC,QAAxB1J,EAAKhD,EAAO0M,cAA2B,IAAP1J,EAAgBA,EAAK,GACvErE,EAAQgO,IAA4B,QAArB1J,EAAKjD,EAAO2M,WAAwB,IAAP1J,EAAgBA,EAAK,GACjEtE,EAAQiO,WAA0C,QAA5B1J,EAAKlD,EAAO4M,kBAA+B,IAAP1J,EAAgBA,EAAK,IAC/EvE,EAAQqK,aAA8C,QAA9B7F,EAAKnD,EAAOgJ,oBAAiC,IAAP7F,EAAgBA,EAAK,GACnFxE,EAAQ2J,QAAoC,QAAzBlF,EAAKpD,EAAOsI,eAA4B,IAAPlF,EAAgBA,EAAK,GACzEzE,EAAQsN,cAAgD,QAA/B5I,EAAKrD,EAAOiM,qBAAkC,IAAP5I,EAAgBA,EAAK,GACrF1E,EAAQ4J,IAA4B,QAArBjF,EAAKtD,EAAOuI,WAAwB,IAAPjF,EAAgBA,EAAK,GAC1D3E,CACX,GAKG,MAAM8N,GAAgB,CACzB/N,OAAM,CAACC,EAASC,EAAS,SAAWC,YACD,KAA3BF,EAAQkO,gBACRjO,EAAOG,OAAO,IAAIC,OAAOL,EAAQkO,gBAEN,KAA3BlO,EAAQmO,gBACRlO,EAAOG,OAAO,IAAIC,OAAOL,EAAQmO,gBAEH,KAA9BnO,EAAQoO,mBACRnO,EAAOG,OAAO,IAAIC,OAAOL,EAAQoO,mBAEL,KAA5BpO,EAAQqO,iBACRpO,EAAOG,OAAO,IAAIC,OAAOL,EAAQqO,iBAE9BpO,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EArBH,CAAEkO,eAAgB,GAAIC,eAAgB,GAAIC,kBAAmB,GAAIC,gBAAiB,IAsBrF,KAAOzN,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQkO,eAAiBtN,EAAOP,SAChC,MACJ,KAAK,EACDL,EAAQmO,eAAiBvN,EAAOP,SAChC,MACJ,KAAK,EACDL,EAAQoO,kBAAoBxN,EAAOP,SACnC,MACJ,KAAK,EACDL,EAAQqO,gBAAkBzN,EAAOP,SACjC,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH6M,eAAgB5M,GAAMD,EAAO6M,gBAAkB3M,OAAOF,EAAO6M,gBAAkB,GAC/EC,eAAgB7M,GAAMD,EAAO8M,gBAAkB5M,OAAOF,EAAO8M,gBAAkB,GAC/EC,kBAAmB9M,GAAMD,EAAO+M,mBAAqB7M,OAAOF,EAAO+M,mBAAqB,GACxFC,gBAAiB/M,GAAMD,EAAOgN,iBAAmB9M,OAAOF,EAAOgN,iBAAmB,KAG1F,MAAAzM,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAKb,YAJ2Bf,IAA3Bd,EAAQkO,iBAAiCrM,EAAIqM,eAAiBlO,EAAQkO,qBAC3CpN,IAA3Bd,EAAQmO,iBAAiCtM,EAAIsM,eAAiBnO,EAAQmO,qBACxCrN,IAA9Bd,EAAQoO,oBAAoCvM,EAAIuM,kBAAoBpO,EAAQoO,wBAChDtN,IAA5Bd,EAAQqO,kBAAkCxM,EAAIwM,gBAAkBrO,EAAQqO,iBACjExM,CACX,EACA3B,OAAO4B,GACIgM,GAAc/L,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEhF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAChB,MAAMnE,EAjEH,CAAEkO,eAAgB,GAAIC,eAAgB,GAAIC,kBAAmB,GAAIC,gBAAiB,IAsErF,OAJArO,EAAQkO,eAAkD,QAAhClM,EAAKX,EAAO6M,sBAAmC,IAAPlM,EAAgBA,EAAK,GACvFhC,EAAQmO,eAAkD,QAAhClM,EAAKZ,EAAO8M,sBAAmC,IAAPlM,EAAgBA,EAAK,GACvFjC,EAAQoO,kBAAwD,QAAnClM,EAAKb,EAAO+M,yBAAsC,IAAPlM,EAAgBA,EAAK,GAC7FlC,EAAQqO,gBAAoD,QAAjClK,EAAK9C,EAAOgN,uBAAoC,IAAPlK,EAAgBA,EAAK,GAClFnE,CACX,GAoBG,MAAMsO,GAAkB,CAC3B,MAAAvO,CAAOC,EAASC,EAAS,SAAWC,UACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEP,KAA1BxC,EAAQsN,eACRrN,EAAOG,OAAO,IAAIC,OAAOL,EAAQsN,eAEX,KAAtBtN,EAAQoL,WACRnL,EAAOG,OAAO,IAAIC,OAAOL,EAAQoL,WAER,KAAzBpL,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEhB,MAAjBpJ,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAEX,MAAtB7G,EAAQqJ,WACRpJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQqJ,WAEb,MAApBrJ,EAAQsJ,SACRrJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsJ,SAErC,IAAK,MAAM/I,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,IAAK,MAAMA,KAAKP,EAAQ+M,cACpB9M,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,IAAK,MAAMA,KAAKP,EAAQuN,eACpBtN,EAAOG,OAAO,IAAIC,OAAOE,GAW7B,MATwB,KAApBP,EAAQ2J,SACR1J,EAAOG,OAAO,IAAIC,OAAOL,EAAQ2J,SAEN,KAA3B3J,EAAQsL,gBACRrL,EAAOG,OAAO,KAAKC,OAAOL,EAAQsL,gBAElB,KAAhBtL,EAAQ4J,KACR3J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ4J,KAE/B3J,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlEH,CACHwC,SAAU,GACV8K,cAAe,GACflC,UAAW,GACXhC,aAAc,GACdzC,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACXyG,cAAe,GACfQ,eAAgB,GAChB5D,QAAS,GACT2B,eAAgB,GAChB1B,IAAK,IAqDL,KAAOhJ,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQsN,cAAgB1M,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQoL,UAAYxK,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,KAAK,EACDrF,EAAQqJ,UAAY7D,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,EACDvF,EAAQsJ,QAAU9D,GAAa5E,EAAO2E,UACtC,MACJ,KAAK,EACDvF,EAAQsG,UAAUpF,KAAKN,EAAOP,UAC9B,MACJ,KAAK,GACDL,EAAQ+M,cAAc7L,KAAKN,EAAOP,UAClC,MACJ,KAAK,GACDL,EAAQuN,eAAerM,KAAKN,EAAOP,UACnC,MACJ,KAAK,GACDL,EAAQ2J,QAAU/I,EAAOP,SACzB,MACJ,KAAK,GACDL,EAAQsL,eAAiB1K,EAAOP,SAChC,MACJ,KAAK,GACDL,EAAQ4J,IAAMhJ,EAAOP,SACrB,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D8K,cAAehM,GAAMD,EAAOiM,eAAiB/L,OAAOF,EAAOiM,eAAiB,GAC5ElC,UAAW9J,GAAMD,EAAO+J,WAAa7J,OAAOF,EAAO+J,WAAa,GAChEhC,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzEzC,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,EACpDwC,UAAW/H,GAAMD,EAAOgI,WAAa9H,OAAOF,EAAOgI,WAAa,IAChEC,QAAShI,GAAMD,EAAOiI,SAAW/H,OAAOF,EAAOiI,SAAW,IAC1DhD,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,GACtIoL,cAAevL,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAO0L,eAAiB1L,EAAO0L,cAAcrL,KAAKC,GAAMJ,OAAOI,KAAM,GAClJ4L,eAAgB/L,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOkM,gBAAkBlM,EAAOkM,eAAe7L,KAAKC,GAAMJ,OAAOI,KAAM,GACrJgI,QAASrI,GAAMD,EAAOsI,SAAWpI,OAAOF,EAAOsI,SAAW,GAC1D2B,eAAgBhK,GAAMD,EAAOiK,gBAAkB/J,OAAOF,EAAOiK,gBAAkB,GAC/E1B,IAAKtI,GAAMD,EAAOuI,KAAOrI,OAAOF,EAAOuI,KAAO,KAGtD,MAAAhI,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EA8Bb,YA7BqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eAChC1B,IAA1Bd,EAAQsN,gBAAgCzL,EAAIyL,cAAgBtN,EAAQsN,oBAC9CxM,IAAtBd,EAAQoL,YAA4BvJ,EAAIuJ,UAAYpL,EAAQoL,gBACnCtK,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBACjDtI,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,aACzC/F,IAAtBd,EAAQqJ,YAA4BxH,EAAIwH,UAAYrJ,EAAQqJ,gBACxCvI,IAApBd,EAAQsJ,UAA0BzH,EAAIyH,QAAUtJ,EAAQsJ,SACpDtJ,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,GAEhBtG,EAAQ+M,cACRlL,EAAIkL,cAAgB/M,EAAQ+M,cAAcrL,KAAKC,GAAMA,IAGrDE,EAAIkL,cAAgB,GAEpB/M,EAAQuN,eACR1L,EAAI0L,eAAiBvN,EAAQuN,eAAe7L,KAAKC,GAAMA,IAGvDE,EAAI0L,eAAiB,QAELzM,IAApBd,EAAQ2J,UAA0B9H,EAAI8H,QAAU3J,EAAQ2J,cAC7B7I,IAA3Bd,EAAQsL,iBAAiCzJ,EAAIyJ,eAAiBtL,EAAQsL,qBACtDxK,IAAhBd,EAAQ4J,MAAsB/H,EAAI+H,IAAM5J,EAAQ4J,KACzC/H,CACX,EACA3B,OAAO4B,GACIwM,GAAgBvM,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAElF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACxD,MAAM7E,EA/KH,CACHwC,SAAU,GACV8K,cAAe,GACflC,UAAW,GACXhC,aAAc,GACdzC,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACXyG,cAAe,GACfQ,eAAgB,GAChB5D,QAAS,GACT2B,eAAgB,GAChB1B,IAAK,IAgLL,OAdA5J,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQsN,cAAgD,QAA/BrL,EAAKZ,EAAOiM,qBAAkC,IAAPrL,EAAgBA,EAAK,GACrFjC,EAAQoL,UAAwC,QAA3BlJ,EAAKb,EAAO+J,iBAA8B,IAAPlJ,EAAgBA,EAAK,GAC7ElC,EAAQoJ,aAA8C,QAA9BjF,EAAK9C,EAAO+H,oBAAiC,IAAPjF,EAAgBA,EAAK,GACnFnE,EAAQ2G,KAA8B,QAAtBvC,EAAK/C,EAAOsF,YAAyB,IAAPvC,EAAgBA,EAAK,IACnEpE,EAAQ6G,MAAgC,QAAvBxC,EAAKhD,EAAOwF,aAA0B,IAAPxC,EAAgBA,EAAK,EACrErE,EAAQqJ,UAAwC,QAA3B/E,EAAKjD,EAAOgI,iBAA8B,IAAP/E,EAAgBA,EAAK,IAC7EtE,EAAQsJ,QAAoC,QAAzB/E,EAAKlD,EAAOiI,eAA4B,IAAP/E,EAAgBA,EAAK,IACzEvE,EAAQsG,WAAyC,QAA3B9B,EAAKnD,EAAOiF,iBAA8B,IAAP9B,OAAgB,EAASA,EAAG9C,KAAKC,GAAMA,MAAO,GACvG3B,EAAQ+M,eAAiD,QAA/BtI,EAAKpD,EAAO0L,qBAAkC,IAAPtI,OAAgB,EAASA,EAAG/C,KAAKC,GAAMA,MAAO,GAC/G3B,EAAQuN,gBAAmD,QAAhC7I,EAAKrD,EAAOkM,sBAAmC,IAAP7I,OAAgB,EAASA,EAAGhD,KAAKC,GAAMA,MAAO,GACjH3B,EAAQ2J,QAAoC,QAAzBhF,EAAKtD,EAAOsI,eAA4B,IAAPhF,EAAgBA,EAAK,GACzE3E,EAAQsL,eAAkD,QAAhC1G,EAAKvD,EAAOiK,sBAAmC,IAAP1G,EAAgBA,EAAK,GACvF5E,EAAQ4J,IAA4B,QAArB/E,EAAKxD,EAAOuI,WAAwB,IAAP/E,EAAgBA,EAAK,GAC1D7E,CACX,GAKG,MAAMuO,GAAmB,CAC5B,MAAAxO,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQyN,OACpBC,GAAgB3N,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAKxD,YAHuBzB,IAAnBd,EAAQgH,QACRC,EAAOlH,OAAOC,EAAQgH,OAAQ/G,EAAOG,OAAO,IAAIkC,QAAQC,SAErDtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAEyN,OAAQ,GAAIzG,YAAQlG,GAgBzB,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQyN,OAAOvM,KAAKwM,GAAgBjN,OAAOG,EAAQA,EAAOR,WAC1D,MACJ,KAAK,EACDJ,EAAQgH,OAASC,EAAOxG,OAAOG,EAAQA,EAAOR,UAC9C,MACJ,QACIQ,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHoM,OAAQjM,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOoM,QAAUpM,EAAOoM,OAAO/L,KAAKC,GAAM+L,GAAgBtM,SAASO,KAAM,GAC/IqF,OAAQ1F,GAAMD,EAAO2F,QAAUC,EAAO7F,SAASC,EAAO2F,aAAUlG,IAGxE,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAQb,OAPI7B,EAAQyN,OACR5L,EAAI4L,OAASzN,EAAQyN,OAAO/L,KAAKC,GAAMA,EAAI+L,GAAgB9L,OAAOD,QAAKb,IAGvEe,EAAI4L,OAAS,QAEE3M,IAAnBd,EAAQgH,SAAyBnF,EAAImF,OAAShH,EAAQgH,OAASC,EAAOrF,OAAO5B,EAAQgH,aAAUlG,GACxFe,CACX,EACA3B,OAAO4B,GACIyM,GAAiBxM,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEnF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAtDH,CAAEyN,OAAQ,GAAIzG,YAAQlG,GA2DzB,OAJAd,EAAQyN,QAAmC,QAAxBzL,EAAKX,EAAOoM,cAA2B,IAAPzL,OAAgB,EAASA,EAAGN,KAAKC,GAAM+L,GAAgB3L,YAAYJ,OAAQ,GAC9H3B,EAAQgH,YAA4BlG,IAAlBO,EAAO2F,QAA0C,OAAlB3F,EAAO2F,OAClDC,EAAOlF,YAAYV,EAAO2F,aAC1BlG,EACCd,CACX,GAoBG,MAAMwO,GAAsB,CAC/B,MAAAzO,CAAOC,EAASC,EAAS,SAAWC,UACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEP,KAA1BxC,EAAQsN,eACRrN,EAAOG,OAAO,IAAIC,OAAOL,EAAQsN,eAEX,KAAtBtN,EAAQoL,WACRnL,EAAOG,OAAO,IAAIC,OAAOL,EAAQoL,WAER,KAAzBpL,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEhB,MAAjBpJ,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAEX,MAAtB7G,EAAQqJ,WACRpJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQqJ,WAEb,MAApBrJ,EAAQsJ,SACRrJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsJ,SAErC,IAAK,MAAM/I,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,IAAK,MAAMA,KAAKP,EAAQ+M,cACpB9M,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,IAAK,MAAMA,KAAKP,EAAQuN,eACpBtN,EAAOG,OAAO,IAAIC,OAAOE,GAW7B,MATwB,KAApBP,EAAQ2J,SACR1J,EAAOG,OAAO,IAAIC,OAAOL,EAAQ2J,SAEN,KAA3B3J,EAAQsL,gBACRrL,EAAOG,OAAO,KAAKC,OAAOL,EAAQsL,gBAElB,KAAhBtL,EAAQ4J,KACR3J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ4J,KAE/B3J,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlEH,CACHwC,SAAU,GACV8K,cAAe,GACflC,UAAW,GACXhC,aAAc,GACdzC,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACXyG,cAAe,GACfQ,eAAgB,GAChB5D,QAAS,GACT2B,eAAgB,GAChB1B,IAAK,IAqDL,KAAOhJ,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQsN,cAAgB1M,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQoL,UAAYxK,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,KAAK,EACDrF,EAAQqJ,UAAY7D,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,EACDvF,EAAQsJ,QAAU9D,GAAa5E,EAAO2E,UACtC,MACJ,KAAK,EACDvF,EAAQsG,UAAUpF,KAAKN,EAAOP,UAC9B,MACJ,KAAK,GACDL,EAAQ+M,cAAc7L,KAAKN,EAAOP,UAClC,MACJ,KAAK,GACDL,EAAQuN,eAAerM,KAAKN,EAAOP,UACnC,MACJ,KAAK,GACDL,EAAQ2J,QAAU/I,EAAOP,SACzB,MACJ,KAAK,GACDL,EAAQsL,eAAiB1K,EAAOP,SAChC,MACJ,KAAK,GACDL,EAAQ4J,IAAMhJ,EAAOP,SACrB,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D8K,cAAehM,GAAMD,EAAOiM,eAAiB/L,OAAOF,EAAOiM,eAAiB,GAC5ElC,UAAW9J,GAAMD,EAAO+J,WAAa7J,OAAOF,EAAO+J,WAAa,GAChEhC,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzEzC,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,EACpDwC,UAAW/H,GAAMD,EAAOgI,WAAa9H,OAAOF,EAAOgI,WAAa,IAChEC,QAAShI,GAAMD,EAAOiI,SAAW/H,OAAOF,EAAOiI,SAAW,IAC1DhD,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,GACtIoL,cAAevL,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAO0L,eAAiB1L,EAAO0L,cAAcrL,KAAKC,GAAMJ,OAAOI,KAAM,GAClJ4L,eAAgB/L,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOkM,gBAAkBlM,EAAOkM,eAAe7L,KAAKC,GAAMJ,OAAOI,KAAM,GACrJgI,QAASrI,GAAMD,EAAOsI,SAAWpI,OAAOF,EAAOsI,SAAW,GAC1D2B,eAAgBhK,GAAMD,EAAOiK,gBAAkB/J,OAAOF,EAAOiK,gBAAkB,GAC/E1B,IAAKtI,GAAMD,EAAOuI,KAAOrI,OAAOF,EAAOuI,KAAO,KAGtD,MAAAhI,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EA8Bb,YA7BqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eAChC1B,IAA1Bd,EAAQsN,gBAAgCzL,EAAIyL,cAAgBtN,EAAQsN,oBAC9CxM,IAAtBd,EAAQoL,YAA4BvJ,EAAIuJ,UAAYpL,EAAQoL,gBACnCtK,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBACjDtI,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,aACzC/F,IAAtBd,EAAQqJ,YAA4BxH,EAAIwH,UAAYrJ,EAAQqJ,gBACxCvI,IAApBd,EAAQsJ,UAA0BzH,EAAIyH,QAAUtJ,EAAQsJ,SACpDtJ,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,GAEhBtG,EAAQ+M,cACRlL,EAAIkL,cAAgB/M,EAAQ+M,cAAcrL,KAAKC,GAAMA,IAGrDE,EAAIkL,cAAgB,GAEpB/M,EAAQuN,eACR1L,EAAI0L,eAAiBvN,EAAQuN,eAAe7L,KAAKC,GAAMA,IAGvDE,EAAI0L,eAAiB,QAELzM,IAApBd,EAAQ2J,UAA0B9H,EAAI8H,QAAU3J,EAAQ2J,cAC7B7I,IAA3Bd,EAAQsL,iBAAiCzJ,EAAIyJ,eAAiBtL,EAAQsL,qBACtDxK,IAAhBd,EAAQ4J,MAAsB/H,EAAI+H,IAAM5J,EAAQ4J,KACzC/H,CACX,EACA3B,OAAO4B,GACI0M,GAAoBzM,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEtF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACxD,MAAM7E,EA/KH,CACHwC,SAAU,GACV8K,cAAe,GACflC,UAAW,GACXhC,aAAc,GACdzC,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACXyG,cAAe,GACfQ,eAAgB,GAChB5D,QAAS,GACT2B,eAAgB,GAChB1B,IAAK,IAgLL,OAdA5J,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQsN,cAAgD,QAA/BrL,EAAKZ,EAAOiM,qBAAkC,IAAPrL,EAAgBA,EAAK,GACrFjC,EAAQoL,UAAwC,QAA3BlJ,EAAKb,EAAO+J,iBAA8B,IAAPlJ,EAAgBA,EAAK,GAC7ElC,EAAQoJ,aAA8C,QAA9BjF,EAAK9C,EAAO+H,oBAAiC,IAAPjF,EAAgBA,EAAK,GACnFnE,EAAQ2G,KAA8B,QAAtBvC,EAAK/C,EAAOsF,YAAyB,IAAPvC,EAAgBA,EAAK,IACnEpE,EAAQ6G,MAAgC,QAAvBxC,EAAKhD,EAAOwF,aAA0B,IAAPxC,EAAgBA,EAAK,EACrErE,EAAQqJ,UAAwC,QAA3B/E,EAAKjD,EAAOgI,iBAA8B,IAAP/E,EAAgBA,EAAK,IAC7EtE,EAAQsJ,QAAoC,QAAzB/E,EAAKlD,EAAOiI,eAA4B,IAAP/E,EAAgBA,EAAK,IACzEvE,EAAQsG,WAAyC,QAA3B9B,EAAKnD,EAAOiF,iBAA8B,IAAP9B,OAAgB,EAASA,EAAG9C,KAAKC,GAAMA,MAAO,GACvG3B,EAAQ+M,eAAiD,QAA/BtI,EAAKpD,EAAO0L,qBAAkC,IAAPtI,OAAgB,EAASA,EAAG/C,KAAKC,GAAMA,MAAO,GAC/G3B,EAAQuN,gBAAmD,QAAhC7I,EAAKrD,EAAOkM,sBAAmC,IAAP7I,OAAgB,EAASA,EAAGhD,KAAKC,GAAMA,MAAO,GACjH3B,EAAQ2J,QAAoC,QAAzBhF,EAAKtD,EAAOsI,eAA4B,IAAPhF,EAAgBA,EAAK,GACzE3E,EAAQsL,eAAkD,QAAhC1G,EAAKvD,EAAOiK,sBAAmC,IAAP1G,EAAgBA,EAAK,GACvF5E,EAAQ4J,IAA4B,QAArB/E,EAAKxD,EAAOuI,WAAwB,IAAP/E,EAAgBA,EAAK,GAC1D7E,CACX,GAKG,MAAMyO,GAAuB,CAChC1O,OAAM,CAACC,EAASC,EAAS,SAAWC,iBACVY,IAAlBd,EAAQ0O,OACRhB,GAAgB3N,OAAOC,EAAQ0O,MAAOzO,EAAOG,OAAO,IAAIkC,QAAQC,SAEtC,KAA1BvC,EAAQwG,eACRvG,EAAOG,OAAO,IAAIC,OAAOL,EAAQwG,eAEX,MAAtBxG,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAE9BxG,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlBH,CAAE0O,WAAO5N,EAAW0F,cAAe,GAAIC,UAAW,KAmBrD,KAAO7F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQ0O,MAAQhB,GAAgBjN,OAAOG,EAAQA,EAAOR,UACtD,MACJ,KAAK,EACDJ,EAAQwG,cAAgB5F,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHqN,MAAOpN,GAAMD,EAAOqN,OAAShB,GAAgBtM,SAASC,EAAOqN,YAAS5N,EACtE0F,cAAelF,GAAMD,EAAOmF,eAAiBjF,OAAOF,EAAOmF,eAAiB,GAC5EC,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,MAGxE,MAAA7E,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAIb,YAHkBf,IAAlBd,EAAQ0O,QAAwB7M,EAAI6M,MAAQ1O,EAAQ0O,MAAQhB,GAAgB9L,OAAO5B,EAAQ0O,YAAS5N,QAC1EA,IAA1Bd,EAAQwG,gBAAgC3E,EAAI2E,cAAgBxG,EAAQwG,oBAC9C1F,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,WACrD5E,CACX,EACA3B,OAAO4B,GACI2M,GAAqB1M,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEvF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EACR,MAAMjC,EAzDH,CAAE0O,WAAO5N,EAAW0F,cAAe,GAAIC,UAAW,KA+DrD,OALAzG,EAAQ0O,WAA0B5N,IAAjBO,EAAOqN,OAAwC,OAAjBrN,EAAOqN,MAChDhB,GAAgB3L,YAAYV,EAAOqN,YACnC5N,EACNd,EAAQwG,cAAgD,QAA/BxE,EAAKX,EAAOmF,qBAAkC,IAAPxE,EAAgBA,EAAK,GACrFhC,EAAQyG,UAAwC,QAA3BxE,EAAKZ,EAAOoF,iBAA8B,IAAPxE,EAAgBA,EAAK,IACtEjC,CACX,GAoBG,MAAM2O,GAAwB,CACjC,MAAA5O,CAAOC,EAASC,EAAS,SAAWC,UACP,KAArBF,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEP,KAA1BxC,EAAQsN,eACRrN,EAAOG,OAAO,IAAIC,OAAOL,EAAQsN,eAEX,KAAtBtN,EAAQoL,WACRnL,EAAOG,OAAO,IAAIC,OAAOL,EAAQoL,WAER,KAAzBpL,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEhB,MAAjBpJ,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAEX,MAAtB7G,EAAQqJ,WACRpJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQqJ,WAEb,MAApBrJ,EAAQsJ,SACRrJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsJ,SAErC,IAAK,MAAM/I,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,IAAK,MAAMA,KAAKP,EAAQ+M,cACpB9M,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,IAAK,MAAMA,KAAKP,EAAQuN,eACpBtN,EAAOG,OAAO,IAAIC,OAAOE,GAW7B,MATwB,KAApBP,EAAQ2J,SACR1J,EAAOG,OAAO,IAAIC,OAAOL,EAAQ2J,SAEN,KAA3B3J,EAAQsL,gBACRrL,EAAOG,OAAO,KAAKC,OAAOL,EAAQsL,gBAElB,KAAhBtL,EAAQ4J,KACR3J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ4J,KAE/B3J,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlEH,CACHwC,SAAU,GACV8K,cAAe,GACflC,UAAW,GACXhC,aAAc,GACdzC,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACXyG,cAAe,GACfQ,eAAgB,GAChB5D,QAAS,GACT2B,eAAgB,GAChB1B,IAAK,IAqDL,KAAOhJ,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQsN,cAAgB1M,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQoL,UAAYxK,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,KAAK,EACDrF,EAAQqJ,UAAY7D,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,EACDvF,EAAQsJ,QAAU9D,GAAa5E,EAAO2E,UACtC,MACJ,KAAK,EACDvF,EAAQsG,UAAUpF,KAAKN,EAAOP,UAC9B,MACJ,KAAK,GACDL,EAAQ+M,cAAc7L,KAAKN,EAAOP,UAClC,MACJ,KAAK,GACDL,EAAQuN,eAAerM,KAAKN,EAAOP,UACnC,MACJ,KAAK,GACDL,EAAQ2J,QAAU/I,EAAOP,SACzB,MACJ,KAAK,GACDL,EAAQsL,eAAiB1K,EAAOP,SAChC,MACJ,KAAK,GACDL,EAAQ4J,IAAMhJ,EAAOP,SACrB,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHmB,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D8K,cAAehM,GAAMD,EAAOiM,eAAiB/L,OAAOF,EAAOiM,eAAiB,GAC5ElC,UAAW9J,GAAMD,EAAO+J,WAAa7J,OAAOF,EAAO+J,WAAa,GAChEhC,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzEzC,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,EACpDwC,UAAW/H,GAAMD,EAAOgI,WAAa9H,OAAOF,EAAOgI,WAAa,IAChEC,QAAShI,GAAMD,EAAOiI,SAAW/H,OAAOF,EAAOiI,SAAW,IAC1DhD,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,GACtIoL,cAAevL,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAO0L,eAAiB1L,EAAO0L,cAAcrL,KAAKC,GAAMJ,OAAOI,KAAM,GAClJ4L,eAAgB/L,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOkM,gBAAkBlM,EAAOkM,eAAe7L,KAAKC,GAAMJ,OAAOI,KAAM,GACrJgI,QAASrI,GAAMD,EAAOsI,SAAWpI,OAAOF,EAAOsI,SAAW,GAC1D2B,eAAgBhK,GAAMD,EAAOiK,gBAAkB/J,OAAOF,EAAOiK,gBAAkB,GAC/E1B,IAAKtI,GAAMD,EAAOuI,KAAOrI,OAAOF,EAAOuI,KAAO,KAGtD,MAAAhI,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EA8Bb,YA7BqBf,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eAChC1B,IAA1Bd,EAAQsN,gBAAgCzL,EAAIyL,cAAgBtN,EAAQsN,oBAC9CxM,IAAtBd,EAAQoL,YAA4BvJ,EAAIuJ,UAAYpL,EAAQoL,gBACnCtK,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBACjDtI,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,aACzC/F,IAAtBd,EAAQqJ,YAA4BxH,EAAIwH,UAAYrJ,EAAQqJ,gBACxCvI,IAApBd,EAAQsJ,UAA0BzH,EAAIyH,QAAUtJ,EAAQsJ,SACpDtJ,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,GAEhBtG,EAAQ+M,cACRlL,EAAIkL,cAAgB/M,EAAQ+M,cAAcrL,KAAKC,GAAMA,IAGrDE,EAAIkL,cAAgB,GAEpB/M,EAAQuN,eACR1L,EAAI0L,eAAiBvN,EAAQuN,eAAe7L,KAAKC,GAAMA,IAGvDE,EAAI0L,eAAiB,QAELzM,IAApBd,EAAQ2J,UAA0B9H,EAAI8H,QAAU3J,EAAQ2J,cAC7B7I,IAA3Bd,EAAQsL,iBAAiCzJ,EAAIyJ,eAAiBtL,EAAQsL,qBACtDxK,IAAhBd,EAAQ4J,MAAsB/H,EAAI+H,IAAM5J,EAAQ4J,KACzC/H,CACX,EACA3B,OAAO4B,GACI6M,GAAsB5M,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAExF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EACxD,MAAM7E,EA/KH,CACHwC,SAAU,GACV8K,cAAe,GACflC,UAAW,GACXhC,aAAc,GACdzC,KAAM,IACNE,MAAO,EACPwC,UAAW,IACXC,QAAS,IACThD,UAAW,GACXyG,cAAe,GACfQ,eAAgB,GAChB5D,QAAS,GACT2B,eAAgB,GAChB1B,IAAK,IAgLL,OAdA5J,EAAQwC,SAAsC,QAA1BR,EAAKX,EAAOmB,gBAA6B,IAAPR,EAAgBA,EAAK,GAC3EhC,EAAQsN,cAAgD,QAA/BrL,EAAKZ,EAAOiM,qBAAkC,IAAPrL,EAAgBA,EAAK,GACrFjC,EAAQoL,UAAwC,QAA3BlJ,EAAKb,EAAO+J,iBAA8B,IAAPlJ,EAAgBA,EAAK,GAC7ElC,EAAQoJ,aAA8C,QAA9BjF,EAAK9C,EAAO+H,oBAAiC,IAAPjF,EAAgBA,EAAK,GACnFnE,EAAQ2G,KAA8B,QAAtBvC,EAAK/C,EAAOsF,YAAyB,IAAPvC,EAAgBA,EAAK,IACnEpE,EAAQ6G,MAAgC,QAAvBxC,EAAKhD,EAAOwF,aAA0B,IAAPxC,EAAgBA,EAAK,EACrErE,EAAQqJ,UAAwC,QAA3B/E,EAAKjD,EAAOgI,iBAA8B,IAAP/E,EAAgBA,EAAK,IAC7EtE,EAAQsJ,QAAoC,QAAzB/E,EAAKlD,EAAOiI,eAA4B,IAAP/E,EAAgBA,EAAK,IACzEvE,EAAQsG,WAAyC,QAA3B9B,EAAKnD,EAAOiF,iBAA8B,IAAP9B,OAAgB,EAASA,EAAG9C,KAAKC,GAAMA,MAAO,GACvG3B,EAAQ+M,eAAiD,QAA/BtI,EAAKpD,EAAO0L,qBAAkC,IAAPtI,OAAgB,EAASA,EAAG/C,KAAKC,GAAMA,MAAO,GAC/G3B,EAAQuN,gBAAmD,QAAhC7I,EAAKrD,EAAOkM,sBAAmC,IAAP7I,OAAgB,EAASA,EAAGhD,KAAKC,GAAMA,MAAO,GACjH3B,EAAQ2J,QAAoC,QAAzBhF,EAAKtD,EAAOsI,eAA4B,IAAPhF,EAAgBA,EAAK,GACzE3E,EAAQsL,eAAkD,QAAhC1G,EAAKvD,EAAOiK,sBAAmC,IAAP1G,EAAgBA,EAAK,GACvF5E,EAAQ4J,IAA4B,QAArB/E,EAAKxD,EAAOuI,WAAwB,IAAP/E,EAAgBA,EAAK,GAC1D7E,CACX,GAKG,MAAM4O,GAAyB,CAClC7O,OAAM,CAACC,EAASC,EAAS,SAAWC,iBACVY,IAAlBd,EAAQ0O,OACRhB,GAAgB3N,OAAOC,EAAQ0O,MAAOzO,EAAOG,OAAO,IAAIkC,QAAQC,SAEtC,KAA1BvC,EAAQwG,eACRvG,EAAOG,OAAO,IAAIC,OAAOL,EAAQwG,eAEX,MAAtBxG,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAE9BxG,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlBH,CAAE0O,WAAO5N,EAAW0F,cAAe,GAAIC,UAAW,KAmBrD,KAAO7F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQ0O,MAAQhB,GAAgBjN,OAAOG,EAAQA,EAAOR,UACtD,MACJ,KAAK,EACDJ,EAAQwG,cAAgB5F,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHqN,MAAOpN,GAAMD,EAAOqN,OAAShB,GAAgBtM,SAASC,EAAOqN,YAAS5N,EACtE0F,cAAelF,GAAMD,EAAOmF,eAAiBjF,OAAOF,EAAOmF,eAAiB,GAC5EC,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,MAGxE,MAAA7E,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAIb,YAHkBf,IAAlBd,EAAQ0O,QAAwB7M,EAAI6M,MAAQ1O,EAAQ0O,MAAQhB,GAAgB9L,OAAO5B,EAAQ0O,YAAS5N,QAC1EA,IAA1Bd,EAAQwG,gBAAgC3E,EAAI2E,cAAgBxG,EAAQwG,oBAC9C1F,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,WACrD5E,CACX,EACA3B,OAAO4B,GACI8M,GAAuB7M,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEzF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EACR,MAAMjC,EAzDH,CAAE0O,WAAO5N,EAAW0F,cAAe,GAAIC,UAAW,KA+DrD,OALAzG,EAAQ0O,WAA0B5N,IAAjBO,EAAOqN,OAAwC,OAAjBrN,EAAOqN,MAChDhB,GAAgB3L,YAAYV,EAAOqN,YACnC5N,EACNd,EAAQwG,cAAgD,QAA/BxE,EAAKX,EAAOmF,qBAAkC,IAAPxE,EAAgBA,EAAK,GACrFhC,EAAQyG,UAAwC,QAA3BxE,EAAKZ,EAAOoF,iBAA8B,IAAPxE,EAAgBA,EAAK,IACtEjC,CACX,GAKG,MAAM6O,GAA8B,CACvC9O,OAAM,CAACC,EAASC,EAAS,SAAWC,YACH,KAAzBF,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEZ,KAArBpJ,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEhB,MAAjBxC,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAE9B5G,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EArBH,CAAEoJ,aAAc,GAAI5G,SAAU,GAAImE,KAAM,IAAKE,MAAO,GAsBvD,KAAOjG,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,QACIzE,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+H,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzE5G,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DmE,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,IAG5D,MAAAjF,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAKb,YAJyBf,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBAC7CtI,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACzC1B,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,QACxDhF,CACX,EACA3B,OAAO4B,GACI+M,GAA4B9M,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE9F,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAChB,MAAMnE,EAjEH,CAAEoJ,aAAc,GAAI5G,SAAU,GAAImE,KAAM,IAAKE,MAAO,GAsEvD,OAJA7G,EAAQoJ,aAA8C,QAA9BpH,EAAKX,EAAO+H,oBAAiC,IAAPpH,EAAgBA,EAAK,GACnFhC,EAAQwC,SAAsC,QAA1BP,EAAKZ,EAAOmB,gBAA6B,IAAPP,EAAgBA,EAAK,GAC3EjC,EAAQ2G,KAA8B,QAAtBzE,EAAKb,EAAOsF,YAAyB,IAAPzE,EAAgBA,EAAK,IACnElC,EAAQ6G,MAAgC,QAAvB1C,EAAK9C,EAAOwF,aAA0B,IAAP1C,EAAgBA,EAAK,EAC9DnE,CACX,GAKG,MAAM8O,GAA+B,CACxC,MAAA/O,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQ8J,OACpBC,EAAqBhK,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAK7D,YAHuBzB,IAAnBd,EAAQgH,QACRC,EAAOlH,OAAOC,EAAQgH,OAAQ/G,EAAOG,OAAO,IAAIkC,QAAQC,SAErDtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAE8J,OAAQ,GAAI9C,YAAQlG,GAgBzB,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQ8J,OAAO5I,KAAK6I,EAAqBtJ,OAAOG,EAAQA,EAAOR,WAC/D,MACJ,KAAK,EACDJ,EAAQgH,OAASC,EAAOxG,OAAOG,EAAQA,EAAOR,UAC9C,MACJ,QACIQ,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHyI,OAAQtI,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOyI,QAAUzI,EAAOyI,OAAOpI,KAAKC,GAAMoI,EAAqB3I,SAASO,KAAM,GACpJqF,OAAQ1F,GAAMD,EAAO2F,QAAUC,EAAO7F,SAASC,EAAO2F,aAAUlG,IAGxE,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAQb,OAPI7B,EAAQ8J,OACRjI,EAAIiI,OAAS9J,EAAQ8J,OAAOpI,KAAKC,GAAMA,EAAIoI,EAAqBnI,OAAOD,QAAKb,IAG5Ee,EAAIiI,OAAS,QAEEhJ,IAAnBd,EAAQgH,SAAyBnF,EAAImF,OAAShH,EAAQgH,OAASC,EAAOrF,OAAO5B,EAAQgH,aAAUlG,GACxFe,CACX,EACA3B,OAAO4B,GACIgN,GAA6B/M,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE/F,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAtDH,CAAE8J,OAAQ,GAAI9C,YAAQlG,GA2DzB,OAJAd,EAAQ8J,QAAmC,QAAxB9H,EAAKX,EAAOyI,cAA2B,IAAP9H,OAAgB,EAASA,EAAGN,KAAKC,GAAMoI,EAAqBhI,YAAYJ,OAAQ,GACnI3B,EAAQgH,YAA4BlG,IAAlBO,EAAO2F,QAA0C,OAAlB3F,EAAO2F,OAClDC,EAAOlF,YAAYV,EAAO2F,aAC1BlG,EACCd,CACX,GAKG,MAAM+O,GAA8B,CACvChP,OAAM,CAACC,EAASC,EAAS,SAAWC,YACH,KAAzBF,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEZ,KAArBpJ,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEP,KAA1BxC,EAAQ2K,eACR1K,EAAOG,OAAO,IAAIC,OAAOL,EAAQ2K,eAEX,KAAtB3K,EAAQoL,WACRnL,EAAOG,OAAO,IAAIC,OAAOL,EAAQoL,WAEhB,MAAjBpL,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAE9B5G,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EA3BH,CAAEoJ,aAAc,GAAI5G,SAAU,GAAImI,cAAe,GAAIS,UAAW,GAAIzE,KAAM,IAAKE,MAAO,GA4BzF,KAAOjG,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ2K,cAAgB/J,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQoL,UAAYxK,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,QACIzE,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+H,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzE5G,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DmI,cAAerJ,GAAMD,EAAOsJ,eAAiBpJ,OAAOF,EAAOsJ,eAAiB,GAC5ES,UAAW9J,GAAMD,EAAO+J,WAAa7J,OAAOF,EAAO+J,WAAa,GAChEzE,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,IAG5D,MAAAjF,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAOb,YANyBf,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBAC7CtI,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eAChC1B,IAA1Bd,EAAQ2K,gBAAgC9I,EAAI8I,cAAgB3K,EAAQ2K,oBAC9C7J,IAAtBd,EAAQoL,YAA4BvJ,EAAIuJ,UAAYpL,EAAQoL,gBAC3CtK,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,QACxDhF,CACX,EACA3B,OAAO4B,GACIiN,GAA4BhN,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE9F,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EACxB,MAAMrE,EAjFH,CAAEoJ,aAAc,GAAI5G,SAAU,GAAImI,cAAe,GAAIS,UAAW,GAAIzE,KAAM,IAAKE,MAAO,GAwFzF,OANA7G,EAAQoJ,aAA8C,QAA9BpH,EAAKX,EAAO+H,oBAAiC,IAAPpH,EAAgBA,EAAK,GACnFhC,EAAQwC,SAAsC,QAA1BP,EAAKZ,EAAOmB,gBAA6B,IAAPP,EAAgBA,EAAK,GAC3EjC,EAAQ2K,cAAgD,QAA/BzI,EAAKb,EAAOsJ,qBAAkC,IAAPzI,EAAgBA,EAAK,GACrFlC,EAAQoL,UAAwC,QAA3BjH,EAAK9C,EAAO+J,iBAA8B,IAAPjH,EAAgBA,EAAK,GAC7EnE,EAAQ2G,KAA8B,QAAtBvC,EAAK/C,EAAOsF,YAAyB,IAAPvC,EAAgBA,EAAK,IACnEpE,EAAQ6G,MAAgC,QAAvBxC,EAAKhD,EAAOwF,aAA0B,IAAPxC,EAAgBA,EAAK,EAC9DrE,CACX,GAKG,MAAMgP,GAA+B,CACxC,MAAAjP,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQyN,OACpBC,GAAgB3N,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAExD,OAAOtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAZH,CAAEyN,OAAQ,IAab,KAAO7M,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,GAAQa,IAAQ,IACP,EACDjB,EAAQyN,OAAOvM,KAAKwM,GAAgBjN,OAAOG,EAAQA,EAAOR,gBAG1DQ,EAAOO,SAAe,EAANF,EAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CAAEoM,OAAQjM,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOoM,QAAUpM,EAAOoM,OAAO/L,KAAKC,GAAM+L,GAAgBtM,SAASO,KAAM,KAE5J,MAAAC,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAOb,OANI7B,EAAQyN,OACR5L,EAAI4L,OAASzN,EAAQyN,OAAO/L,KAAKC,GAAMA,EAAI+L,GAAgB9L,OAAOD,QAAKb,IAGvEe,EAAI4L,OAAS,GAEV5L,CACX,EACA3B,OAAO4B,GACIkN,GAA6BjN,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE/F,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EA5CH,CAAEyN,OAAQ,IA8Cb,OADAzN,EAAQyN,QAAmC,QAAxBzL,EAAKX,EAAOoM,cAA2B,IAAPzL,OAAgB,EAASA,EAAGN,KAAKC,GAAM+L,GAAgB3L,YAAYJ,OAAQ,GACvH3B,CACX,GAsBG,MAAMiP,GAAuB,CAChC,MAAAlP,CAAOC,EAASC,EAAS,SAAWC,UACH,KAAzBF,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEZ,KAArBpJ,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAEhB,MAAjBxC,EAAQ2G,MACR1G,EAAOG,OAAO,IAAIwG,OAAO5G,EAAQ2G,MAEf,IAAlB3G,EAAQ6G,OACR5G,EAAOG,OAAO,IAAIiF,OAAOrF,EAAQ6G,OAErC,IAAK,MAAMtG,KAAKP,EAAQkP,WACpBjP,EAAOG,OAAO,IAAIC,OAAOE,GAEH,KAAtBP,EAAQoL,WACRnL,EAAOG,OAAO,IAAIC,OAAOL,EAAQoL,WAEX,MAAtBpL,EAAQqJ,WACRpJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQqJ,WAEb,MAApBrJ,EAAQsJ,SACRrJ,EAAOG,OAAO,IAAImF,OAAOvF,EAAQsJ,SAEP,KAA1BtJ,EAAQuJ,eACRtJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQuJ,eAEX,KAAtBvJ,EAAQwJ,WACRvJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQwJ,WAEf,KAAlBxJ,EAAQsK,OACRrK,EAAOG,OAAO,IAAIC,OAAOL,EAAQsK,OAErC,IAAK,MAAM/J,KAAKP,EAAQuN,eACpBtN,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,IAAK,MAAMA,KAAKP,EAAQsG,UACpBrG,EAAOG,OAAO,KAAKC,OAAOE,GAW9B,MATwB,KAApBP,EAAQ2J,SACR1J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ2J,UAEJ,IAA9B3J,EAAQmP,mBACRlP,EAAOG,OAAO,KAAKkD,KAAKtD,EAAQmP,mBAEhB,KAAhBnP,EAAQ4J,KACR3J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ4J,KAE/B3J,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EA1EH,CACHoJ,aAAc,GACd5G,SAAU,GACVmE,KAAM,IACNE,MAAO,EACPqI,WAAY,GACZ9D,UAAW,GACX/B,UAAW,IACXC,QAAS,IACTC,cAAe,GACfC,UAAW,GACXc,MAAO,GACPiD,eAAgB,GAChBjH,UAAW,GACXqD,QAAS,GACTwF,mBAAmB,EACnBvF,IAAK,IA2DL,KAAOhJ,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQ2G,KAAOnB,GAAa5E,EAAOgG,UACnC,MACJ,KAAK,EACD5G,EAAQ6G,MAAQjG,EAAOyE,SACvB,MACJ,KAAK,EACDrF,EAAQkP,WAAWhO,KAAKN,EAAOP,UAC/B,MACJ,KAAK,EACDL,EAAQoL,UAAYxK,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQqJ,UAAY7D,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,EACDvF,EAAQsJ,QAAU9D,GAAa5E,EAAO2E,UACtC,MACJ,KAAK,EACDvF,EAAQuJ,cAAgB3I,EAAOP,SAC/B,MACJ,KAAK,GACDL,EAAQwJ,UAAY5I,EAAOP,SAC3B,MACJ,KAAK,GACDL,EAAQsK,MAAQ1J,EAAOP,SACvB,MACJ,KAAK,GACDL,EAAQuN,eAAerM,KAAKN,EAAOP,UACnC,MACJ,KAAK,GACDL,EAAQsG,UAAUpF,KAAKN,EAAOP,UAC9B,MACJ,KAAK,GACDL,EAAQ2J,QAAU/I,EAAOP,SACzB,MACJ,KAAK,GACDL,EAAQmP,kBAAoBvO,EAAO0C,OACnC,MACJ,KAAK,GACDtD,EAAQ4J,IAAMhJ,EAAOP,SACrB,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+H,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzE5G,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DmE,KAAMrF,GAAMD,EAAOsF,MAAQpF,OAAOF,EAAOsF,MAAQ,IACjDE,MAAOvF,GAAMD,EAAOwF,OAAS9C,OAAO1C,EAAOwF,OAAS,EACpDqI,WAAY1N,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAO6N,YAAc7N,EAAO6N,WAAWxN,KAAKC,GAAMJ,OAAOI,KAAM,GACzIyJ,UAAW9J,GAAMD,EAAO+J,WAAa7J,OAAOF,EAAO+J,WAAa,GAChE/B,UAAW/H,GAAMD,EAAOgI,WAAa9H,OAAOF,EAAOgI,WAAa,IAChEC,QAAShI,GAAMD,EAAOiI,SAAW/H,OAAOF,EAAOiI,SAAW,IAC1DC,cAAejI,GAAMD,EAAOkI,eAAiBhI,OAAOF,EAAOkI,eAAiB,GAC5EC,UAAWlI,GAAMD,EAAOmI,WAAajI,OAAOF,EAAOmI,WAAa,GAChEc,MAAOhJ,GAAMD,EAAOiJ,OAAS/I,OAAOF,EAAOiJ,OAAS,GACpDiD,eAAgB/L,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOkM,gBAAkBlM,EAAOkM,eAAe7L,KAAKC,GAAMJ,OAAOI,KAAM,GACrJ2E,UAAW9E,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOiF,WAAajF,EAAOiF,UAAU5E,KAAKC,GAAMJ,OAAOI,KAAM,GACtIgI,QAASrI,GAAMD,EAAOsI,SAAWpI,OAAOF,EAAOsI,SAAW,GAC1DwF,oBAAmB7N,GAAMD,EAAO8N,oBAAqBnL,QAAQ3C,EAAO8N,mBACpEvF,IAAKtI,GAAMD,EAAOuI,KAAOrI,OAAOF,EAAOuI,KAAO,KAGtD,MAAAhI,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAgCb,YA/ByBf,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBAC7CtI,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACzC1B,IAAjBd,EAAQ2G,OAAuB9E,EAAI8E,KAAO3G,EAAQ2G,WAChC7F,IAAlBd,EAAQ6G,QAAwBhF,EAAIgF,MAAQ5C,KAAKC,MAAMlE,EAAQ6G,QAC3D7G,EAAQkP,WACRrN,EAAIqN,WAAalP,EAAQkP,WAAWxN,KAAKC,GAAMA,IAG/CE,EAAIqN,WAAa,QAECpO,IAAtBd,EAAQoL,YAA4BvJ,EAAIuJ,UAAYpL,EAAQoL,gBACtCtK,IAAtBd,EAAQqJ,YAA4BxH,EAAIwH,UAAYrJ,EAAQqJ,gBACxCvI,IAApBd,EAAQsJ,UAA0BzH,EAAIyH,QAAUtJ,EAAQsJ,cAC9BxI,IAA1Bd,EAAQuJ,gBAAgC1H,EAAI0H,cAAgBvJ,EAAQuJ,oBAC9CzI,IAAtBd,EAAQwJ,YAA4B3H,EAAI2H,UAAYxJ,EAAQwJ,gBAC1C1I,IAAlBd,EAAQsK,QAAwBzI,EAAIyI,MAAQtK,EAAQsK,OAChDtK,EAAQuN,eACR1L,EAAI0L,eAAiBvN,EAAQuN,eAAe7L,KAAKC,GAAMA,IAGvDE,EAAI0L,eAAiB,GAErBvN,EAAQsG,UACRzE,EAAIyE,UAAYtG,EAAQsG,UAAU5E,KAAKC,GAAMA,IAG7CE,EAAIyE,UAAY,QAEAxF,IAApBd,EAAQ2J,UAA0B9H,EAAI8H,QAAU3J,EAAQ2J,cAC1B7I,IAA9Bd,EAAQmP,oBAAoCtN,EAAIsN,kBAAoBnP,EAAQmP,wBAC5DrO,IAAhBd,EAAQ4J,MAAsB/H,EAAI+H,IAAM5J,EAAQ4J,KACzC/H,CACX,EACA3B,OAAO4B,GACImN,GAAqBlN,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEvF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAChE,MAAM/E,EAjMH,CACHoJ,aAAc,GACd5G,SAAU,GACVmE,KAAM,IACNE,MAAO,EACPqI,WAAY,GACZ9D,UAAW,GACX/B,UAAW,IACXC,QAAS,IACTC,cAAe,GACfC,UAAW,GACXc,MAAO,GACPiD,eAAgB,GAChBjH,UAAW,GACXqD,QAAS,GACTwF,mBAAmB,EACnBvF,IAAK,IAkML,OAhBA5J,EAAQoJ,aAA8C,QAA9BpH,EAAKX,EAAO+H,oBAAiC,IAAPpH,EAAgBA,EAAK,GACnFhC,EAAQwC,SAAsC,QAA1BP,EAAKZ,EAAOmB,gBAA6B,IAAPP,EAAgBA,EAAK,GAC3EjC,EAAQ2G,KAA8B,QAAtBzE,EAAKb,EAAOsF,YAAyB,IAAPzE,EAAgBA,EAAK,IACnElC,EAAQ6G,MAAgC,QAAvB1C,EAAK9C,EAAOwF,aAA0B,IAAP1C,EAAgBA,EAAK,EACrEnE,EAAQkP,YAA2C,QAA5B9K,EAAK/C,EAAO6N,kBAA+B,IAAP9K,OAAgB,EAASA,EAAG1C,KAAKC,GAAMA,MAAO,GACzG3B,EAAQoL,UAAwC,QAA3B/G,EAAKhD,EAAO+J,iBAA8B,IAAP/G,EAAgBA,EAAK,GAC7ErE,EAAQqJ,UAAwC,QAA3B/E,EAAKjD,EAAOgI,iBAA8B,IAAP/E,EAAgBA,EAAK,IAC7EtE,EAAQsJ,QAAoC,QAAzB/E,EAAKlD,EAAOiI,eAA4B,IAAP/E,EAAgBA,EAAK,IACzEvE,EAAQuJ,cAAgD,QAA/B/E,EAAKnD,EAAOkI,qBAAkC,IAAP/E,EAAgBA,EAAK,GACrFxE,EAAQwJ,UAAwC,QAA3B/E,EAAKpD,EAAOmI,iBAA8B,IAAP/E,EAAgBA,EAAK,GAC7EzE,EAAQsK,MAAgC,QAAvB5F,EAAKrD,EAAOiJ,aAA0B,IAAP5F,EAAgBA,EAAK,GACrE1E,EAAQuN,gBAAmD,QAAhC5I,EAAKtD,EAAOkM,sBAAmC,IAAP5I,OAAgB,EAASA,EAAGjD,KAAKC,GAAMA,MAAO,GACjH3B,EAAQsG,WAAyC,QAA3B1B,EAAKvD,EAAOiF,iBAA8B,IAAP1B,OAAgB,EAASA,EAAGlD,KAAKC,GAAMA,MAAO,GACvG3B,EAAQ2J,QAAoC,QAAzB9E,EAAKxD,EAAOsI,eAA4B,IAAP9E,EAAgBA,EAAK,GACzE7E,EAAQmP,kBAAwD,QAAnCrK,EAAKzD,EAAO8N,yBAAsC,IAAPrK,GAAgBA,EACxF9E,EAAQ4J,IAA4B,QAArB7E,EAAK1D,EAAOuI,WAAwB,IAAP7E,EAAgBA,EAAK,GAC1D/E,CACX,GAKG,MAAMoP,GAAwB,CACjC,MAAArP,CAAOC,EAASC,EAAS,SAAWC,UAChC,IAAK,MAAMK,KAAKP,EAAQ8J,OACpBuF,GAAuBtP,OAAOQ,EAAGN,EAAOG,OAAO,IAAIkC,QAAQC,SAK/D,YAHuBzB,IAAnBd,EAAQgH,QACRC,EAAOlH,OAAOC,EAAQgH,OAAQ/G,EAAOG,OAAO,IAAIkC,QAAQC,SAErDtC,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAfH,CAAE8J,OAAQ,GAAI9C,YAAQlG,GAgBzB,KAAOF,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQ8J,OAAO5I,KAAKmO,GAAuB5O,OAAOG,EAAQA,EAAOR,WACjE,MACJ,KAAK,EACDJ,EAAQgH,OAASC,EAAOxG,OAAOG,EAAQA,EAAOR,UAC9C,MACJ,QACIQ,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACHyI,OAAQtI,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOyI,QAAUzI,EAAOyI,OAAOpI,KAAKC,GAAM0N,GAAuBjO,SAASO,KAAM,GACtJqF,OAAQ1F,GAAMD,EAAO2F,QAAUC,EAAO7F,SAASC,EAAO2F,aAAUlG,IAGxE,MAAAc,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAQb,OAPI7B,EAAQ8J,OACRjI,EAAIiI,OAAS9J,EAAQ8J,OAAOpI,KAAKC,GAAMA,EAAI0N,GAAuBzN,OAAOD,QAAKb,IAG9Ee,EAAIiI,OAAS,QAEEhJ,IAAnBd,EAAQgH,SAAyBnF,EAAImF,OAAShH,EAAQgH,OAASC,EAAOrF,OAAO5B,EAAQgH,aAAUlG,GACxFe,CACX,EACA3B,OAAO4B,GACIsN,GAAsBrN,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAExF,WAAAC,CAAYV,GACR,IAAIW,EACJ,MAAMhC,EAtDH,CAAE8J,OAAQ,GAAI9C,YAAQlG,GA2DzB,OAJAd,EAAQ8J,QAAmC,QAAxB9H,EAAKX,EAAOyI,cAA2B,IAAP9H,OAAgB,EAASA,EAAGN,KAAKC,GAAM0N,GAAuBtN,YAAYJ,OAAQ,GACrI3B,EAAQgH,YAA4BlG,IAAlBO,EAAO2F,QAA0C,OAAlB3F,EAAO2F,OAClDC,EAAOlF,YAAYV,EAAO2F,aAC1BlG,EACCd,CACX,GA2BG,MAAMqP,GAAyB,CAClCtP,OAAM,CAACC,EAASC,EAAS,SAAWC,YACN,KAAtBF,EAAQgK,WACR/J,EAAOG,OAAO,IAAIC,OAAOL,EAAQgK,WAEZ,KAArBhK,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,WAEZ,IAArBxC,EAAQiJ,UACRhJ,EAAOG,OAAO,IAAIkD,KAAKtD,EAAQiJ,UAEN,KAAzBjJ,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEP,KAA1BpJ,EAAQ2K,eACR1K,EAAOG,OAAO,IAAIC,OAAOL,EAAQ2K,eAEX,KAAtB3K,EAAQwJ,WACRvJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQwJ,WAEf,KAAlBxJ,EAAQoI,OACRnI,EAAOG,OAAO,IAAIC,OAAOL,EAAQoI,OAER,KAAzBpI,EAAQoK,cACRnK,EAAOG,OAAO,IAAIC,OAAOL,EAAQoK,cAEZ,KAArBpK,EAAQqI,UACRpI,EAAOG,OAAO,IAAIC,OAAOL,EAAQqI,UAEN,KAA3BrI,EAAQsP,gBACRrP,EAAOG,OAAO,IAAIC,OAAOL,EAAQsP,gBAEf,KAAlBtP,EAAQsK,OACRrK,EAAOG,OAAO,IAAIC,OAAOL,EAAQsK,OAEX,MAAtBtK,EAAQuK,WACRtK,EAAOG,OAAO,IAAImF,OAAOvF,EAAQuK,WAEX,MAAtBvK,EAAQsF,WACRrF,EAAOG,OAAO,KAAKmF,OAAOvF,EAAQsF,YAET,IAAzBtF,EAAQiK,cACRhK,EAAOG,OAAO,KAAKkD,KAAKtD,EAAQiK,cAEV,KAAtBjK,EAAQoL,WACRnL,EAAOG,OAAO,KAAKC,OAAOL,EAAQoL,YAER,IAA1BpL,EAAQuJ,eACRtJ,EAAOG,OAAO,KAAKkD,KAAKtD,EAAQuJ,eAEV,MAAtBvJ,EAAQyK,WACRxK,EAAOG,OAAO,KAAKwG,OAAO5G,EAAQyK,WAEN,KAA5BzK,EAAQ0K,iBACRzK,EAAOG,OAAO,KAAKC,OAAOL,EAAQ0K,iBAEf,KAAnB1K,EAAQkK,QACRjK,EAAOG,OAAO,KAAKC,OAAOL,EAAQkK,QAEf,KAAnBlK,EAAQ4K,QACR3K,EAAOG,OAAO,KAAKC,OAAOL,EAAQ4K,QAElB,KAAhB5K,EAAQ4J,KACR3J,EAAOG,OAAO,KAAKC,OAAOL,EAAQ4J,KAE/B3J,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EA9FH,CACHgK,UAAW,GACXxH,SAAU,GACVyG,UAAU,EACVG,aAAc,GACduB,cAAe,GACfnB,UAAW,GACXpB,MAAO,GACPgC,aAAc,GACd/B,SAAU,GACViH,eAAgB,GAChBhF,MAAO,GACPC,UAAW,IACXjF,UAAW,IACX2E,cAAc,EACdmB,UAAW,GACX7B,eAAe,EACfkB,UAAW,IACXC,gBAAiB,GACjBR,OAAQ,GACRU,OAAQ,GACRhB,IAAK,IA0EL,KAAOhJ,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQgK,UAAYpJ,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQiJ,SAAWrI,EAAO0C,OAC1B,MACJ,KAAK,EACDtD,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQ2K,cAAgB/J,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQwJ,UAAY5I,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQoI,MAAQxH,EAAOP,SACvB,MACJ,KAAK,EACDL,EAAQoK,aAAexJ,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQqI,SAAWzH,EAAOP,SAC1B,MACJ,KAAK,GACDL,EAAQsP,eAAiB1O,EAAOP,SAChC,MACJ,KAAK,GACDL,EAAQsK,MAAQ1J,EAAOP,SACvB,MACJ,KAAK,GACDL,EAAQuK,UAAY/E,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,GACDvF,EAAQsF,UAAYE,GAAa5E,EAAO2E,UACxC,MACJ,KAAK,GACDvF,EAAQiK,aAAerJ,EAAO0C,OAC9B,MACJ,KAAK,GACDtD,EAAQoL,UAAYxK,EAAOP,SAC3B,MACJ,KAAK,GACDL,EAAQuJ,cAAgB3I,EAAO0C,OAC/B,MACJ,KAAK,GACDtD,EAAQyK,UAAYjF,GAAa5E,EAAOgG,UACxC,MACJ,KAAK,GACD5G,EAAQ0K,gBAAkB9J,EAAOP,SACjC,MACJ,KAAK,GACDL,EAAQkK,OAAStJ,EAAOP,SACxB,MACJ,KAAK,GACDL,EAAQ4K,OAAShK,EAAOP,SACxB,MACJ,KAAK,GACDL,EAAQ4J,IAAMhJ,EAAOP,SACrB,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH2I,UAAW1I,GAAMD,EAAO2I,WAAazI,OAAOF,EAAO2I,WAAa,GAChExH,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7DyG,WAAU3H,GAAMD,EAAO4H,WAAYjF,QAAQ3C,EAAO4H,UAClDG,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzEuB,cAAerJ,GAAMD,EAAOsJ,eAAiBpJ,OAAOF,EAAOsJ,eAAiB,GAC5EnB,UAAWlI,GAAMD,EAAOmI,WAAajI,OAAOF,EAAOmI,WAAa,GAChEpB,MAAO9G,GAAMD,EAAO+G,OAAS7G,OAAOF,EAAO+G,OAAS,GACpDgC,aAAc9I,GAAMD,EAAO+I,cAAgB7I,OAAOF,EAAO+I,cAAgB,GACzE/B,SAAU/G,GAAMD,EAAOgH,UAAY9G,OAAOF,EAAOgH,UAAY,GAC7DiH,eAAgBhO,GAAMD,EAAOiO,gBAAkB/N,OAAOF,EAAOiO,gBAAkB,GAC/EhF,MAAOhJ,GAAMD,EAAOiJ,OAAS/I,OAAOF,EAAOiJ,OAAS,GACpDC,UAAWjJ,GAAMD,EAAOkJ,WAAahJ,OAAOF,EAAOkJ,WAAa,IAChEjF,UAAWhE,GAAMD,EAAOiE,WAAa/D,OAAOF,EAAOiE,WAAa,IAChE2E,eAAc3I,GAAMD,EAAO4I,eAAgBjG,QAAQ3C,EAAO4I,cAC1DmB,UAAW9J,GAAMD,EAAO+J,WAAa7J,OAAOF,EAAO+J,WAAa,GAChE7B,gBAAejI,GAAMD,EAAOkI,gBAAiBvF,QAAQ3C,EAAOkI,eAC5DkB,UAAWnJ,GAAMD,EAAOoJ,WAAalJ,OAAOF,EAAOoJ,WAAa,IAChEC,gBAAiBpJ,GAAMD,EAAOqJ,iBAAmBnJ,OAAOF,EAAOqJ,iBAAmB,GAClFR,OAAQ5I,GAAMD,EAAO6I,QAAU3I,OAAOF,EAAO6I,QAAU,GACvDU,OAAQtJ,GAAMD,EAAOuJ,QAAUrJ,OAAOF,EAAOuJ,QAAU,GACvDhB,IAAKtI,GAAMD,EAAOuI,KAAOrI,OAAOF,EAAOuI,KAAO,KAGtD,MAAAhI,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAsBb,YArBsBf,IAAtBd,EAAQgK,YAA4BnI,EAAImI,UAAYhK,EAAQgK,gBACvClJ,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,eACrC1B,IAArBd,EAAQiJ,WAA2BpH,EAAIoH,SAAWjJ,EAAQiJ,eACjCnI,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBACxCtI,IAA1Bd,EAAQ2K,gBAAgC9I,EAAI8I,cAAgB3K,EAAQ2K,oBAC9C7J,IAAtBd,EAAQwJ,YAA4B3H,EAAI2H,UAAYxJ,EAAQwJ,gBAC1C1I,IAAlBd,EAAQoI,QAAwBvG,EAAIuG,MAAQpI,EAAQoI,YAC3BtH,IAAzBd,EAAQoK,eAA+BvI,EAAIuI,aAAepK,EAAQoK,mBAC7CtJ,IAArBd,EAAQqI,WAA2BxG,EAAIwG,SAAWrI,EAAQqI,eAC/BvH,IAA3Bd,EAAQsP,iBAAiCzN,EAAIyN,eAAiBtP,EAAQsP,qBACpDxO,IAAlBd,EAAQsK,QAAwBzI,EAAIyI,MAAQtK,EAAQsK,YAC9BxJ,IAAtBd,EAAQuK,YAA4B1I,EAAI0I,UAAYvK,EAAQuK,gBACtCzJ,IAAtBd,EAAQsF,YAA4BzD,EAAIyD,UAAYtF,EAAQsF,gBACnCxE,IAAzBd,EAAQiK,eAA+BpI,EAAIoI,aAAejK,EAAQiK,mBAC5CnJ,IAAtBd,EAAQoL,YAA4BvJ,EAAIuJ,UAAYpL,EAAQoL,gBAClCtK,IAA1Bd,EAAQuJ,gBAAgC1H,EAAI0H,cAAgBvJ,EAAQuJ,oBAC9CzI,IAAtBd,EAAQyK,YAA4B5I,EAAI4I,UAAYzK,EAAQyK,gBAChC3J,IAA5Bd,EAAQ0K,kBAAkC7I,EAAI6I,gBAAkB1K,EAAQ0K,sBACrD5J,IAAnBd,EAAQkK,SAAyBrI,EAAIqI,OAASlK,EAAQkK,aACnCpJ,IAAnBd,EAAQ4K,SAAyB/I,EAAI+I,OAAS5K,EAAQ4K,aACtC9J,IAAhBd,EAAQ4J,MAAsB/H,EAAI+H,IAAM5J,EAAQ4J,KACzC/H,CACX,EACA3B,OAAO4B,GACIuN,GAAuBtN,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAEzF,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAI8F,EAAIC,EAAIC,EAAIC,EAAIC,EACpF,MAAMjL,EA/NH,CACHgK,UAAW,GACXxH,SAAU,GACVyG,UAAU,EACVG,aAAc,GACduB,cAAe,GACfnB,UAAW,GACXpB,MAAO,GACPgC,aAAc,GACd/B,SAAU,GACViH,eAAgB,GAChBhF,MAAO,GACPC,UAAW,IACXjF,UAAW,IACX2E,cAAc,EACdmB,UAAW,GACX7B,eAAe,EACfkB,UAAW,IACXC,gBAAiB,GACjBR,OAAQ,GACRU,OAAQ,GACRhB,IAAK,IAgOL,OArBA5J,EAAQgK,UAAwC,QAA3BhI,EAAKX,EAAO2I,iBAA8B,IAAPhI,EAAgBA,EAAK,GAC7EhC,EAAQwC,SAAsC,QAA1BP,EAAKZ,EAAOmB,gBAA6B,IAAPP,EAAgBA,EAAK,GAC3EjC,EAAQiJ,SAAsC,QAA1B/G,EAAKb,EAAO4H,gBAA6B,IAAP/G,GAAgBA,EACtElC,EAAQoJ,aAA8C,QAA9BjF,EAAK9C,EAAO+H,oBAAiC,IAAPjF,EAAgBA,EAAK,GACnFnE,EAAQ2K,cAAgD,QAA/BvG,EAAK/C,EAAOsJ,qBAAkC,IAAPvG,EAAgBA,EAAK,GACrFpE,EAAQwJ,UAAwC,QAA3BnF,EAAKhD,EAAOmI,iBAA8B,IAAPnF,EAAgBA,EAAK,GAC7ErE,EAAQoI,MAAgC,QAAvB9D,EAAKjD,EAAO+G,aAA0B,IAAP9D,EAAgBA,EAAK,GACrEtE,EAAQoK,aAA8C,QAA9B7F,EAAKlD,EAAO+I,oBAAiC,IAAP7F,EAAgBA,EAAK,GACnFvE,EAAQqI,SAAsC,QAA1B7D,EAAKnD,EAAOgH,gBAA6B,IAAP7D,EAAgBA,EAAK,GAC3ExE,EAAQsP,eAAkD,QAAhC7K,EAAKpD,EAAOiO,sBAAmC,IAAP7K,EAAgBA,EAAK,GACvFzE,EAAQsK,MAAgC,QAAvB5F,EAAKrD,EAAOiJ,aAA0B,IAAP5F,EAAgBA,EAAK,GACrE1E,EAAQuK,UAAwC,QAA3B5F,EAAKtD,EAAOkJ,iBAA8B,IAAP5F,EAAgBA,EAAK,IAC7E3E,EAAQsF,UAAwC,QAA3BV,EAAKvD,EAAOiE,iBAA8B,IAAPV,EAAgBA,EAAK,IAC7E5E,EAAQiK,aAA8C,QAA9BpF,EAAKxD,EAAO4I,oBAAiC,IAAPpF,GAAgBA,EAC9E7E,EAAQoL,UAAwC,QAA3BtG,EAAKzD,EAAO+J,iBAA8B,IAAPtG,EAAgBA,EAAK,GAC7E9E,EAAQuJ,cAAgD,QAA/BxE,EAAK1D,EAAOkI,qBAAkC,IAAPxE,GAAgBA,EAChF/E,EAAQyK,UAAwC,QAA3BI,EAAKxJ,EAAOoJ,iBAA8B,IAAPI,EAAgBA,EAAK,IAC7E7K,EAAQ0K,gBAAoD,QAAjCI,EAAKzJ,EAAOqJ,uBAAoC,IAAPI,EAAgBA,EAAK,GACzF9K,EAAQkK,OAAkC,QAAxBa,EAAK1J,EAAO6I,cAA2B,IAAPa,EAAgBA,EAAK,GACvE/K,EAAQ4K,OAAkC,QAAxBI,EAAK3J,EAAOuJ,cAA2B,IAAPI,EAAgBA,EAAK,GACvEhL,EAAQ4J,IAA4B,QAArBqB,EAAK5J,EAAOuI,WAAwB,IAAPqB,EAAgBA,EAAK,GAC1DjL,CACX,GAKG,MAAMuP,GAA6B,CACtC,MAAAxP,CAAOC,EAASC,EAAS,SAAWC,UACH,KAAzBF,EAAQoJ,cACRnJ,EAAOG,OAAO,IAAIC,OAAOL,EAAQoJ,cAEZ,KAArBpJ,EAAQwC,UACRvC,EAAOG,OAAO,IAAIC,OAAOL,EAAQwC,UAErC,IAAK,MAAMjC,KAAKP,EAAQkP,WACpBjP,EAAOG,OAAO,IAAIC,OAAOE,GAEH,KAAtBP,EAAQoL,WACRnL,EAAOG,OAAO,IAAIC,OAAOL,EAAQoL,WAEf,KAAlBpL,EAAQsK,OACRrK,EAAOG,OAAO,IAAIC,OAAOL,EAAQsK,OAErC,IAAK,MAAM/J,KAAKP,EAAQuN,eACpBtN,EAAOG,OAAO,IAAIC,OAAOE,GAE7B,OAAON,CACX,EACA,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EA3BH,CAAEoJ,aAAc,GAAI5G,SAAU,GAAI0M,WAAY,GAAI9D,UAAW,GAAId,MAAO,GAAIiD,eAAgB,IA4B/F,KAAO3M,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoJ,aAAexI,EAAOP,SAC9B,MACJ,KAAK,EACDL,EAAQwC,SAAW5B,EAAOP,SAC1B,MACJ,KAAK,EACDL,EAAQkP,WAAWhO,KAAKN,EAAOP,UAC/B,MACJ,KAAK,EACDL,EAAQoL,UAAYxK,EAAOP,SAC3B,MACJ,KAAK,EACDL,EAAQsK,MAAQ1J,EAAOP,SACvB,MACJ,KAAK,EACDL,EAAQuN,eAAerM,KAAKN,EAAOP,UACnC,MACJ,QACIO,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+H,aAAc9H,GAAMD,EAAO+H,cAAgB7H,OAAOF,EAAO+H,cAAgB,GACzE5G,SAAUlB,GAAMD,EAAOmB,UAAYjB,OAAOF,EAAOmB,UAAY,GAC7D0M,WAAY1N,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAO6N,YAAc7N,EAAO6N,WAAWxN,KAAKC,GAAMJ,OAAOI,KAAM,GACzIyJ,UAAW9J,GAAMD,EAAO+J,WAAa7J,OAAOF,EAAO+J,WAAa,GAChEd,MAAOhJ,GAAMD,EAAOiJ,OAAS/I,OAAOF,EAAOiJ,OAAS,GACpDiD,eAAgB/L,MAAMC,QAAmB,OAAXJ,QAA8B,IAAXA,OAAoB,EAASA,EAAOkM,gBAAkBlM,EAAOkM,eAAe7L,KAAKC,GAAMJ,OAAOI,KAAM,KAG7J,MAAAC,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAiBb,YAhByBf,IAAzBd,EAAQoJ,eAA+BvH,EAAIuH,aAAepJ,EAAQoJ,mBAC7CtI,IAArBd,EAAQwC,WAA2BX,EAAIW,SAAWxC,EAAQwC,UACtDxC,EAAQkP,WACRrN,EAAIqN,WAAalP,EAAQkP,WAAWxN,KAAKC,GAAMA,IAG/CE,EAAIqN,WAAa,QAECpO,IAAtBd,EAAQoL,YAA4BvJ,EAAIuJ,UAAYpL,EAAQoL,gBAC1CtK,IAAlBd,EAAQsK,QAAwBzI,EAAIyI,MAAQtK,EAAQsK,OAChDtK,EAAQuN,eACR1L,EAAI0L,eAAiBvN,EAAQuN,eAAe7L,KAAKC,GAAMA,IAGvDE,EAAI0L,eAAiB,GAElB1L,CACX,EACA3B,OAAO4B,GACIyN,GAA2BxN,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE7F,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EAAIC,EAAIiC,EAAIC,EAAIC,EACxB,MAAMrE,EA3FH,CAAEoJ,aAAc,GAAI5G,SAAU,GAAI0M,WAAY,GAAI9D,UAAW,GAAId,MAAO,GAAIiD,eAAgB,IAkG/F,OANAvN,EAAQoJ,aAA8C,QAA9BpH,EAAKX,EAAO+H,oBAAiC,IAAPpH,EAAgBA,EAAK,GACnFhC,EAAQwC,SAAsC,QAA1BP,EAAKZ,EAAOmB,gBAA6B,IAAPP,EAAgBA,EAAK,GAC3EjC,EAAQkP,YAA2C,QAA5BhN,EAAKb,EAAO6N,kBAA+B,IAAPhN,OAAgB,EAASA,EAAGR,KAAKC,GAAMA,MAAO,GACzG3B,EAAQoL,UAAwC,QAA3BjH,EAAK9C,EAAO+J,iBAA8B,IAAPjH,EAAgBA,EAAK,GAC7EnE,EAAQsK,MAAgC,QAAvBlG,EAAK/C,EAAOiJ,aAA0B,IAAPlG,EAAgBA,EAAK,GACrEpE,EAAQuN,gBAAmD,QAAhClJ,EAAKhD,EAAOkM,sBAAmC,IAAPlJ,OAAgB,EAASA,EAAG3C,KAAKC,GAAMA,MAAO,GAC1G3B,CACX,GAKG,MAAMwP,GAA8B,CACvCzP,OAAM,CAACC,EAASC,EAAS,SAAWC,iBACVY,IAAlBd,EAAQoN,OACRiC,GAAuBtP,OAAOC,EAAQoN,MAAOnN,EAAOG,OAAO,IAAIkC,QAAQC,SAE7C,KAA1BvC,EAAQwG,eACRvG,EAAOG,OAAO,IAAIC,OAAOL,EAAQwG,eAEX,MAAtBxG,EAAQyG,WACRxG,EAAOG,OAAO,IAAImF,OAAOvF,EAAQyG,WAE9BxG,GAEX,MAAAQ,CAAOC,EAAOC,GACV,MAAMC,EAASF,aAAiB,SAAaA,EAAQ,IAAI,SAAWA,GACpE,IAAIG,OAAiBC,IAAXH,EAAuBC,EAAOG,IAAMH,EAAOI,IAAML,EAC3D,MAAMX,EAlBH,CAAEoN,WAAOtM,EAAW0F,cAAe,GAAIC,UAAW,KAmBrD,KAAO7F,EAAOI,IAAMH,GAAK,CACrB,MAAMI,EAAML,EAAOR,SACnB,OAAQa,IAAQ,GACZ,KAAK,EACDjB,EAAQoN,MAAQiC,GAAuB5O,OAAOG,EAAQA,EAAOR,UAC7D,MACJ,KAAK,EACDJ,EAAQwG,cAAgB5F,EAAOP,SAC/B,MACJ,KAAK,EACDL,EAAQyG,UAAYjB,GAAa5E,EAAO2E,UACxC,MACJ,QACI3E,EAAOO,SAAe,EAANF,GAG5B,CACA,OAAOjB,CACX,EACAoB,SAASC,IACE,CACH+L,MAAO9L,GAAMD,EAAO+L,OAASiC,GAAuBjO,SAASC,EAAO+L,YAAStM,EAC7E0F,cAAelF,GAAMD,EAAOmF,eAAiBjF,OAAOF,EAAOmF,eAAiB,GAC5EC,UAAWnF,GAAMD,EAAOoF,WAAalF,OAAOF,EAAOoF,WAAa,MAGxE,MAAA7E,CAAO5B,GACH,MAAM6B,EAAM,CAAC,EAKb,YAJkBf,IAAlBd,EAAQoN,QACHvL,EAAIuL,MAAQpN,EAAQoN,MAAQiC,GAAuBzN,OAAO5B,EAAQoN,YAAStM,QACtDA,IAA1Bd,EAAQwG,gBAAgC3E,EAAI2E,cAAgBxG,EAAQwG,oBAC9C1F,IAAtBd,EAAQyG,YAA4B5E,EAAI4E,UAAYzG,EAAQyG,WACrD5E,CACX,EACA3B,OAAO4B,GACI0N,GAA4BzN,YAAqB,OAATD,QAA0B,IAATA,EAAkBA,EAAO,CAAC,GAE9F,WAAAC,CAAYV,GACR,IAAIW,EAAIC,EACR,MAAMjC,EA1DH,CAAEoN,WAAOtM,EAAW0F,cAAe,GAAIC,UAAW,KAgErD,OALAzG,EAAQoN,WAA0BtM,IAAjBO,EAAO+L,OAAwC,OAAjB/L,EAAO+L,MAChDiC,GAAuBtN,YAAYV,EAAO+L,YAC1CtM,EACNd,EAAQwG,cAAgD,QAA/BxE,EAAKX,EAAOmF,qBAAkC,IAAPxE,EAAgBA,EAAK,GACrFhC,EAAQyG,UAAwC,QAA3BxE,EAAKZ,EAAOoF,iBAA8B,IAAPxE,EAAgBA,EAAK,IACtEjC,CACX,GAEG,MAAMyP,GACT,WAAAC,CAAYC,GACRC,KAAKD,IAAMA,EACXC,KAAKC,QAAUD,KAAKC,QAAQC,KAAKF,MACjCA,KAAKG,OAASH,KAAKG,OAAOD,KAAKF,MAC/BA,KAAKI,aAAeJ,KAAKI,aAAaF,KAAKF,MAC3CA,KAAKK,qBAAuBL,KAAKK,qBAAqBH,KAAKF,MAC3DA,KAAKM,oBAAsBN,KAAKM,oBAAoBJ,KAAKF,MACzDA,KAAKO,YAAcP,KAAKO,YAAYL,KAAKF,MACzCA,KAAKQ,aAAeR,KAAKQ,aAAaN,KAAKF,MAC3CA,KAAKS,kBAAoBT,KAAKS,kBAAkBP,KAAKF,MACrDA,KAAKU,sBAAwBV,KAAKU,sBAAsBR,KAAKF,MAC7DA,KAAKW,OAASX,KAAKW,OAAOT,KAAKF,MAC/BA,KAAKY,UAAYZ,KAAKY,UAAUV,KAAKF,MACrCA,KAAKa,YAAcb,KAAKa,YAAYX,KAAKF,MACzCA,KAAKc,oBAAsBd,KAAKc,oBAAoBZ,KAAKF,MACzDA,KAAKe,gBAAkBf,KAAKe,gBAAgBb,KAAKF,MACjDA,KAAKgB,aAAehB,KAAKgB,aAAad,KAAKF,MAC3CA,KAAKiB,gBAAkBjB,KAAKiB,gBAAgBf,KAAKF,MACjDA,KAAKkB,aAAelB,KAAKkB,aAAahB,KAAKF,MAC3CA,KAAKmB,OAASnB,KAAKmB,OAAOjB,KAAKF,MAC/BA,KAAKoB,SAAWpB,KAAKoB,SAASlB,KAAKF,MACnCA,KAAKqB,aAAerB,KAAKqB,aAAanB,KAAKF,MAC3CA,KAAKsB,eAAiBtB,KAAKsB,eAAepB,KAAKF,MAC/CA,KAAKuB,qBAAuBvB,KAAKuB,qBAAqBrB,KAAKF,MAC3DA,KAAKwB,qBAAuBxB,KAAKwB,qBAAqBtB,KAAKF,MAC3DA,KAAKyB,cAAgBzB,KAAKyB,cAAcvB,KAAKF,MAC7CA,KAAK0B,oBAAsB1B,KAAK0B,oBAAoBxB,KAAKF,KAC7D,CACA,OAAAC,CAAQ0B,EAASC,GACb,OAAO5B,KAAKD,IAAI8B,MAAMC,GAA2C5R,EAAeiC,YAAYwP,GAAUC,EAC1G,CACA,MAAAzB,CAAOwB,EAASC,GACZ,OAAO5B,KAAKD,IAAI8B,MAAME,GAA0CzL,EAAcnE,YAAYwP,GAAUC,EACxG,CACA,YAAAxB,CAAauB,EAASC,GAClB,OAAO5B,KAAKD,IAAIiC,OAAOC,GAAgDxL,EAAoBtE,YAAYwP,GAAUC,EACrH,CACA,oBAAAvB,CAAqBsB,EAASC,GAC1B,OAAO5B,KAAKD,IAAI8B,MAAMK,GAAwDpL,EAA4B3E,YAAYwP,GAAUC,EACpI,CACA,mBAAAtB,CAAoBqB,EAASC,GACzB,OAAO5B,KAAKD,IAAI8B,MAAMM,GAAuDrK,EAA2B3F,YAAYwP,GAAUC,EAClI,CACA,WAAArB,CAAYoB,EAASC,GACjB,OAAO5B,KAAKD,IAAI8B,MAAMO,GAA+CpK,EAAmB7F,YAAYwP,GAAUC,EAClH,CACA,YAAApB,CAAamB,EAASC,GAClB,OAAO5B,KAAKD,IAAI8B,MAAMQ,GAAgD3J,EAAoBvG,YAAYwP,GAAUC,EACpH,CACA,iBAAAnB,CAAkBkB,EAASC,GACvB,OAAO5B,KAAKD,IAAIiC,OAAOM,GAAqDxJ,EAAyB3G,YAAYwP,GAAUC,EAC/H,CACA,qBAAAlB,CAAsBiB,EAASC,GAC3B,OAAO5B,KAAKD,IAAIiC,OAAOO,GAAyDvJ,EAA6B7G,YAAYwP,GAAUC,EACvI,CACA,MAAAjB,CAAOgB,EAASC,GACZ,OAAO5B,KAAKD,IAAI8B,MAAMW,GAA0ClJ,EAAcnH,YAAYwP,GAAUC,EACxG,CACA,SAAAhB,CAAUe,EAASC,GACf,OAAO5B,KAAKD,IAAI8B,MAAMY,GAA6ClH,EAAiBpJ,YAAYwP,GAAUC,EAC9G,CACA,WAAAf,CAAYc,EAASC,GACjB,OAAO5B,KAAKD,IAAI8B,MAAMa,GAA+CxG,EAAmB/J,YAAYwP,GAAUC,EAClH,CACA,mBAAAd,CAAoBa,EAASC,GACzB,OAAO5B,KAAKD,IAAI8B,MAAMc,GAAuDrG,EAA2BnK,YAAYwP,GAAUC,EAClI,CACA,eAAAb,CAAgBY,EAASC,GACrB,OAAO5B,KAAKD,IAAI8B,MAAMe,GAAmDpG,EAAuBrK,YAAYwP,GAAUC,EAC1H,CACA,YAAAZ,CAAaW,EAASC,GAClB,OAAO5B,KAAKD,IAAI8B,MAAMgB,GAAgDhG,GAAoB1K,YAAYwP,GAAUC,EACpH,CACA,eAAAX,CAAgBU,EAASC,GACrB,OAAO5B,KAAKD,IAAIiC,OAAOc,GAAmD5F,GAAuB/K,YAAYwP,GAAUC,EAC3H,CACA,YAAAV,CAAaS,EAASC,GAClB,OAAO5B,KAAKD,IAAIiC,OAAOe,GAAgDzF,GAAoBnL,YAAYwP,GAAUC,EACrH,CACA,MAAAT,CAAOQ,EAASC,GACZ,OAAO5B,KAAKD,IAAI8B,MAAMmB,GAA0CvF,GAActL,YAAYwP,GAAUC,EACxG,CACA,QAAAR,CAASO,EAASC,GACd,OAAO5B,KAAKD,IAAI8B,MAAMoB,GAA4CvE,GAAgBvM,YAAYwP,GAAUC,EAC5G,CACA,YAAAP,CAAaM,EAASC,GAClB,OAAO5B,KAAKD,IAAIiC,OAAOkB,GAAgDtE,GAAoBzM,YAAYwP,GAAUC,EACrH,CACA,cAAAN,CAAeK,EAASC,GACpB,OAAO5B,KAAKD,IAAIiC,OAAOmB,GAAkDpE,GAAsB5M,YAAYwP,GAAUC,EACzH,CACA,oBAAAL,CAAqBI,EAASC,GAC1B,OAAO5B,KAAKD,IAAI8B,MAAMuB,GAAwDnE,GAA4B9M,YAAYwP,GAAUC,EACpI,CACA,oBAAAJ,CAAqBG,EAASC,GAC1B,OAAO5B,KAAKD,IAAI8B,MAAMwB,GAAwDlE,GAA4BhN,YAAYwP,GAAUC,EACpI,CACA,aAAAH,CAAcE,EAASC,GACnB,OAAO5B,KAAKD,IAAI8B,MAAMyB,GAAiDjE,GAAqBlN,YAAYwP,GAAUC,EACtH,CACA,mBAAAF,CAAoBC,EAASC,GACzB,OAAO5B,KAAKD,IAAIiC,OAAOuB,GAAuD5D,GAA2BxN,YAAYwP,GAAUC,EACnI,EAEG,MAAM4B,GAAqC,CAC9CC,YAAa,oEAEJ3B,GAA4C,CACrD4B,WAAY,UACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAO7T,EAAeC,OAAO6P,MAAMgE,QACvC,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQ7R,EAAgB1B,OAAOsT,GACrC,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKrC,GAA2C,CACpD2B,WAAY,SACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOzN,EAAcnG,OAAO6P,MAAMgE,QACtC,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQ7N,EAAe1F,OAAOsT,GACpC,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKnC,GAAiD,CAC1DyB,WAAY,eACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOtN,EAAoBtG,OAAO6P,MAAMgE,QAC5C,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQzN,EAAqB9F,OAAOsT,GAC1C,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKlC,GAAyD,CAClEwB,WAAY,uBACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOjN,EAA4B3G,OAAO6P,MAAMgE,QACpD,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQlN,EAA6BrG,OAAOsT,GAClD,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKjC,GAAwD,CACjEuB,WAAY,sBACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOjM,EAA2B3H,OAAO6P,MAAMgE,QACnD,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQrM,EAA4BlH,OAAOsT,GACjD,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKhC,GAAgD,CACzDsB,WAAY,cACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAO/L,EAAmB7H,OAAO6P,MAAMgE,QAC3C,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQnM,EAAoBpH,OAAOsT,GACzC,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGK/B,GAAiD,CAC1DqB,WAAY,eACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOrL,EAAoBvI,OAAO6P,MAAMgE,QAC5C,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQzL,EAAqB9H,OAAOsT,GAC1C,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGK9B,GAAsD,CAC/DoB,WAAY,oBACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOjL,EAAyB3I,OAAO6P,MAAMgE,QACjD,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQrL,EAA0BlI,OAAOsT,GAC/C,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGK7B,GAA0D,CACnEmB,WAAY,wBACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAO/K,EAA6B7I,OAAO6P,MAAMgE,QACrD,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQnL,EAA8BpI,OAAOsT,GACnD,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGK5B,GAA2C,CACpDkB,WAAY,SACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOzK,EAAcnJ,OAAO6P,MAAMgE,QACtC,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQnK,EAAepJ,OAAOsT,GACpC,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGK3B,GAA8C,CACvDiB,WAAY,YACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOxI,EAAiBpL,OAAO6P,MAAMgE,QACzC,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQzI,EAAkB9K,OAAOsT,GACvC,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGK1B,GAAgD,CACzDgB,WAAY,cACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAO7H,EAAmB/L,OAAO6P,MAAMgE,QAC3C,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQjI,EAAoBtL,OAAOsT,GACzC,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKzB,GAAwD,CACjEe,WAAY,sBACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOzH,EAA2BnM,OAAO6P,MAAMgE,QACnD,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQ7H,EAA4B1L,OAAOsT,GACjD,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKxB,GAAoD,CAC7Dc,WAAY,kBACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOvH,EAAuBrM,OAAO6P,MAAMgE,QAC/C,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQ3H,EAAwB5L,OAAOsT,GAC7C,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKvB,GAAiD,CAC1Da,WAAY,eACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOlH,GAAoB1M,OAAO6P,MAAMgE,QAC5C,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQtH,GAAqBjM,OAAOsT,GAC1C,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKtB,GAAoD,CAC7DY,WAAY,kBACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAO7G,GAAuB/M,OAAO6P,MAAMgE,QAC/C,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQhH,GAAwBvM,OAAOsT,GAC7C,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKrB,GAAiD,CAC1DW,WAAY,eACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOzG,GAAoBnN,OAAO6P,MAAMgE,QAC5C,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQ7G,GAAqB1M,OAAOsT,GAC1C,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKpB,GAA2C,CACpDU,WAAY,SACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOtG,GAActN,OAAO6P,MAAMgE,QACtC,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQxG,GAAe/M,OAAOsT,GACpC,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKnB,GAA6C,CACtDS,WAAY,WACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOrF,GAAgBvO,OAAO6P,MAAMgE,QACxC,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQzF,GAAiB9N,OAAOsT,GACtC,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKlB,GAAiD,CAC1DQ,WAAY,eACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOnF,GAAoBzO,OAAO6P,MAAMgE,QAC5C,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQvF,GAAqBhO,OAAOsT,GAC1C,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKjB,GAAmD,CAC5DO,WAAY,iBACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOhF,GAAsB5O,OAAO6P,MAAMgE,QAC9C,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQpF,GAAuBnO,OAAOsT,GAC5C,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKhB,GAAyD,CAClEM,WAAY,uBACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAO9E,GAA4B9O,OAAO6P,MAAMgE,QACpD,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQlF,GAA6BrO,OAAOsT,GAClD,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKf,GAAyD,CAClEK,WAAY,uBACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAO5E,GAA4BhP,OAAO6P,MAAMgE,QACpD,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQhF,GAA6BvO,OAAOsT,GAClD,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKd,GAAkD,CAC3DI,WAAY,gBACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAO1E,GAAqBlP,OAAO6P,MAAMgE,QAC7C,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQ5E,GAAsB3O,OAAOsT,GAC3C,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGKb,GAAwD,CACjEG,WAAY,sBACZC,QAASH,GACTI,eAAe,EACfC,gBAAgB,EAChBC,YAAa,CACT,eAAAC,GACI,OAAOpE,GAA2BxP,OAAO6P,MAAMgE,QACnD,GAEJC,aAAc,CACV,iBAAAC,CAAkBC,GACd,MAAMC,EAAQxE,GAA4B/O,OAAOsT,GACjD,OAAOE,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGF,GAAQ,CAAEG,SAAQ,IAC1CH,GAEnB,IAGD,MAAMI,GACT,WAAA1E,CAAY2E,EAAMC,GACd1E,KAAKyE,KAAOA,EACZzE,KAAK0E,QAAUA,CACnB,CACA,KAAA7C,CAAM8C,EAAYC,EAAUhD,GACxB,IAAIxP,EACJ,MAAMuP,EAAU0C,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGM,GAAWD,EAAWb,aAChEe,EAAwBjD,GAAY5B,KAAK0E,QAAQ9C,SACjD,IAAI,EAAAkD,eAAeT,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAA2B,QAAvBlS,EAAK4N,KAAK0E,eAA4B,IAAPtS,OAAgB,EAASA,EAAGwP,SAASmD,YAA0B,OAAbnD,QAAkC,IAAbA,OAAsB,EAASA,EAASmD,aAClMnD,GAAY5B,KAAK0E,QAAQ9C,SAC/B,OAAO,IAAIoD,SAAQ,CAACC,EAASC,KACzB,EAAAC,KAAKtD,MAAM8C,EAAY,CACnBhD,UACA8C,KAAMzE,KAAKyE,KACX7C,SAAUiD,EACVO,UAAWpF,KAAK0E,QAAQU,UACxBC,MAAOrF,KAAK0E,QAAQW,MACpBC,MAAO,SAAUC,GACb,GAAIA,EAASC,SAAW,EAAAL,KAAKM,KAAKC,GAC9BT,EAAQM,EAASnV,QAAQmU,gBAExB,CACD,MAAMoB,EAAM,IAAIC,GAAaL,EAASM,cAAeN,EAASC,OAAQD,EAASO,UAC/EZ,EAAOS,EACX,CACJ,GACF,GAEV,CACA,MAAA3D,CAAO2C,EAAYC,EAAUhD,GACzB,IAAIxP,EACJ,MAAM2T,EAAgB/F,KAAK0E,QAAQsB,oBAAsB,GAEnDrE,EAAU0C,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGM,GAAWD,EAAWb,aAChEe,EAAwBjD,GAAY5B,KAAK0E,QAAQ9C,SACjD,IAAI,EAAAkD,eAAeT,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAA2B,QAAvBlS,EAAK4N,KAAK0E,eAA4B,IAAPtS,OAAgB,EAASA,EAAGwP,SAASmD,YAA0B,OAAbnD,QAAkC,IAAbA,OAAsB,EAASA,EAASmD,aAClMnD,GAAY5B,KAAK0E,QAAQ9C,SAC/B,OAAO,IAAI,KAAYqE,IACnB,MAAMC,EAAW,KACb,MAAMC,EAAS,EAAAhB,KAAKnD,OAAO2C,EAAY,CACnCF,KAAMzE,KAAKyE,KACX9C,UACAyD,UAAWpF,KAAK0E,QAAQ0B,oBAAsBpG,KAAK0E,QAAQU,UAC3DxD,SAAUiD,EACVQ,MAAOrF,KAAK0E,QAAQW,MACpBgB,UAAYxO,GAASoO,EAASpO,KAAKA,GACnCyN,MAAO,CAACgB,EAAMlW,EAAS0V,KACnB,GAAa,IAATQ,EACAL,EAASM,gBAER,GAAIR,EAAcS,SAASF,GAC5BG,WAAWP,EAnBF,SAqBR,CACD,MAAMP,EAAM,IAAIe,MAAMtW,GACtBuV,EAAIW,KAAOA,EACXX,EAAI/D,SAAWkE,EACfG,EAASU,MAAMhB,EACnB,KAGRM,EAASW,KAAI,IAAMT,EAAOU,SAC7B,EACDX,GAAU,IACXY,MAAK,SACZ,EAEJ,IAAIC,GAAoB,MACpB,GAA0B,qBAAfC,WACP,OAAOA,WAEX,GAAoB,qBAATC,KACP,OAAOA,KAEX,GAAsB,qBAAXC,OACP,OAAOA,OAEX,GAAsB,qBAAXC,OACP,OAAOA,OAEX,KAAM,gCACT,EAduB,GAexB,SAASvR,GAAawR,GAClB,OAAOA,EAAKC,UAChB,CAKA,SAAS3V,GAAM0S,GACX,OAAiB,OAAVA,QAA4BlT,IAAVkT,CAC7B,CANI,OAASkD,OAAS,MAClB,OAASA,KAAO,IAChB,eAKG,MAAM1B,WAAqBmB,GAAkBL,MAChD,WAAA5G,CAAY1P,EAASkW,EAAM1E,GACvB2F,MAAMnX,GACN4P,KAAKsG,KAAOA,EACZtG,KAAK4B,SAAWA,CACpB,E","sources":["webpack://_N_E/./node_modules/@injectivelabs/indexer-proto-ts/esm/injective_derivative_exchange_rpc.js"],"sourcesContent":["/* eslint-disable */\nimport { grpc } from \"@injectivelabs/grpc-web\";\nimport { BrowserHeaders } from \"browser-headers\";\nimport Long from \"long\";\nimport _m0 from \"protobufjs/minimal\";\nimport { Observable } from \"rxjs\";\nimport { share } from \"rxjs/operators\";\nexport const protobufPackage = \"injective_derivative_exchange_rpc\";\nfunction createBaseMarketsRequest() {\n    return { marketStatus: \"\", quoteDenom: \"\", marketStatuses: [] };\n}\nexport const MarketsRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketStatus !== \"\") {\n            writer.uint32(10).string(message.marketStatus);\n        }\n        if (message.quoteDenom !== \"\") {\n            writer.uint32(18).string(message.quoteDenom);\n        }\n        for (const v of message.marketStatuses) {\n            writer.uint32(26).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMarketsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketStatus = reader.string();\n                    break;\n                case 2:\n                    message.quoteDenom = reader.string();\n                    break;\n                case 3:\n                    message.marketStatuses.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketStatus: isSet(object.marketStatus) ? String(object.marketStatus) : \"\",\n            quoteDenom: isSet(object.quoteDenom) ? String(object.quoteDenom) : \"\",\n            marketStatuses: Array.isArray(object === null || object === void 0 ? void 0 : object.marketStatuses) ? object.marketStatuses.map((e) => String(e)) : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketStatus !== undefined && (obj.marketStatus = message.marketStatus);\n        message.quoteDenom !== undefined && (obj.quoteDenom = message.quoteDenom);\n        if (message.marketStatuses) {\n            obj.marketStatuses = message.marketStatuses.map((e) => e);\n        }\n        else {\n            obj.marketStatuses = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return MarketsRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseMarketsRequest();\n        message.marketStatus = (_a = object.marketStatus) !== null && _a !== void 0 ? _a : \"\";\n        message.quoteDenom = (_b = object.quoteDenom) !== null && _b !== void 0 ? _b : \"\";\n        message.marketStatuses = ((_c = object.marketStatuses) === null || _c === void 0 ? void 0 : _c.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseMarketsResponse() {\n    return { markets: [] };\n}\nexport const MarketsResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.markets) {\n            DerivativeMarketInfo.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMarketsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.markets.push(DerivativeMarketInfo.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            markets: Array.isArray(object === null || object === void 0 ? void 0 : object.markets) ? object.markets.map((e) => DerivativeMarketInfo.fromJSON(e)) : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.markets) {\n            obj.markets = message.markets.map((e) => e ? DerivativeMarketInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.markets = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return MarketsResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseMarketsResponse();\n        message.markets = ((_a = object.markets) === null || _a === void 0 ? void 0 : _a.map((e) => DerivativeMarketInfo.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseDerivativeMarketInfo() {\n    return {\n        marketId: \"\",\n        marketStatus: \"\",\n        ticker: \"\",\n        oracleBase: \"\",\n        oracleQuote: \"\",\n        oracleType: \"\",\n        oracleScaleFactor: 0,\n        initialMarginRatio: \"\",\n        maintenanceMarginRatio: \"\",\n        quoteDenom: \"\",\n        quoteTokenMeta: undefined,\n        makerFeeRate: \"\",\n        takerFeeRate: \"\",\n        serviceProviderFee: \"\",\n        isPerpetual: false,\n        minPriceTickSize: \"\",\n        minQuantityTickSize: \"\",\n        perpetualMarketInfo: undefined,\n        perpetualMarketFunding: undefined,\n        expiryFuturesMarketInfo: undefined,\n    };\n}\nexport const DerivativeMarketInfo = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.marketStatus !== \"\") {\n            writer.uint32(18).string(message.marketStatus);\n        }\n        if (message.ticker !== \"\") {\n            writer.uint32(26).string(message.ticker);\n        }\n        if (message.oracleBase !== \"\") {\n            writer.uint32(34).string(message.oracleBase);\n        }\n        if (message.oracleQuote !== \"\") {\n            writer.uint32(42).string(message.oracleQuote);\n        }\n        if (message.oracleType !== \"\") {\n            writer.uint32(50).string(message.oracleType);\n        }\n        if (message.oracleScaleFactor !== 0) {\n            writer.uint32(56).uint32(message.oracleScaleFactor);\n        }\n        if (message.initialMarginRatio !== \"\") {\n            writer.uint32(66).string(message.initialMarginRatio);\n        }\n        if (message.maintenanceMarginRatio !== \"\") {\n            writer.uint32(74).string(message.maintenanceMarginRatio);\n        }\n        if (message.quoteDenom !== \"\") {\n            writer.uint32(82).string(message.quoteDenom);\n        }\n        if (message.quoteTokenMeta !== undefined) {\n            TokenMeta.encode(message.quoteTokenMeta, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.makerFeeRate !== \"\") {\n            writer.uint32(98).string(message.makerFeeRate);\n        }\n        if (message.takerFeeRate !== \"\") {\n            writer.uint32(106).string(message.takerFeeRate);\n        }\n        if (message.serviceProviderFee !== \"\") {\n            writer.uint32(114).string(message.serviceProviderFee);\n        }\n        if (message.isPerpetual === true) {\n            writer.uint32(120).bool(message.isPerpetual);\n        }\n        if (message.minPriceTickSize !== \"\") {\n            writer.uint32(130).string(message.minPriceTickSize);\n        }\n        if (message.minQuantityTickSize !== \"\") {\n            writer.uint32(138).string(message.minQuantityTickSize);\n        }\n        if (message.perpetualMarketInfo !== undefined) {\n            PerpetualMarketInfo.encode(message.perpetualMarketInfo, writer.uint32(146).fork()).ldelim();\n        }\n        if (message.perpetualMarketFunding !== undefined) {\n            PerpetualMarketFunding.encode(message.perpetualMarketFunding, writer.uint32(154).fork()).ldelim();\n        }\n        if (message.expiryFuturesMarketInfo !== undefined) {\n            ExpiryFuturesMarketInfo.encode(message.expiryFuturesMarketInfo, writer.uint32(162).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDerivativeMarketInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.marketStatus = reader.string();\n                    break;\n                case 3:\n                    message.ticker = reader.string();\n                    break;\n                case 4:\n                    message.oracleBase = reader.string();\n                    break;\n                case 5:\n                    message.oracleQuote = reader.string();\n                    break;\n                case 6:\n                    message.oracleType = reader.string();\n                    break;\n                case 7:\n                    message.oracleScaleFactor = reader.uint32();\n                    break;\n                case 8:\n                    message.initialMarginRatio = reader.string();\n                    break;\n                case 9:\n                    message.maintenanceMarginRatio = reader.string();\n                    break;\n                case 10:\n                    message.quoteDenom = reader.string();\n                    break;\n                case 11:\n                    message.quoteTokenMeta = TokenMeta.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.makerFeeRate = reader.string();\n                    break;\n                case 13:\n                    message.takerFeeRate = reader.string();\n                    break;\n                case 14:\n                    message.serviceProviderFee = reader.string();\n                    break;\n                case 15:\n                    message.isPerpetual = reader.bool();\n                    break;\n                case 16:\n                    message.minPriceTickSize = reader.string();\n                    break;\n                case 17:\n                    message.minQuantityTickSize = reader.string();\n                    break;\n                case 18:\n                    message.perpetualMarketInfo = PerpetualMarketInfo.decode(reader, reader.uint32());\n                    break;\n                case 19:\n                    message.perpetualMarketFunding = PerpetualMarketFunding.decode(reader, reader.uint32());\n                    break;\n                case 20:\n                    message.expiryFuturesMarketInfo = ExpiryFuturesMarketInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            marketStatus: isSet(object.marketStatus) ? String(object.marketStatus) : \"\",\n            ticker: isSet(object.ticker) ? String(object.ticker) : \"\",\n            oracleBase: isSet(object.oracleBase) ? String(object.oracleBase) : \"\",\n            oracleQuote: isSet(object.oracleQuote) ? String(object.oracleQuote) : \"\",\n            oracleType: isSet(object.oracleType) ? String(object.oracleType) : \"\",\n            oracleScaleFactor: isSet(object.oracleScaleFactor) ? Number(object.oracleScaleFactor) : 0,\n            initialMarginRatio: isSet(object.initialMarginRatio) ? String(object.initialMarginRatio) : \"\",\n            maintenanceMarginRatio: isSet(object.maintenanceMarginRatio) ? String(object.maintenanceMarginRatio) : \"\",\n            quoteDenom: isSet(object.quoteDenom) ? String(object.quoteDenom) : \"\",\n            quoteTokenMeta: isSet(object.quoteTokenMeta) ? TokenMeta.fromJSON(object.quoteTokenMeta) : undefined,\n            makerFeeRate: isSet(object.makerFeeRate) ? String(object.makerFeeRate) : \"\",\n            takerFeeRate: isSet(object.takerFeeRate) ? String(object.takerFeeRate) : \"\",\n            serviceProviderFee: isSet(object.serviceProviderFee) ? String(object.serviceProviderFee) : \"\",\n            isPerpetual: isSet(object.isPerpetual) ? Boolean(object.isPerpetual) : false,\n            minPriceTickSize: isSet(object.minPriceTickSize) ? String(object.minPriceTickSize) : \"\",\n            minQuantityTickSize: isSet(object.minQuantityTickSize) ? String(object.minQuantityTickSize) : \"\",\n            perpetualMarketInfo: isSet(object.perpetualMarketInfo)\n                ? PerpetualMarketInfo.fromJSON(object.perpetualMarketInfo)\n                : undefined,\n            perpetualMarketFunding: isSet(object.perpetualMarketFunding)\n                ? PerpetualMarketFunding.fromJSON(object.perpetualMarketFunding)\n                : undefined,\n            expiryFuturesMarketInfo: isSet(object.expiryFuturesMarketInfo)\n                ? ExpiryFuturesMarketInfo.fromJSON(object.expiryFuturesMarketInfo)\n                : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.marketStatus !== undefined && (obj.marketStatus = message.marketStatus);\n        message.ticker !== undefined && (obj.ticker = message.ticker);\n        message.oracleBase !== undefined && (obj.oracleBase = message.oracleBase);\n        message.oracleQuote !== undefined && (obj.oracleQuote = message.oracleQuote);\n        message.oracleType !== undefined && (obj.oracleType = message.oracleType);\n        message.oracleScaleFactor !== undefined && (obj.oracleScaleFactor = Math.round(message.oracleScaleFactor));\n        message.initialMarginRatio !== undefined && (obj.initialMarginRatio = message.initialMarginRatio);\n        message.maintenanceMarginRatio !== undefined && (obj.maintenanceMarginRatio = message.maintenanceMarginRatio);\n        message.quoteDenom !== undefined && (obj.quoteDenom = message.quoteDenom);\n        message.quoteTokenMeta !== undefined &&\n            (obj.quoteTokenMeta = message.quoteTokenMeta ? TokenMeta.toJSON(message.quoteTokenMeta) : undefined);\n        message.makerFeeRate !== undefined && (obj.makerFeeRate = message.makerFeeRate);\n        message.takerFeeRate !== undefined && (obj.takerFeeRate = message.takerFeeRate);\n        message.serviceProviderFee !== undefined && (obj.serviceProviderFee = message.serviceProviderFee);\n        message.isPerpetual !== undefined && (obj.isPerpetual = message.isPerpetual);\n        message.minPriceTickSize !== undefined && (obj.minPriceTickSize = message.minPriceTickSize);\n        message.minQuantityTickSize !== undefined && (obj.minQuantityTickSize = message.minQuantityTickSize);\n        message.perpetualMarketInfo !== undefined && (obj.perpetualMarketInfo = message.perpetualMarketInfo\n            ? PerpetualMarketInfo.toJSON(message.perpetualMarketInfo)\n            : undefined);\n        message.perpetualMarketFunding !== undefined && (obj.perpetualMarketFunding = message.perpetualMarketFunding\n            ? PerpetualMarketFunding.toJSON(message.perpetualMarketFunding)\n            : undefined);\n        message.expiryFuturesMarketInfo !== undefined && (obj.expiryFuturesMarketInfo = message.expiryFuturesMarketInfo\n            ? ExpiryFuturesMarketInfo.toJSON(message.expiryFuturesMarketInfo)\n            : undefined);\n        return obj;\n    },\n    create(base) {\n        return DerivativeMarketInfo.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n        const message = createBaseDerivativeMarketInfo();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketStatus = (_b = object.marketStatus) !== null && _b !== void 0 ? _b : \"\";\n        message.ticker = (_c = object.ticker) !== null && _c !== void 0 ? _c : \"\";\n        message.oracleBase = (_d = object.oracleBase) !== null && _d !== void 0 ? _d : \"\";\n        message.oracleQuote = (_e = object.oracleQuote) !== null && _e !== void 0 ? _e : \"\";\n        message.oracleType = (_f = object.oracleType) !== null && _f !== void 0 ? _f : \"\";\n        message.oracleScaleFactor = (_g = object.oracleScaleFactor) !== null && _g !== void 0 ? _g : 0;\n        message.initialMarginRatio = (_h = object.initialMarginRatio) !== null && _h !== void 0 ? _h : \"\";\n        message.maintenanceMarginRatio = (_j = object.maintenanceMarginRatio) !== null && _j !== void 0 ? _j : \"\";\n        message.quoteDenom = (_k = object.quoteDenom) !== null && _k !== void 0 ? _k : \"\";\n        message.quoteTokenMeta = (object.quoteTokenMeta !== undefined && object.quoteTokenMeta !== null)\n            ? TokenMeta.fromPartial(object.quoteTokenMeta)\n            : undefined;\n        message.makerFeeRate = (_l = object.makerFeeRate) !== null && _l !== void 0 ? _l : \"\";\n        message.takerFeeRate = (_m = object.takerFeeRate) !== null && _m !== void 0 ? _m : \"\";\n        message.serviceProviderFee = (_o = object.serviceProviderFee) !== null && _o !== void 0 ? _o : \"\";\n        message.isPerpetual = (_p = object.isPerpetual) !== null && _p !== void 0 ? _p : false;\n        message.minPriceTickSize = (_q = object.minPriceTickSize) !== null && _q !== void 0 ? _q : \"\";\n        message.minQuantityTickSize = (_r = object.minQuantityTickSize) !== null && _r !== void 0 ? _r : \"\";\n        message.perpetualMarketInfo = (object.perpetualMarketInfo !== undefined && object.perpetualMarketInfo !== null)\n            ? PerpetualMarketInfo.fromPartial(object.perpetualMarketInfo)\n            : undefined;\n        message.perpetualMarketFunding =\n            (object.perpetualMarketFunding !== undefined && object.perpetualMarketFunding !== null)\n                ? PerpetualMarketFunding.fromPartial(object.perpetualMarketFunding)\n                : undefined;\n        message.expiryFuturesMarketInfo =\n            (object.expiryFuturesMarketInfo !== undefined && object.expiryFuturesMarketInfo !== null)\n                ? ExpiryFuturesMarketInfo.fromPartial(object.expiryFuturesMarketInfo)\n                : undefined;\n        return message;\n    },\n};\nfunction createBaseTokenMeta() {\n    return { name: \"\", address: \"\", symbol: \"\", logo: \"\", decimals: 0, updatedAt: \"0\" };\n}\nexport const TokenMeta = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.name !== \"\") {\n            writer.uint32(10).string(message.name);\n        }\n        if (message.address !== \"\") {\n            writer.uint32(18).string(message.address);\n        }\n        if (message.symbol !== \"\") {\n            writer.uint32(26).string(message.symbol);\n        }\n        if (message.logo !== \"\") {\n            writer.uint32(34).string(message.logo);\n        }\n        if (message.decimals !== 0) {\n            writer.uint32(40).sint32(message.decimals);\n        }\n        if (message.updatedAt !== \"0\") {\n            writer.uint32(48).sint64(message.updatedAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTokenMeta();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.address = reader.string();\n                    break;\n                case 3:\n                    message.symbol = reader.string();\n                    break;\n                case 4:\n                    message.logo = reader.string();\n                    break;\n                case 5:\n                    message.decimals = reader.sint32();\n                    break;\n                case 6:\n                    message.updatedAt = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            name: isSet(object.name) ? String(object.name) : \"\",\n            address: isSet(object.address) ? String(object.address) : \"\",\n            symbol: isSet(object.symbol) ? String(object.symbol) : \"\",\n            logo: isSet(object.logo) ? String(object.logo) : \"\",\n            decimals: isSet(object.decimals) ? Number(object.decimals) : 0,\n            updatedAt: isSet(object.updatedAt) ? String(object.updatedAt) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.name !== undefined && (obj.name = message.name);\n        message.address !== undefined && (obj.address = message.address);\n        message.symbol !== undefined && (obj.symbol = message.symbol);\n        message.logo !== undefined && (obj.logo = message.logo);\n        message.decimals !== undefined && (obj.decimals = Math.round(message.decimals));\n        message.updatedAt !== undefined && (obj.updatedAt = message.updatedAt);\n        return obj;\n    },\n    create(base) {\n        return TokenMeta.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f;\n        const message = createBaseTokenMeta();\n        message.name = (_a = object.name) !== null && _a !== void 0 ? _a : \"\";\n        message.address = (_b = object.address) !== null && _b !== void 0 ? _b : \"\";\n        message.symbol = (_c = object.symbol) !== null && _c !== void 0 ? _c : \"\";\n        message.logo = (_d = object.logo) !== null && _d !== void 0 ? _d : \"\";\n        message.decimals = (_e = object.decimals) !== null && _e !== void 0 ? _e : 0;\n        message.updatedAt = (_f = object.updatedAt) !== null && _f !== void 0 ? _f : \"0\";\n        return message;\n    },\n};\nfunction createBasePerpetualMarketInfo() {\n    return { hourlyFundingRateCap: \"\", hourlyInterestRate: \"\", nextFundingTimestamp: \"0\", fundingInterval: \"0\" };\n}\nexport const PerpetualMarketInfo = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.hourlyFundingRateCap !== \"\") {\n            writer.uint32(10).string(message.hourlyFundingRateCap);\n        }\n        if (message.hourlyInterestRate !== \"\") {\n            writer.uint32(18).string(message.hourlyInterestRate);\n        }\n        if (message.nextFundingTimestamp !== \"0\") {\n            writer.uint32(24).sint64(message.nextFundingTimestamp);\n        }\n        if (message.fundingInterval !== \"0\") {\n            writer.uint32(32).sint64(message.fundingInterval);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerpetualMarketInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.hourlyFundingRateCap = reader.string();\n                    break;\n                case 2:\n                    message.hourlyInterestRate = reader.string();\n                    break;\n                case 3:\n                    message.nextFundingTimestamp = longToString(reader.sint64());\n                    break;\n                case 4:\n                    message.fundingInterval = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            hourlyFundingRateCap: isSet(object.hourlyFundingRateCap) ? String(object.hourlyFundingRateCap) : \"\",\n            hourlyInterestRate: isSet(object.hourlyInterestRate) ? String(object.hourlyInterestRate) : \"\",\n            nextFundingTimestamp: isSet(object.nextFundingTimestamp) ? String(object.nextFundingTimestamp) : \"0\",\n            fundingInterval: isSet(object.fundingInterval) ? String(object.fundingInterval) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.hourlyFundingRateCap !== undefined && (obj.hourlyFundingRateCap = message.hourlyFundingRateCap);\n        message.hourlyInterestRate !== undefined && (obj.hourlyInterestRate = message.hourlyInterestRate);\n        message.nextFundingTimestamp !== undefined && (obj.nextFundingTimestamp = message.nextFundingTimestamp);\n        message.fundingInterval !== undefined && (obj.fundingInterval = message.fundingInterval);\n        return obj;\n    },\n    create(base) {\n        return PerpetualMarketInfo.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBasePerpetualMarketInfo();\n        message.hourlyFundingRateCap = (_a = object.hourlyFundingRateCap) !== null && _a !== void 0 ? _a : \"\";\n        message.hourlyInterestRate = (_b = object.hourlyInterestRate) !== null && _b !== void 0 ? _b : \"\";\n        message.nextFundingTimestamp = (_c = object.nextFundingTimestamp) !== null && _c !== void 0 ? _c : \"0\";\n        message.fundingInterval = (_d = object.fundingInterval) !== null && _d !== void 0 ? _d : \"0\";\n        return message;\n    },\n};\nfunction createBasePerpetualMarketFunding() {\n    return { cumulativeFunding: \"\", cumulativePrice: \"\", lastTimestamp: \"0\" };\n}\nexport const PerpetualMarketFunding = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.cumulativeFunding !== \"\") {\n            writer.uint32(10).string(message.cumulativeFunding);\n        }\n        if (message.cumulativePrice !== \"\") {\n            writer.uint32(18).string(message.cumulativePrice);\n        }\n        if (message.lastTimestamp !== \"0\") {\n            writer.uint32(24).sint64(message.lastTimestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePerpetualMarketFunding();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.cumulativeFunding = reader.string();\n                    break;\n                case 2:\n                    message.cumulativePrice = reader.string();\n                    break;\n                case 3:\n                    message.lastTimestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            cumulativeFunding: isSet(object.cumulativeFunding) ? String(object.cumulativeFunding) : \"\",\n            cumulativePrice: isSet(object.cumulativePrice) ? String(object.cumulativePrice) : \"\",\n            lastTimestamp: isSet(object.lastTimestamp) ? String(object.lastTimestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.cumulativeFunding !== undefined && (obj.cumulativeFunding = message.cumulativeFunding);\n        message.cumulativePrice !== undefined && (obj.cumulativePrice = message.cumulativePrice);\n        message.lastTimestamp !== undefined && (obj.lastTimestamp = message.lastTimestamp);\n        return obj;\n    },\n    create(base) {\n        return PerpetualMarketFunding.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBasePerpetualMarketFunding();\n        message.cumulativeFunding = (_a = object.cumulativeFunding) !== null && _a !== void 0 ? _a : \"\";\n        message.cumulativePrice = (_b = object.cumulativePrice) !== null && _b !== void 0 ? _b : \"\";\n        message.lastTimestamp = (_c = object.lastTimestamp) !== null && _c !== void 0 ? _c : \"0\";\n        return message;\n    },\n};\nfunction createBaseExpiryFuturesMarketInfo() {\n    return { expirationTimestamp: \"0\", settlementPrice: \"\" };\n}\nexport const ExpiryFuturesMarketInfo = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.expirationTimestamp !== \"0\") {\n            writer.uint32(8).sint64(message.expirationTimestamp);\n        }\n        if (message.settlementPrice !== \"\") {\n            writer.uint32(18).string(message.settlementPrice);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseExpiryFuturesMarketInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.expirationTimestamp = longToString(reader.sint64());\n                    break;\n                case 2:\n                    message.settlementPrice = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            expirationTimestamp: isSet(object.expirationTimestamp) ? String(object.expirationTimestamp) : \"0\",\n            settlementPrice: isSet(object.settlementPrice) ? String(object.settlementPrice) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.expirationTimestamp !== undefined && (obj.expirationTimestamp = message.expirationTimestamp);\n        message.settlementPrice !== undefined && (obj.settlementPrice = message.settlementPrice);\n        return obj;\n    },\n    create(base) {\n        return ExpiryFuturesMarketInfo.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseExpiryFuturesMarketInfo();\n        message.expirationTimestamp = (_a = object.expirationTimestamp) !== null && _a !== void 0 ? _a : \"0\";\n        message.settlementPrice = (_b = object.settlementPrice) !== null && _b !== void 0 ? _b : \"\";\n        return message;\n    },\n};\nfunction createBaseMarketRequest() {\n    return { marketId: \"\" };\n}\nexport const MarketRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMarketRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketId: isSet(object.marketId) ? String(object.marketId) : \"\" };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        return obj;\n    },\n    create(base) {\n        return MarketRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseMarketRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        return message;\n    },\n};\nfunction createBaseMarketResponse() {\n    return { market: undefined };\n}\nexport const MarketResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.market !== undefined) {\n            DerivativeMarketInfo.encode(message.market, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseMarketResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.market = DerivativeMarketInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { market: isSet(object.market) ? DerivativeMarketInfo.fromJSON(object.market) : undefined };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.market !== undefined &&\n            (obj.market = message.market ? DerivativeMarketInfo.toJSON(message.market) : undefined);\n        return obj;\n    },\n    create(base) {\n        return MarketResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        const message = createBaseMarketResponse();\n        message.market = (object.market !== undefined && object.market !== null)\n            ? DerivativeMarketInfo.fromPartial(object.market)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseStreamMarketRequest() {\n    return { marketIds: [] };\n}\nexport const StreamMarketRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.marketIds) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamMarketRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [] };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return StreamMarketRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseStreamMarketRequest();\n        message.marketIds = ((_a = object.marketIds) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseStreamMarketResponse() {\n    return { market: undefined, operationType: \"\", timestamp: \"0\" };\n}\nexport const StreamMarketResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.market !== undefined) {\n            DerivativeMarketInfo.encode(message.market, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamMarketResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.market = DerivativeMarketInfo.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            market: isSet(object.market) ? DerivativeMarketInfo.fromJSON(object.market) : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.market !== undefined &&\n            (obj.market = message.market ? DerivativeMarketInfo.toJSON(message.market) : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return StreamMarketResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseStreamMarketResponse();\n        message.market = (object.market !== undefined && object.market !== null)\n            ? DerivativeMarketInfo.fromPartial(object.market)\n            : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nfunction createBaseBinaryOptionsMarketsRequest() {\n    return { marketStatus: \"\", quoteDenom: \"\", skip: \"0\", limit: 0 };\n}\nexport const BinaryOptionsMarketsRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketStatus !== \"\") {\n            writer.uint32(10).string(message.marketStatus);\n        }\n        if (message.quoteDenom !== \"\") {\n            writer.uint32(18).string(message.quoteDenom);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(24).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(32).sint32(message.limit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBinaryOptionsMarketsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketStatus = reader.string();\n                    break;\n                case 2:\n                    message.quoteDenom = reader.string();\n                    break;\n                case 3:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 4:\n                    message.limit = reader.sint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketStatus: isSet(object.marketStatus) ? String(object.marketStatus) : \"\",\n            quoteDenom: isSet(object.quoteDenom) ? String(object.quoteDenom) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketStatus !== undefined && (obj.marketStatus = message.marketStatus);\n        message.quoteDenom !== undefined && (obj.quoteDenom = message.quoteDenom);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        return obj;\n    },\n    create(base) {\n        return BinaryOptionsMarketsRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBaseBinaryOptionsMarketsRequest();\n        message.marketStatus = (_a = object.marketStatus) !== null && _a !== void 0 ? _a : \"\";\n        message.quoteDenom = (_b = object.quoteDenom) !== null && _b !== void 0 ? _b : \"\";\n        message.skip = (_c = object.skip) !== null && _c !== void 0 ? _c : \"0\";\n        message.limit = (_d = object.limit) !== null && _d !== void 0 ? _d : 0;\n        return message;\n    },\n};\nfunction createBaseBinaryOptionsMarketsResponse() {\n    return { markets: [], paging: undefined };\n}\nexport const BinaryOptionsMarketsResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.markets) {\n            BinaryOptionsMarketInfo.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBinaryOptionsMarketsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.markets.push(BinaryOptionsMarketInfo.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            markets: Array.isArray(object === null || object === void 0 ? void 0 : object.markets)\n                ? object.markets.map((e) => BinaryOptionsMarketInfo.fromJSON(e))\n                : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.markets) {\n            obj.markets = message.markets.map((e) => e ? BinaryOptionsMarketInfo.toJSON(e) : undefined);\n        }\n        else {\n            obj.markets = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return BinaryOptionsMarketsResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseBinaryOptionsMarketsResponse();\n        message.markets = ((_a = object.markets) === null || _a === void 0 ? void 0 : _a.map((e) => BinaryOptionsMarketInfo.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseBinaryOptionsMarketInfo() {\n    return {\n        marketId: \"\",\n        marketStatus: \"\",\n        ticker: \"\",\n        oracleSymbol: \"\",\n        oracleProvider: \"\",\n        oracleType: \"\",\n        oracleScaleFactor: 0,\n        expirationTimestamp: \"0\",\n        settlementTimestamp: \"0\",\n        quoteDenom: \"\",\n        quoteTokenMeta: undefined,\n        makerFeeRate: \"\",\n        takerFeeRate: \"\",\n        serviceProviderFee: \"\",\n        minPriceTickSize: \"\",\n        minQuantityTickSize: \"\",\n        settlementPrice: \"\",\n    };\n}\nexport const BinaryOptionsMarketInfo = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.marketStatus !== \"\") {\n            writer.uint32(18).string(message.marketStatus);\n        }\n        if (message.ticker !== \"\") {\n            writer.uint32(26).string(message.ticker);\n        }\n        if (message.oracleSymbol !== \"\") {\n            writer.uint32(34).string(message.oracleSymbol);\n        }\n        if (message.oracleProvider !== \"\") {\n            writer.uint32(42).string(message.oracleProvider);\n        }\n        if (message.oracleType !== \"\") {\n            writer.uint32(50).string(message.oracleType);\n        }\n        if (message.oracleScaleFactor !== 0) {\n            writer.uint32(56).uint32(message.oracleScaleFactor);\n        }\n        if (message.expirationTimestamp !== \"0\") {\n            writer.uint32(64).sint64(message.expirationTimestamp);\n        }\n        if (message.settlementTimestamp !== \"0\") {\n            writer.uint32(72).sint64(message.settlementTimestamp);\n        }\n        if (message.quoteDenom !== \"\") {\n            writer.uint32(82).string(message.quoteDenom);\n        }\n        if (message.quoteTokenMeta !== undefined) {\n            TokenMeta.encode(message.quoteTokenMeta, writer.uint32(90).fork()).ldelim();\n        }\n        if (message.makerFeeRate !== \"\") {\n            writer.uint32(98).string(message.makerFeeRate);\n        }\n        if (message.takerFeeRate !== \"\") {\n            writer.uint32(106).string(message.takerFeeRate);\n        }\n        if (message.serviceProviderFee !== \"\") {\n            writer.uint32(114).string(message.serviceProviderFee);\n        }\n        if (message.minPriceTickSize !== \"\") {\n            writer.uint32(122).string(message.minPriceTickSize);\n        }\n        if (message.minQuantityTickSize !== \"\") {\n            writer.uint32(130).string(message.minQuantityTickSize);\n        }\n        if (message.settlementPrice !== \"\") {\n            writer.uint32(138).string(message.settlementPrice);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBinaryOptionsMarketInfo();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.marketStatus = reader.string();\n                    break;\n                case 3:\n                    message.ticker = reader.string();\n                    break;\n                case 4:\n                    message.oracleSymbol = reader.string();\n                    break;\n                case 5:\n                    message.oracleProvider = reader.string();\n                    break;\n                case 6:\n                    message.oracleType = reader.string();\n                    break;\n                case 7:\n                    message.oracleScaleFactor = reader.uint32();\n                    break;\n                case 8:\n                    message.expirationTimestamp = longToString(reader.sint64());\n                    break;\n                case 9:\n                    message.settlementTimestamp = longToString(reader.sint64());\n                    break;\n                case 10:\n                    message.quoteDenom = reader.string();\n                    break;\n                case 11:\n                    message.quoteTokenMeta = TokenMeta.decode(reader, reader.uint32());\n                    break;\n                case 12:\n                    message.makerFeeRate = reader.string();\n                    break;\n                case 13:\n                    message.takerFeeRate = reader.string();\n                    break;\n                case 14:\n                    message.serviceProviderFee = reader.string();\n                    break;\n                case 15:\n                    message.minPriceTickSize = reader.string();\n                    break;\n                case 16:\n                    message.minQuantityTickSize = reader.string();\n                    break;\n                case 17:\n                    message.settlementPrice = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            marketStatus: isSet(object.marketStatus) ? String(object.marketStatus) : \"\",\n            ticker: isSet(object.ticker) ? String(object.ticker) : \"\",\n            oracleSymbol: isSet(object.oracleSymbol) ? String(object.oracleSymbol) : \"\",\n            oracleProvider: isSet(object.oracleProvider) ? String(object.oracleProvider) : \"\",\n            oracleType: isSet(object.oracleType) ? String(object.oracleType) : \"\",\n            oracleScaleFactor: isSet(object.oracleScaleFactor) ? Number(object.oracleScaleFactor) : 0,\n            expirationTimestamp: isSet(object.expirationTimestamp) ? String(object.expirationTimestamp) : \"0\",\n            settlementTimestamp: isSet(object.settlementTimestamp) ? String(object.settlementTimestamp) : \"0\",\n            quoteDenom: isSet(object.quoteDenom) ? String(object.quoteDenom) : \"\",\n            quoteTokenMeta: isSet(object.quoteTokenMeta) ? TokenMeta.fromJSON(object.quoteTokenMeta) : undefined,\n            makerFeeRate: isSet(object.makerFeeRate) ? String(object.makerFeeRate) : \"\",\n            takerFeeRate: isSet(object.takerFeeRate) ? String(object.takerFeeRate) : \"\",\n            serviceProviderFee: isSet(object.serviceProviderFee) ? String(object.serviceProviderFee) : \"\",\n            minPriceTickSize: isSet(object.minPriceTickSize) ? String(object.minPriceTickSize) : \"\",\n            minQuantityTickSize: isSet(object.minQuantityTickSize) ? String(object.minQuantityTickSize) : \"\",\n            settlementPrice: isSet(object.settlementPrice) ? String(object.settlementPrice) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.marketStatus !== undefined && (obj.marketStatus = message.marketStatus);\n        message.ticker !== undefined && (obj.ticker = message.ticker);\n        message.oracleSymbol !== undefined && (obj.oracleSymbol = message.oracleSymbol);\n        message.oracleProvider !== undefined && (obj.oracleProvider = message.oracleProvider);\n        message.oracleType !== undefined && (obj.oracleType = message.oracleType);\n        message.oracleScaleFactor !== undefined && (obj.oracleScaleFactor = Math.round(message.oracleScaleFactor));\n        message.expirationTimestamp !== undefined && (obj.expirationTimestamp = message.expirationTimestamp);\n        message.settlementTimestamp !== undefined && (obj.settlementTimestamp = message.settlementTimestamp);\n        message.quoteDenom !== undefined && (obj.quoteDenom = message.quoteDenom);\n        message.quoteTokenMeta !== undefined &&\n            (obj.quoteTokenMeta = message.quoteTokenMeta ? TokenMeta.toJSON(message.quoteTokenMeta) : undefined);\n        message.makerFeeRate !== undefined && (obj.makerFeeRate = message.makerFeeRate);\n        message.takerFeeRate !== undefined && (obj.takerFeeRate = message.takerFeeRate);\n        message.serviceProviderFee !== undefined && (obj.serviceProviderFee = message.serviceProviderFee);\n        message.minPriceTickSize !== undefined && (obj.minPriceTickSize = message.minPriceTickSize);\n        message.minQuantityTickSize !== undefined && (obj.minQuantityTickSize = message.minQuantityTickSize);\n        message.settlementPrice !== undefined && (obj.settlementPrice = message.settlementPrice);\n        return obj;\n    },\n    create(base) {\n        return BinaryOptionsMarketInfo.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n        const message = createBaseBinaryOptionsMarketInfo();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketStatus = (_b = object.marketStatus) !== null && _b !== void 0 ? _b : \"\";\n        message.ticker = (_c = object.ticker) !== null && _c !== void 0 ? _c : \"\";\n        message.oracleSymbol = (_d = object.oracleSymbol) !== null && _d !== void 0 ? _d : \"\";\n        message.oracleProvider = (_e = object.oracleProvider) !== null && _e !== void 0 ? _e : \"\";\n        message.oracleType = (_f = object.oracleType) !== null && _f !== void 0 ? _f : \"\";\n        message.oracleScaleFactor = (_g = object.oracleScaleFactor) !== null && _g !== void 0 ? _g : 0;\n        message.expirationTimestamp = (_h = object.expirationTimestamp) !== null && _h !== void 0 ? _h : \"0\";\n        message.settlementTimestamp = (_j = object.settlementTimestamp) !== null && _j !== void 0 ? _j : \"0\";\n        message.quoteDenom = (_k = object.quoteDenom) !== null && _k !== void 0 ? _k : \"\";\n        message.quoteTokenMeta = (object.quoteTokenMeta !== undefined && object.quoteTokenMeta !== null)\n            ? TokenMeta.fromPartial(object.quoteTokenMeta)\n            : undefined;\n        message.makerFeeRate = (_l = object.makerFeeRate) !== null && _l !== void 0 ? _l : \"\";\n        message.takerFeeRate = (_m = object.takerFeeRate) !== null && _m !== void 0 ? _m : \"\";\n        message.serviceProviderFee = (_o = object.serviceProviderFee) !== null && _o !== void 0 ? _o : \"\";\n        message.minPriceTickSize = (_p = object.minPriceTickSize) !== null && _p !== void 0 ? _p : \"\";\n        message.minQuantityTickSize = (_q = object.minQuantityTickSize) !== null && _q !== void 0 ? _q : \"\";\n        message.settlementPrice = (_r = object.settlementPrice) !== null && _r !== void 0 ? _r : \"\";\n        return message;\n    },\n};\nfunction createBasePaging() {\n    return { total: \"0\", from: 0, to: 0, countBySubaccount: \"0\", next: [] };\n}\nexport const Paging = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.total !== \"0\") {\n            writer.uint32(8).sint64(message.total);\n        }\n        if (message.from !== 0) {\n            writer.uint32(16).sint32(message.from);\n        }\n        if (message.to !== 0) {\n            writer.uint32(24).sint32(message.to);\n        }\n        if (message.countBySubaccount !== \"0\") {\n            writer.uint32(32).sint64(message.countBySubaccount);\n        }\n        for (const v of message.next) {\n            writer.uint32(42).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePaging();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.total = longToString(reader.sint64());\n                    break;\n                case 2:\n                    message.from = reader.sint32();\n                    break;\n                case 3:\n                    message.to = reader.sint32();\n                    break;\n                case 4:\n                    message.countBySubaccount = longToString(reader.sint64());\n                    break;\n                case 5:\n                    message.next.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            total: isSet(object.total) ? String(object.total) : \"0\",\n            from: isSet(object.from) ? Number(object.from) : 0,\n            to: isSet(object.to) ? Number(object.to) : 0,\n            countBySubaccount: isSet(object.countBySubaccount) ? String(object.countBySubaccount) : \"0\",\n            next: Array.isArray(object === null || object === void 0 ? void 0 : object.next) ? object.next.map((e) => String(e)) : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.total !== undefined && (obj.total = message.total);\n        message.from !== undefined && (obj.from = Math.round(message.from));\n        message.to !== undefined && (obj.to = Math.round(message.to));\n        message.countBySubaccount !== undefined && (obj.countBySubaccount = message.countBySubaccount);\n        if (message.next) {\n            obj.next = message.next.map((e) => e);\n        }\n        else {\n            obj.next = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return Paging.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e;\n        const message = createBasePaging();\n        message.total = (_a = object.total) !== null && _a !== void 0 ? _a : \"0\";\n        message.from = (_b = object.from) !== null && _b !== void 0 ? _b : 0;\n        message.to = (_c = object.to) !== null && _c !== void 0 ? _c : 0;\n        message.countBySubaccount = (_d = object.countBySubaccount) !== null && _d !== void 0 ? _d : \"0\";\n        message.next = ((_e = object.next) === null || _e === void 0 ? void 0 : _e.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseBinaryOptionsMarketRequest() {\n    return { marketId: \"\" };\n}\nexport const BinaryOptionsMarketRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBinaryOptionsMarketRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketId: isSet(object.marketId) ? String(object.marketId) : \"\" };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        return obj;\n    },\n    create(base) {\n        return BinaryOptionsMarketRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseBinaryOptionsMarketRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        return message;\n    },\n};\nfunction createBaseBinaryOptionsMarketResponse() {\n    return { market: undefined };\n}\nexport const BinaryOptionsMarketResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.market !== undefined) {\n            BinaryOptionsMarketInfo.encode(message.market, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseBinaryOptionsMarketResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.market = BinaryOptionsMarketInfo.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { market: isSet(object.market) ? BinaryOptionsMarketInfo.fromJSON(object.market) : undefined };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.market !== undefined &&\n            (obj.market = message.market ? BinaryOptionsMarketInfo.toJSON(message.market) : undefined);\n        return obj;\n    },\n    create(base) {\n        return BinaryOptionsMarketResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        const message = createBaseBinaryOptionsMarketResponse();\n        message.market = (object.market !== undefined && object.market !== null)\n            ? BinaryOptionsMarketInfo.fromPartial(object.market)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseOrderbookV2Request() {\n    return { marketId: \"\" };\n}\nexport const OrderbookV2Request = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrderbookV2Request();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketId: isSet(object.marketId) ? String(object.marketId) : \"\" };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        return obj;\n    },\n    create(base) {\n        return OrderbookV2Request.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseOrderbookV2Request();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        return message;\n    },\n};\nfunction createBaseOrderbookV2Response() {\n    return { orderbook: undefined };\n}\nexport const OrderbookV2Response = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.orderbook !== undefined) {\n            DerivativeLimitOrderbookV2.encode(message.orderbook, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrderbookV2Response();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderbook = DerivativeLimitOrderbookV2.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { orderbook: isSet(object.orderbook) ? DerivativeLimitOrderbookV2.fromJSON(object.orderbook) : undefined };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.orderbook !== undefined &&\n            (obj.orderbook = message.orderbook ? DerivativeLimitOrderbookV2.toJSON(message.orderbook) : undefined);\n        return obj;\n    },\n    create(base) {\n        return OrderbookV2Response.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        const message = createBaseOrderbookV2Response();\n        message.orderbook = (object.orderbook !== undefined && object.orderbook !== null)\n            ? DerivativeLimitOrderbookV2.fromPartial(object.orderbook)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseDerivativeLimitOrderbookV2() {\n    return { buys: [], sells: [], sequence: \"0\", timestamp: \"0\" };\n}\nexport const DerivativeLimitOrderbookV2 = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.buys) {\n            PriceLevel.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        for (const v of message.sells) {\n            PriceLevel.encode(v, writer.uint32(18).fork()).ldelim();\n        }\n        if (message.sequence !== \"0\") {\n            writer.uint32(24).uint64(message.sequence);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(32).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDerivativeLimitOrderbookV2();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.buys.push(PriceLevel.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.sells.push(PriceLevel.decode(reader, reader.uint32()));\n                    break;\n                case 3:\n                    message.sequence = longToString(reader.uint64());\n                    break;\n                case 4:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            buys: Array.isArray(object === null || object === void 0 ? void 0 : object.buys) ? object.buys.map((e) => PriceLevel.fromJSON(e)) : [],\n            sells: Array.isArray(object === null || object === void 0 ? void 0 : object.sells) ? object.sells.map((e) => PriceLevel.fromJSON(e)) : [],\n            sequence: isSet(object.sequence) ? String(object.sequence) : \"0\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.buys) {\n            obj.buys = message.buys.map((e) => e ? PriceLevel.toJSON(e) : undefined);\n        }\n        else {\n            obj.buys = [];\n        }\n        if (message.sells) {\n            obj.sells = message.sells.map((e) => e ? PriceLevel.toJSON(e) : undefined);\n        }\n        else {\n            obj.sells = [];\n        }\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return DerivativeLimitOrderbookV2.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBaseDerivativeLimitOrderbookV2();\n        message.buys = ((_a = object.buys) === null || _a === void 0 ? void 0 : _a.map((e) => PriceLevel.fromPartial(e))) || [];\n        message.sells = ((_b = object.sells) === null || _b === void 0 ? void 0 : _b.map((e) => PriceLevel.fromPartial(e))) || [];\n        message.sequence = (_c = object.sequence) !== null && _c !== void 0 ? _c : \"0\";\n        message.timestamp = (_d = object.timestamp) !== null && _d !== void 0 ? _d : \"0\";\n        return message;\n    },\n};\nfunction createBasePriceLevel() {\n    return { price: \"\", quantity: \"\", timestamp: \"0\" };\n}\nexport const PriceLevel = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.price !== \"\") {\n            writer.uint32(10).string(message.price);\n        }\n        if (message.quantity !== \"\") {\n            writer.uint32(18).string(message.quantity);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePriceLevel();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.price = reader.string();\n                    break;\n                case 2:\n                    message.quantity = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            price: isSet(object.price) ? String(object.price) : \"\",\n            quantity: isSet(object.quantity) ? String(object.quantity) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.price !== undefined && (obj.price = message.price);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return PriceLevel.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBasePriceLevel();\n        message.price = (_a = object.price) !== null && _a !== void 0 ? _a : \"\";\n        message.quantity = (_b = object.quantity) !== null && _b !== void 0 ? _b : \"\";\n        message.timestamp = (_c = object.timestamp) !== null && _c !== void 0 ? _c : \"0\";\n        return message;\n    },\n};\nfunction createBaseOrderbooksV2Request() {\n    return { marketIds: [] };\n}\nexport const OrderbooksV2Request = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.marketIds) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrderbooksV2Request();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [] };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return OrderbooksV2Request.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseOrderbooksV2Request();\n        message.marketIds = ((_a = object.marketIds) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseOrderbooksV2Response() {\n    return { orderbooks: [] };\n}\nexport const OrderbooksV2Response = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.orderbooks) {\n            SingleDerivativeLimitOrderbookV2.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrderbooksV2Response();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderbooks.push(SingleDerivativeLimitOrderbookV2.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orderbooks: Array.isArray(object === null || object === void 0 ? void 0 : object.orderbooks)\n                ? object.orderbooks.map((e) => SingleDerivativeLimitOrderbookV2.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.orderbooks) {\n            obj.orderbooks = message.orderbooks.map((e) => e ? SingleDerivativeLimitOrderbookV2.toJSON(e) : undefined);\n        }\n        else {\n            obj.orderbooks = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return OrderbooksV2Response.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseOrderbooksV2Response();\n        message.orderbooks = ((_a = object.orderbooks) === null || _a === void 0 ? void 0 : _a.map((e) => SingleDerivativeLimitOrderbookV2.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseSingleDerivativeLimitOrderbookV2() {\n    return { marketId: \"\", orderbook: undefined };\n}\nexport const SingleDerivativeLimitOrderbookV2 = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.orderbook !== undefined) {\n            DerivativeLimitOrderbookV2.encode(message.orderbook, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSingleDerivativeLimitOrderbookV2();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.orderbook = DerivativeLimitOrderbookV2.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            orderbook: isSet(object.orderbook) ? DerivativeLimitOrderbookV2.fromJSON(object.orderbook) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.orderbook !== undefined &&\n            (obj.orderbook = message.orderbook ? DerivativeLimitOrderbookV2.toJSON(message.orderbook) : undefined);\n        return obj;\n    },\n    create(base) {\n        return SingleDerivativeLimitOrderbookV2.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseSingleDerivativeLimitOrderbookV2();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.orderbook = (object.orderbook !== undefined && object.orderbook !== null)\n            ? DerivativeLimitOrderbookV2.fromPartial(object.orderbook)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseStreamOrderbookV2Request() {\n    return { marketIds: [] };\n}\nexport const StreamOrderbookV2Request = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.marketIds) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrderbookV2Request();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [] };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return StreamOrderbookV2Request.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseStreamOrderbookV2Request();\n        message.marketIds = ((_a = object.marketIds) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseStreamOrderbookV2Response() {\n    return { orderbook: undefined, operationType: \"\", timestamp: \"0\", marketId: \"\" };\n}\nexport const StreamOrderbookV2Response = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.orderbook !== undefined) {\n            DerivativeLimitOrderbookV2.encode(message.orderbook, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(34).string(message.marketId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrderbookV2Response();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderbook = DerivativeLimitOrderbookV2.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                case 4:\n                    message.marketId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orderbook: isSet(object.orderbook) ? DerivativeLimitOrderbookV2.fromJSON(object.orderbook) : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.orderbook !== undefined &&\n            (obj.orderbook = message.orderbook ? DerivativeLimitOrderbookV2.toJSON(message.orderbook) : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        return obj;\n    },\n    create(base) {\n        return StreamOrderbookV2Response.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseStreamOrderbookV2Response();\n        message.orderbook = (object.orderbook !== undefined && object.orderbook !== null)\n            ? DerivativeLimitOrderbookV2.fromPartial(object.orderbook)\n            : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        message.marketId = (_c = object.marketId) !== null && _c !== void 0 ? _c : \"\";\n        return message;\n    },\n};\nfunction createBaseStreamOrderbookUpdateRequest() {\n    return { marketIds: [] };\n}\nexport const StreamOrderbookUpdateRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.marketIds) {\n            writer.uint32(10).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrderbookUpdateRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [] };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return StreamOrderbookUpdateRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseStreamOrderbookUpdateRequest();\n        message.marketIds = ((_a = object.marketIds) === null || _a === void 0 ? void 0 : _a.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseStreamOrderbookUpdateResponse() {\n    return { orderbookLevelUpdates: undefined, operationType: \"\", timestamp: \"0\", marketId: \"\" };\n}\nexport const StreamOrderbookUpdateResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.orderbookLevelUpdates !== undefined) {\n            OrderbookLevelUpdates.encode(message.orderbookLevelUpdates, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(34).string(message.marketId);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrderbookUpdateResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderbookLevelUpdates = OrderbookLevelUpdates.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                case 4:\n                    message.marketId = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orderbookLevelUpdates: isSet(object.orderbookLevelUpdates)\n                ? OrderbookLevelUpdates.fromJSON(object.orderbookLevelUpdates)\n                : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.orderbookLevelUpdates !== undefined && (obj.orderbookLevelUpdates = message.orderbookLevelUpdates\n            ? OrderbookLevelUpdates.toJSON(message.orderbookLevelUpdates)\n            : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        return obj;\n    },\n    create(base) {\n        return StreamOrderbookUpdateResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseStreamOrderbookUpdateResponse();\n        message.orderbookLevelUpdates =\n            (object.orderbookLevelUpdates !== undefined && object.orderbookLevelUpdates !== null)\n                ? OrderbookLevelUpdates.fromPartial(object.orderbookLevelUpdates)\n                : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        message.marketId = (_c = object.marketId) !== null && _c !== void 0 ? _c : \"\";\n        return message;\n    },\n};\nfunction createBaseOrderbookLevelUpdates() {\n    return { marketId: \"\", sequence: \"0\", buys: [], sells: [], updatedAt: \"0\" };\n}\nexport const OrderbookLevelUpdates = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.sequence !== \"0\") {\n            writer.uint32(16).uint64(message.sequence);\n        }\n        for (const v of message.buys) {\n            PriceLevelUpdate.encode(v, writer.uint32(26).fork()).ldelim();\n        }\n        for (const v of message.sells) {\n            PriceLevelUpdate.encode(v, writer.uint32(34).fork()).ldelim();\n        }\n        if (message.updatedAt !== \"0\") {\n            writer.uint32(40).sint64(message.updatedAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrderbookLevelUpdates();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.sequence = longToString(reader.uint64());\n                    break;\n                case 3:\n                    message.buys.push(PriceLevelUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 4:\n                    message.sells.push(PriceLevelUpdate.decode(reader, reader.uint32()));\n                    break;\n                case 5:\n                    message.updatedAt = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            sequence: isSet(object.sequence) ? String(object.sequence) : \"0\",\n            buys: Array.isArray(object === null || object === void 0 ? void 0 : object.buys) ? object.buys.map((e) => PriceLevelUpdate.fromJSON(e)) : [],\n            sells: Array.isArray(object === null || object === void 0 ? void 0 : object.sells) ? object.sells.map((e) => PriceLevelUpdate.fromJSON(e)) : [],\n            updatedAt: isSet(object.updatedAt) ? String(object.updatedAt) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.sequence !== undefined && (obj.sequence = message.sequence);\n        if (message.buys) {\n            obj.buys = message.buys.map((e) => e ? PriceLevelUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.buys = [];\n        }\n        if (message.sells) {\n            obj.sells = message.sells.map((e) => e ? PriceLevelUpdate.toJSON(e) : undefined);\n        }\n        else {\n            obj.sells = [];\n        }\n        message.updatedAt !== undefined && (obj.updatedAt = message.updatedAt);\n        return obj;\n    },\n    create(base) {\n        return OrderbookLevelUpdates.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e;\n        const message = createBaseOrderbookLevelUpdates();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.sequence = (_b = object.sequence) !== null && _b !== void 0 ? _b : \"0\";\n        message.buys = ((_c = object.buys) === null || _c === void 0 ? void 0 : _c.map((e) => PriceLevelUpdate.fromPartial(e))) || [];\n        message.sells = ((_d = object.sells) === null || _d === void 0 ? void 0 : _d.map((e) => PriceLevelUpdate.fromPartial(e))) || [];\n        message.updatedAt = (_e = object.updatedAt) !== null && _e !== void 0 ? _e : \"0\";\n        return message;\n    },\n};\nfunction createBasePriceLevelUpdate() {\n    return { price: \"\", quantity: \"\", isActive: false, timestamp: \"0\" };\n}\nexport const PriceLevelUpdate = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.price !== \"\") {\n            writer.uint32(10).string(message.price);\n        }\n        if (message.quantity !== \"\") {\n            writer.uint32(18).string(message.quantity);\n        }\n        if (message.isActive === true) {\n            writer.uint32(24).bool(message.isActive);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(32).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePriceLevelUpdate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.price = reader.string();\n                    break;\n                case 2:\n                    message.quantity = reader.string();\n                    break;\n                case 3:\n                    message.isActive = reader.bool();\n                    break;\n                case 4:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            price: isSet(object.price) ? String(object.price) : \"\",\n            quantity: isSet(object.quantity) ? String(object.quantity) : \"\",\n            isActive: isSet(object.isActive) ? Boolean(object.isActive) : false,\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.price !== undefined && (obj.price = message.price);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.isActive !== undefined && (obj.isActive = message.isActive);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return PriceLevelUpdate.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBasePriceLevelUpdate();\n        message.price = (_a = object.price) !== null && _a !== void 0 ? _a : \"\";\n        message.quantity = (_b = object.quantity) !== null && _b !== void 0 ? _b : \"\";\n        message.isActive = (_c = object.isActive) !== null && _c !== void 0 ? _c : false;\n        message.timestamp = (_d = object.timestamp) !== null && _d !== void 0 ? _d : \"0\";\n        return message;\n    },\n};\nfunction createBaseOrdersRequest() {\n    return {\n        marketId: \"\",\n        orderSide: \"\",\n        subaccountId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        isConditional: \"\",\n        orderType: \"\",\n        includeInactive: false,\n        subaccountTotalOrders: false,\n        tradeId: \"\",\n        cid: \"\",\n    };\n}\nexport const OrdersRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.orderSide !== \"\") {\n            writer.uint32(18).string(message.orderSide);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(26).string(message.subaccountId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(32).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(48).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(56).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(66).string(v);\n        }\n        if (message.isConditional !== \"\") {\n            writer.uint32(74).string(message.isConditional);\n        }\n        if (message.orderType !== \"\") {\n            writer.uint32(82).string(message.orderType);\n        }\n        if (message.includeInactive === true) {\n            writer.uint32(88).bool(message.includeInactive);\n        }\n        if (message.subaccountTotalOrders === true) {\n            writer.uint32(96).bool(message.subaccountTotalOrders);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(106).string(message.tradeId);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(114).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrdersRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.orderSide = reader.string();\n                    break;\n                case 3:\n                    message.subaccountId = reader.string();\n                    break;\n                case 4:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = reader.sint32();\n                    break;\n                case 6:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 7:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 9:\n                    message.isConditional = reader.string();\n                    break;\n                case 10:\n                    message.orderType = reader.string();\n                    break;\n                case 11:\n                    message.includeInactive = reader.bool();\n                    break;\n                case 12:\n                    message.subaccountTotalOrders = reader.bool();\n                    break;\n                case 13:\n                    message.tradeId = reader.string();\n                    break;\n                case 14:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            orderSide: isSet(object.orderSide) ? String(object.orderSide) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            isConditional: isSet(object.isConditional) ? String(object.isConditional) : \"\",\n            orderType: isSet(object.orderType) ? String(object.orderType) : \"\",\n            includeInactive: isSet(object.includeInactive) ? Boolean(object.includeInactive) : false,\n            subaccountTotalOrders: isSet(object.subaccountTotalOrders) ? Boolean(object.subaccountTotalOrders) : false,\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.orderSide !== undefined && (obj.orderSide = message.orderSide);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        message.isConditional !== undefined && (obj.isConditional = message.isConditional);\n        message.orderType !== undefined && (obj.orderType = message.orderType);\n        message.includeInactive !== undefined && (obj.includeInactive = message.includeInactive);\n        message.subaccountTotalOrders !== undefined && (obj.subaccountTotalOrders = message.subaccountTotalOrders);\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return OrdersRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const message = createBaseOrdersRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.orderSide = (_b = object.orderSide) !== null && _b !== void 0 ? _b : \"\";\n        message.subaccountId = (_c = object.subaccountId) !== null && _c !== void 0 ? _c : \"\";\n        message.skip = (_d = object.skip) !== null && _d !== void 0 ? _d : \"0\";\n        message.limit = (_e = object.limit) !== null && _e !== void 0 ? _e : 0;\n        message.startTime = (_f = object.startTime) !== null && _f !== void 0 ? _f : \"0\";\n        message.endTime = (_g = object.endTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.marketIds = ((_h = object.marketIds) === null || _h === void 0 ? void 0 : _h.map((e) => e)) || [];\n        message.isConditional = (_j = object.isConditional) !== null && _j !== void 0 ? _j : \"\";\n        message.orderType = (_k = object.orderType) !== null && _k !== void 0 ? _k : \"\";\n        message.includeInactive = (_l = object.includeInactive) !== null && _l !== void 0 ? _l : false;\n        message.subaccountTotalOrders = (_m = object.subaccountTotalOrders) !== null && _m !== void 0 ? _m : false;\n        message.tradeId = (_o = object.tradeId) !== null && _o !== void 0 ? _o : \"\";\n        message.cid = (_p = object.cid) !== null && _p !== void 0 ? _p : \"\";\n        return message;\n    },\n};\nfunction createBaseOrdersResponse() {\n    return { orders: [], paging: undefined };\n}\nexport const OrdersResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.orders) {\n            DerivativeLimitOrder.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrdersResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orders.push(DerivativeLimitOrder.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orders: Array.isArray(object === null || object === void 0 ? void 0 : object.orders) ? object.orders.map((e) => DerivativeLimitOrder.fromJSON(e)) : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.orders) {\n            obj.orders = message.orders.map((e) => e ? DerivativeLimitOrder.toJSON(e) : undefined);\n        }\n        else {\n            obj.orders = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return OrdersResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseOrdersResponse();\n        message.orders = ((_a = object.orders) === null || _a === void 0 ? void 0 : _a.map((e) => DerivativeLimitOrder.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseDerivativeLimitOrder() {\n    return {\n        orderHash: \"\",\n        orderSide: \"\",\n        marketId: \"\",\n        subaccountId: \"\",\n        isReduceOnly: false,\n        margin: \"\",\n        price: \"\",\n        quantity: \"\",\n        unfilledQuantity: \"\",\n        triggerPrice: \"\",\n        feeRecipient: \"\",\n        state: \"\",\n        createdAt: \"0\",\n        updatedAt: \"0\",\n        orderNumber: \"0\",\n        orderType: \"\",\n        isConditional: false,\n        triggerAt: \"0\",\n        placedOrderHash: \"\",\n        executionType: \"\",\n        txHash: \"\",\n        cid: \"\",\n    };\n}\nexport const DerivativeLimitOrder = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.orderHash !== \"\") {\n            writer.uint32(10).string(message.orderHash);\n        }\n        if (message.orderSide !== \"\") {\n            writer.uint32(18).string(message.orderSide);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(26).string(message.marketId);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(34).string(message.subaccountId);\n        }\n        if (message.isReduceOnly === true) {\n            writer.uint32(40).bool(message.isReduceOnly);\n        }\n        if (message.margin !== \"\") {\n            writer.uint32(50).string(message.margin);\n        }\n        if (message.price !== \"\") {\n            writer.uint32(58).string(message.price);\n        }\n        if (message.quantity !== \"\") {\n            writer.uint32(66).string(message.quantity);\n        }\n        if (message.unfilledQuantity !== \"\") {\n            writer.uint32(74).string(message.unfilledQuantity);\n        }\n        if (message.triggerPrice !== \"\") {\n            writer.uint32(82).string(message.triggerPrice);\n        }\n        if (message.feeRecipient !== \"\") {\n            writer.uint32(90).string(message.feeRecipient);\n        }\n        if (message.state !== \"\") {\n            writer.uint32(98).string(message.state);\n        }\n        if (message.createdAt !== \"0\") {\n            writer.uint32(104).sint64(message.createdAt);\n        }\n        if (message.updatedAt !== \"0\") {\n            writer.uint32(112).sint64(message.updatedAt);\n        }\n        if (message.orderNumber !== \"0\") {\n            writer.uint32(120).sint64(message.orderNumber);\n        }\n        if (message.orderType !== \"\") {\n            writer.uint32(130).string(message.orderType);\n        }\n        if (message.isConditional === true) {\n            writer.uint32(136).bool(message.isConditional);\n        }\n        if (message.triggerAt !== \"0\") {\n            writer.uint32(144).uint64(message.triggerAt);\n        }\n        if (message.placedOrderHash !== \"\") {\n            writer.uint32(154).string(message.placedOrderHash);\n        }\n        if (message.executionType !== \"\") {\n            writer.uint32(162).string(message.executionType);\n        }\n        if (message.txHash !== \"\") {\n            writer.uint32(170).string(message.txHash);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(178).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDerivativeLimitOrder();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderHash = reader.string();\n                    break;\n                case 2:\n                    message.orderSide = reader.string();\n                    break;\n                case 3:\n                    message.marketId = reader.string();\n                    break;\n                case 4:\n                    message.subaccountId = reader.string();\n                    break;\n                case 5:\n                    message.isReduceOnly = reader.bool();\n                    break;\n                case 6:\n                    message.margin = reader.string();\n                    break;\n                case 7:\n                    message.price = reader.string();\n                    break;\n                case 8:\n                    message.quantity = reader.string();\n                    break;\n                case 9:\n                    message.unfilledQuantity = reader.string();\n                    break;\n                case 10:\n                    message.triggerPrice = reader.string();\n                    break;\n                case 11:\n                    message.feeRecipient = reader.string();\n                    break;\n                case 12:\n                    message.state = reader.string();\n                    break;\n                case 13:\n                    message.createdAt = longToString(reader.sint64());\n                    break;\n                case 14:\n                    message.updatedAt = longToString(reader.sint64());\n                    break;\n                case 15:\n                    message.orderNumber = longToString(reader.sint64());\n                    break;\n                case 16:\n                    message.orderType = reader.string();\n                    break;\n                case 17:\n                    message.isConditional = reader.bool();\n                    break;\n                case 18:\n                    message.triggerAt = longToString(reader.uint64());\n                    break;\n                case 19:\n                    message.placedOrderHash = reader.string();\n                    break;\n                case 20:\n                    message.executionType = reader.string();\n                    break;\n                case 21:\n                    message.txHash = reader.string();\n                    break;\n                case 22:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orderHash: isSet(object.orderHash) ? String(object.orderHash) : \"\",\n            orderSide: isSet(object.orderSide) ? String(object.orderSide) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            isReduceOnly: isSet(object.isReduceOnly) ? Boolean(object.isReduceOnly) : false,\n            margin: isSet(object.margin) ? String(object.margin) : \"\",\n            price: isSet(object.price) ? String(object.price) : \"\",\n            quantity: isSet(object.quantity) ? String(object.quantity) : \"\",\n            unfilledQuantity: isSet(object.unfilledQuantity) ? String(object.unfilledQuantity) : \"\",\n            triggerPrice: isSet(object.triggerPrice) ? String(object.triggerPrice) : \"\",\n            feeRecipient: isSet(object.feeRecipient) ? String(object.feeRecipient) : \"\",\n            state: isSet(object.state) ? String(object.state) : \"\",\n            createdAt: isSet(object.createdAt) ? String(object.createdAt) : \"0\",\n            updatedAt: isSet(object.updatedAt) ? String(object.updatedAt) : \"0\",\n            orderNumber: isSet(object.orderNumber) ? String(object.orderNumber) : \"0\",\n            orderType: isSet(object.orderType) ? String(object.orderType) : \"\",\n            isConditional: isSet(object.isConditional) ? Boolean(object.isConditional) : false,\n            triggerAt: isSet(object.triggerAt) ? String(object.triggerAt) : \"0\",\n            placedOrderHash: isSet(object.placedOrderHash) ? String(object.placedOrderHash) : \"\",\n            executionType: isSet(object.executionType) ? String(object.executionType) : \"\",\n            txHash: isSet(object.txHash) ? String(object.txHash) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.orderHash !== undefined && (obj.orderHash = message.orderHash);\n        message.orderSide !== undefined && (obj.orderSide = message.orderSide);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.isReduceOnly !== undefined && (obj.isReduceOnly = message.isReduceOnly);\n        message.margin !== undefined && (obj.margin = message.margin);\n        message.price !== undefined && (obj.price = message.price);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.unfilledQuantity !== undefined && (obj.unfilledQuantity = message.unfilledQuantity);\n        message.triggerPrice !== undefined && (obj.triggerPrice = message.triggerPrice);\n        message.feeRecipient !== undefined && (obj.feeRecipient = message.feeRecipient);\n        message.state !== undefined && (obj.state = message.state);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        message.updatedAt !== undefined && (obj.updatedAt = message.updatedAt);\n        message.orderNumber !== undefined && (obj.orderNumber = message.orderNumber);\n        message.orderType !== undefined && (obj.orderType = message.orderType);\n        message.isConditional !== undefined && (obj.isConditional = message.isConditional);\n        message.triggerAt !== undefined && (obj.triggerAt = message.triggerAt);\n        message.placedOrderHash !== undefined && (obj.placedOrderHash = message.placedOrderHash);\n        message.executionType !== undefined && (obj.executionType = message.executionType);\n        message.txHash !== undefined && (obj.txHash = message.txHash);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return DerivativeLimitOrder.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w, _x;\n        const message = createBaseDerivativeLimitOrder();\n        message.orderHash = (_a = object.orderHash) !== null && _a !== void 0 ? _a : \"\";\n        message.orderSide = (_b = object.orderSide) !== null && _b !== void 0 ? _b : \"\";\n        message.marketId = (_c = object.marketId) !== null && _c !== void 0 ? _c : \"\";\n        message.subaccountId = (_d = object.subaccountId) !== null && _d !== void 0 ? _d : \"\";\n        message.isReduceOnly = (_e = object.isReduceOnly) !== null && _e !== void 0 ? _e : false;\n        message.margin = (_f = object.margin) !== null && _f !== void 0 ? _f : \"\";\n        message.price = (_g = object.price) !== null && _g !== void 0 ? _g : \"\";\n        message.quantity = (_h = object.quantity) !== null && _h !== void 0 ? _h : \"\";\n        message.unfilledQuantity = (_j = object.unfilledQuantity) !== null && _j !== void 0 ? _j : \"\";\n        message.triggerPrice = (_k = object.triggerPrice) !== null && _k !== void 0 ? _k : \"\";\n        message.feeRecipient = (_l = object.feeRecipient) !== null && _l !== void 0 ? _l : \"\";\n        message.state = (_m = object.state) !== null && _m !== void 0 ? _m : \"\";\n        message.createdAt = (_o = object.createdAt) !== null && _o !== void 0 ? _o : \"0\";\n        message.updatedAt = (_p = object.updatedAt) !== null && _p !== void 0 ? _p : \"0\";\n        message.orderNumber = (_q = object.orderNumber) !== null && _q !== void 0 ? _q : \"0\";\n        message.orderType = (_r = object.orderType) !== null && _r !== void 0 ? _r : \"\";\n        message.isConditional = (_s = object.isConditional) !== null && _s !== void 0 ? _s : false;\n        message.triggerAt = (_t = object.triggerAt) !== null && _t !== void 0 ? _t : \"0\";\n        message.placedOrderHash = (_u = object.placedOrderHash) !== null && _u !== void 0 ? _u : \"\";\n        message.executionType = (_v = object.executionType) !== null && _v !== void 0 ? _v : \"\";\n        message.txHash = (_w = object.txHash) !== null && _w !== void 0 ? _w : \"\";\n        message.cid = (_x = object.cid) !== null && _x !== void 0 ? _x : \"\";\n        return message;\n    },\n};\nfunction createBasePositionsRequest() {\n    return {\n        subaccountId: \"\",\n        marketId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        direction: \"\",\n        subaccountTotalPositions: false,\n        accountAddress: \"\",\n    };\n}\nexport const PositionsRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.subaccountId !== \"\") {\n            writer.uint32(10).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(24).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(32).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(40).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(48).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(58).string(v);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(66).string(message.direction);\n        }\n        if (message.subaccountTotalPositions === true) {\n            writer.uint32(72).bool(message.subaccountTotalPositions);\n        }\n        if (message.accountAddress !== \"\") {\n            writer.uint32(82).string(message.accountAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePositionsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subaccountId = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 4:\n                    message.limit = reader.sint32();\n                    break;\n                case 5:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 6:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 7:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 8:\n                    message.direction = reader.string();\n                    break;\n                case 9:\n                    message.subaccountTotalPositions = reader.bool();\n                    break;\n                case 10:\n                    message.accountAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            subaccountTotalPositions: isSet(object.subaccountTotalPositions)\n                ? Boolean(object.subaccountTotalPositions)\n                : false,\n            accountAddress: isSet(object.accountAddress) ? String(object.accountAddress) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.subaccountTotalPositions !== undefined && (obj.subaccountTotalPositions = message.subaccountTotalPositions);\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        return obj;\n    },\n    create(base) {\n        return PositionsRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        const message = createBasePositionsRequest();\n        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.skip = (_c = object.skip) !== null && _c !== void 0 ? _c : \"0\";\n        message.limit = (_d = object.limit) !== null && _d !== void 0 ? _d : 0;\n        message.startTime = (_e = object.startTime) !== null && _e !== void 0 ? _e : \"0\";\n        message.endTime = (_f = object.endTime) !== null && _f !== void 0 ? _f : \"0\";\n        message.marketIds = ((_g = object.marketIds) === null || _g === void 0 ? void 0 : _g.map((e) => e)) || [];\n        message.direction = (_h = object.direction) !== null && _h !== void 0 ? _h : \"\";\n        message.subaccountTotalPositions = (_j = object.subaccountTotalPositions) !== null && _j !== void 0 ? _j : false;\n        message.accountAddress = (_k = object.accountAddress) !== null && _k !== void 0 ? _k : \"\";\n        return message;\n    },\n};\nfunction createBasePositionsResponse() {\n    return { positions: [], paging: undefined };\n}\nexport const PositionsResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.positions) {\n            DerivativePosition.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePositionsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.positions.push(DerivativePosition.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            positions: Array.isArray(object === null || object === void 0 ? void 0 : object.positions)\n                ? object.positions.map((e) => DerivativePosition.fromJSON(e))\n                : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.positions) {\n            obj.positions = message.positions.map((e) => e ? DerivativePosition.toJSON(e) : undefined);\n        }\n        else {\n            obj.positions = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return PositionsResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBasePositionsResponse();\n        message.positions = ((_a = object.positions) === null || _a === void 0 ? void 0 : _a.map((e) => DerivativePosition.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseDerivativePosition() {\n    return {\n        ticker: \"\",\n        marketId: \"\",\n        subaccountId: \"\",\n        direction: \"\",\n        quantity: \"\",\n        entryPrice: \"\",\n        margin: \"\",\n        liquidationPrice: \"\",\n        markPrice: \"\",\n        aggregateReduceOnlyQuantity: \"\",\n        updatedAt: \"0\",\n        createdAt: \"0\",\n    };\n}\nexport const DerivativePosition = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.ticker !== \"\") {\n            writer.uint32(10).string(message.ticker);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(26).string(message.subaccountId);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(34).string(message.direction);\n        }\n        if (message.quantity !== \"\") {\n            writer.uint32(42).string(message.quantity);\n        }\n        if (message.entryPrice !== \"\") {\n            writer.uint32(50).string(message.entryPrice);\n        }\n        if (message.margin !== \"\") {\n            writer.uint32(58).string(message.margin);\n        }\n        if (message.liquidationPrice !== \"\") {\n            writer.uint32(66).string(message.liquidationPrice);\n        }\n        if (message.markPrice !== \"\") {\n            writer.uint32(74).string(message.markPrice);\n        }\n        if (message.aggregateReduceOnlyQuantity !== \"\") {\n            writer.uint32(90).string(message.aggregateReduceOnlyQuantity);\n        }\n        if (message.updatedAt !== \"0\") {\n            writer.uint32(96).sint64(message.updatedAt);\n        }\n        if (message.createdAt !== \"0\") {\n            writer.uint32(104).sint64(message.createdAt);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDerivativePosition();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ticker = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.subaccountId = reader.string();\n                    break;\n                case 4:\n                    message.direction = reader.string();\n                    break;\n                case 5:\n                    message.quantity = reader.string();\n                    break;\n                case 6:\n                    message.entryPrice = reader.string();\n                    break;\n                case 7:\n                    message.margin = reader.string();\n                    break;\n                case 8:\n                    message.liquidationPrice = reader.string();\n                    break;\n                case 9:\n                    message.markPrice = reader.string();\n                    break;\n                case 11:\n                    message.aggregateReduceOnlyQuantity = reader.string();\n                    break;\n                case 12:\n                    message.updatedAt = longToString(reader.sint64());\n                    break;\n                case 13:\n                    message.createdAt = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            ticker: isSet(object.ticker) ? String(object.ticker) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            quantity: isSet(object.quantity) ? String(object.quantity) : \"\",\n            entryPrice: isSet(object.entryPrice) ? String(object.entryPrice) : \"\",\n            margin: isSet(object.margin) ? String(object.margin) : \"\",\n            liquidationPrice: isSet(object.liquidationPrice) ? String(object.liquidationPrice) : \"\",\n            markPrice: isSet(object.markPrice) ? String(object.markPrice) : \"\",\n            aggregateReduceOnlyQuantity: isSet(object.aggregateReduceOnlyQuantity)\n                ? String(object.aggregateReduceOnlyQuantity)\n                : \"\",\n            updatedAt: isSet(object.updatedAt) ? String(object.updatedAt) : \"0\",\n            createdAt: isSet(object.createdAt) ? String(object.createdAt) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ticker !== undefined && (obj.ticker = message.ticker);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.entryPrice !== undefined && (obj.entryPrice = message.entryPrice);\n        message.margin !== undefined && (obj.margin = message.margin);\n        message.liquidationPrice !== undefined && (obj.liquidationPrice = message.liquidationPrice);\n        message.markPrice !== undefined && (obj.markPrice = message.markPrice);\n        message.aggregateReduceOnlyQuantity !== undefined &&\n            (obj.aggregateReduceOnlyQuantity = message.aggregateReduceOnlyQuantity);\n        message.updatedAt !== undefined && (obj.updatedAt = message.updatedAt);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        return obj;\n    },\n    create(base) {\n        return DerivativePosition.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        const message = createBaseDerivativePosition();\n        message.ticker = (_a = object.ticker) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.subaccountId = (_c = object.subaccountId) !== null && _c !== void 0 ? _c : \"\";\n        message.direction = (_d = object.direction) !== null && _d !== void 0 ? _d : \"\";\n        message.quantity = (_e = object.quantity) !== null && _e !== void 0 ? _e : \"\";\n        message.entryPrice = (_f = object.entryPrice) !== null && _f !== void 0 ? _f : \"\";\n        message.margin = (_g = object.margin) !== null && _g !== void 0 ? _g : \"\";\n        message.liquidationPrice = (_h = object.liquidationPrice) !== null && _h !== void 0 ? _h : \"\";\n        message.markPrice = (_j = object.markPrice) !== null && _j !== void 0 ? _j : \"\";\n        message.aggregateReduceOnlyQuantity = (_k = object.aggregateReduceOnlyQuantity) !== null && _k !== void 0 ? _k : \"\";\n        message.updatedAt = (_l = object.updatedAt) !== null && _l !== void 0 ? _l : \"0\";\n        message.createdAt = (_m = object.createdAt) !== null && _m !== void 0 ? _m : \"0\";\n        return message;\n    },\n};\nfunction createBasePositionsV2Request() {\n    return {\n        subaccountId: \"\",\n        marketId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        direction: \"\",\n        subaccountTotalPositions: false,\n        accountAddress: \"\",\n    };\n}\nexport const PositionsV2Request = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.subaccountId !== \"\") {\n            writer.uint32(10).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(24).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(32).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(40).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(48).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(58).string(v);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(66).string(message.direction);\n        }\n        if (message.subaccountTotalPositions === true) {\n            writer.uint32(72).bool(message.subaccountTotalPositions);\n        }\n        if (message.accountAddress !== \"\") {\n            writer.uint32(82).string(message.accountAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePositionsV2Request();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subaccountId = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 4:\n                    message.limit = reader.sint32();\n                    break;\n                case 5:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 6:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 7:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 8:\n                    message.direction = reader.string();\n                    break;\n                case 9:\n                    message.subaccountTotalPositions = reader.bool();\n                    break;\n                case 10:\n                    message.accountAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            subaccountTotalPositions: isSet(object.subaccountTotalPositions)\n                ? Boolean(object.subaccountTotalPositions)\n                : false,\n            accountAddress: isSet(object.accountAddress) ? String(object.accountAddress) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.subaccountTotalPositions !== undefined && (obj.subaccountTotalPositions = message.subaccountTotalPositions);\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        return obj;\n    },\n    create(base) {\n        return PositionsV2Request.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        const message = createBasePositionsV2Request();\n        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.skip = (_c = object.skip) !== null && _c !== void 0 ? _c : \"0\";\n        message.limit = (_d = object.limit) !== null && _d !== void 0 ? _d : 0;\n        message.startTime = (_e = object.startTime) !== null && _e !== void 0 ? _e : \"0\";\n        message.endTime = (_f = object.endTime) !== null && _f !== void 0 ? _f : \"0\";\n        message.marketIds = ((_g = object.marketIds) === null || _g === void 0 ? void 0 : _g.map((e) => e)) || [];\n        message.direction = (_h = object.direction) !== null && _h !== void 0 ? _h : \"\";\n        message.subaccountTotalPositions = (_j = object.subaccountTotalPositions) !== null && _j !== void 0 ? _j : false;\n        message.accountAddress = (_k = object.accountAddress) !== null && _k !== void 0 ? _k : \"\";\n        return message;\n    },\n};\nfunction createBasePositionsV2Response() {\n    return { positions: [], paging: undefined };\n}\nexport const PositionsV2Response = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.positions) {\n            DerivativePositionV2.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePositionsV2Response();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.positions.push(DerivativePositionV2.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            positions: Array.isArray(object === null || object === void 0 ? void 0 : object.positions)\n                ? object.positions.map((e) => DerivativePositionV2.fromJSON(e))\n                : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.positions) {\n            obj.positions = message.positions.map((e) => e ? DerivativePositionV2.toJSON(e) : undefined);\n        }\n        else {\n            obj.positions = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return PositionsV2Response.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBasePositionsV2Response();\n        message.positions = ((_a = object.positions) === null || _a === void 0 ? void 0 : _a.map((e) => DerivativePositionV2.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseDerivativePositionV2() {\n    return {\n        ticker: \"\",\n        marketId: \"\",\n        subaccountId: \"\",\n        direction: \"\",\n        quantity: \"\",\n        entryPrice: \"\",\n        margin: \"\",\n        liquidationPrice: \"\",\n        markPrice: \"\",\n        updatedAt: \"0\",\n        denom: \"\",\n    };\n}\nexport const DerivativePositionV2 = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.ticker !== \"\") {\n            writer.uint32(10).string(message.ticker);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(26).string(message.subaccountId);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(34).string(message.direction);\n        }\n        if (message.quantity !== \"\") {\n            writer.uint32(42).string(message.quantity);\n        }\n        if (message.entryPrice !== \"\") {\n            writer.uint32(50).string(message.entryPrice);\n        }\n        if (message.margin !== \"\") {\n            writer.uint32(58).string(message.margin);\n        }\n        if (message.liquidationPrice !== \"\") {\n            writer.uint32(66).string(message.liquidationPrice);\n        }\n        if (message.markPrice !== \"\") {\n            writer.uint32(74).string(message.markPrice);\n        }\n        if (message.updatedAt !== \"0\") {\n            writer.uint32(88).sint64(message.updatedAt);\n        }\n        if (message.denom !== \"\") {\n            writer.uint32(98).string(message.denom);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDerivativePositionV2();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.ticker = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.subaccountId = reader.string();\n                    break;\n                case 4:\n                    message.direction = reader.string();\n                    break;\n                case 5:\n                    message.quantity = reader.string();\n                    break;\n                case 6:\n                    message.entryPrice = reader.string();\n                    break;\n                case 7:\n                    message.margin = reader.string();\n                    break;\n                case 8:\n                    message.liquidationPrice = reader.string();\n                    break;\n                case 9:\n                    message.markPrice = reader.string();\n                    break;\n                case 11:\n                    message.updatedAt = longToString(reader.sint64());\n                    break;\n                case 12:\n                    message.denom = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            ticker: isSet(object.ticker) ? String(object.ticker) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            quantity: isSet(object.quantity) ? String(object.quantity) : \"\",\n            entryPrice: isSet(object.entryPrice) ? String(object.entryPrice) : \"\",\n            margin: isSet(object.margin) ? String(object.margin) : \"\",\n            liquidationPrice: isSet(object.liquidationPrice) ? String(object.liquidationPrice) : \"\",\n            markPrice: isSet(object.markPrice) ? String(object.markPrice) : \"\",\n            updatedAt: isSet(object.updatedAt) ? String(object.updatedAt) : \"0\",\n            denom: isSet(object.denom) ? String(object.denom) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.ticker !== undefined && (obj.ticker = message.ticker);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.entryPrice !== undefined && (obj.entryPrice = message.entryPrice);\n        message.margin !== undefined && (obj.margin = message.margin);\n        message.liquidationPrice !== undefined && (obj.liquidationPrice = message.liquidationPrice);\n        message.markPrice !== undefined && (obj.markPrice = message.markPrice);\n        message.updatedAt !== undefined && (obj.updatedAt = message.updatedAt);\n        message.denom !== undefined && (obj.denom = message.denom);\n        return obj;\n    },\n    create(base) {\n        return DerivativePositionV2.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n        const message = createBaseDerivativePositionV2();\n        message.ticker = (_a = object.ticker) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.subaccountId = (_c = object.subaccountId) !== null && _c !== void 0 ? _c : \"\";\n        message.direction = (_d = object.direction) !== null && _d !== void 0 ? _d : \"\";\n        message.quantity = (_e = object.quantity) !== null && _e !== void 0 ? _e : \"\";\n        message.entryPrice = (_f = object.entryPrice) !== null && _f !== void 0 ? _f : \"\";\n        message.margin = (_g = object.margin) !== null && _g !== void 0 ? _g : \"\";\n        message.liquidationPrice = (_h = object.liquidationPrice) !== null && _h !== void 0 ? _h : \"\";\n        message.markPrice = (_j = object.markPrice) !== null && _j !== void 0 ? _j : \"\";\n        message.updatedAt = (_k = object.updatedAt) !== null && _k !== void 0 ? _k : \"0\";\n        message.denom = (_l = object.denom) !== null && _l !== void 0 ? _l : \"\";\n        return message;\n    },\n};\nfunction createBaseLiquidablePositionsRequest() {\n    return { marketId: \"\", skip: \"0\", limit: 0 };\n}\nexport const LiquidablePositionsRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(16).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).sint32(message.limit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLiquidablePositionsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = reader.sint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        return obj;\n    },\n    create(base) {\n        return LiquidablePositionsRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseLiquidablePositionsRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.skip = (_b = object.skip) !== null && _b !== void 0 ? _b : \"0\";\n        message.limit = (_c = object.limit) !== null && _c !== void 0 ? _c : 0;\n        return message;\n    },\n};\nfunction createBaseLiquidablePositionsResponse() {\n    return { positions: [] };\n}\nexport const LiquidablePositionsResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.positions) {\n            DerivativePosition.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseLiquidablePositionsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.positions.push(DerivativePosition.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            positions: Array.isArray(object === null || object === void 0 ? void 0 : object.positions)\n                ? object.positions.map((e) => DerivativePosition.fromJSON(e))\n                : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.positions) {\n            obj.positions = message.positions.map((e) => e ? DerivativePosition.toJSON(e) : undefined);\n        }\n        else {\n            obj.positions = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return LiquidablePositionsResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseLiquidablePositionsResponse();\n        message.positions = ((_a = object.positions) === null || _a === void 0 ? void 0 : _a.map((e) => DerivativePosition.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseFundingPaymentsRequest() {\n    return { subaccountId: \"\", marketId: \"\", skip: \"0\", limit: 0, endTime: \"0\", marketIds: [] };\n}\nexport const FundingPaymentsRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.subaccountId !== \"\") {\n            writer.uint32(10).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(24).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(32).sint32(message.limit);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(40).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(50).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFundingPaymentsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subaccountId = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 4:\n                    message.limit = reader.sint32();\n                    break;\n                case 5:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 6:\n                    message.marketIds.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return FundingPaymentsRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f;\n        const message = createBaseFundingPaymentsRequest();\n        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.skip = (_c = object.skip) !== null && _c !== void 0 ? _c : \"0\";\n        message.limit = (_d = object.limit) !== null && _d !== void 0 ? _d : 0;\n        message.endTime = (_e = object.endTime) !== null && _e !== void 0 ? _e : \"0\";\n        message.marketIds = ((_f = object.marketIds) === null || _f === void 0 ? void 0 : _f.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseFundingPaymentsResponse() {\n    return { payments: [], paging: undefined };\n}\nexport const FundingPaymentsResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.payments) {\n            FundingPayment.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFundingPaymentsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.payments.push(FundingPayment.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            payments: Array.isArray(object === null || object === void 0 ? void 0 : object.payments) ? object.payments.map((e) => FundingPayment.fromJSON(e)) : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.payments) {\n            obj.payments = message.payments.map((e) => e ? FundingPayment.toJSON(e) : undefined);\n        }\n        else {\n            obj.payments = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return FundingPaymentsResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseFundingPaymentsResponse();\n        message.payments = ((_a = object.payments) === null || _a === void 0 ? void 0 : _a.map((e) => FundingPayment.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseFundingPayment() {\n    return { marketId: \"\", subaccountId: \"\", amount: \"\", timestamp: \"0\" };\n}\nexport const FundingPayment = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(18).string(message.subaccountId);\n        }\n        if (message.amount !== \"\") {\n            writer.uint32(26).string(message.amount);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(32).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFundingPayment();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.subaccountId = reader.string();\n                    break;\n                case 3:\n                    message.amount = reader.string();\n                    break;\n                case 4:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            amount: isSet(object.amount) ? String(object.amount) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.amount !== undefined && (obj.amount = message.amount);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return FundingPayment.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBaseFundingPayment();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.subaccountId = (_b = object.subaccountId) !== null && _b !== void 0 ? _b : \"\";\n        message.amount = (_c = object.amount) !== null && _c !== void 0 ? _c : \"\";\n        message.timestamp = (_d = object.timestamp) !== null && _d !== void 0 ? _d : \"0\";\n        return message;\n    },\n};\nfunction createBaseFundingRatesRequest() {\n    return { marketId: \"\", skip: \"0\", limit: 0, endTime: \"0\" };\n}\nexport const FundingRatesRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(16).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(24).sint32(message.limit);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(32).sint64(message.endTime);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFundingRatesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 3:\n                    message.limit = reader.sint32();\n                    break;\n                case 4:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        return obj;\n    },\n    create(base) {\n        return FundingRatesRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBaseFundingRatesRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.skip = (_b = object.skip) !== null && _b !== void 0 ? _b : \"0\";\n        message.limit = (_c = object.limit) !== null && _c !== void 0 ? _c : 0;\n        message.endTime = (_d = object.endTime) !== null && _d !== void 0 ? _d : \"0\";\n        return message;\n    },\n};\nfunction createBaseFundingRatesResponse() {\n    return { fundingRates: [], paging: undefined };\n}\nexport const FundingRatesResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.fundingRates) {\n            FundingRate.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFundingRatesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.fundingRates.push(FundingRate.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            fundingRates: Array.isArray(object === null || object === void 0 ? void 0 : object.fundingRates)\n                ? object.fundingRates.map((e) => FundingRate.fromJSON(e))\n                : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.fundingRates) {\n            obj.fundingRates = message.fundingRates.map((e) => e ? FundingRate.toJSON(e) : undefined);\n        }\n        else {\n            obj.fundingRates = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return FundingRatesResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseFundingRatesResponse();\n        message.fundingRates = ((_a = object.fundingRates) === null || _a === void 0 ? void 0 : _a.map((e) => FundingRate.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseFundingRate() {\n    return { marketId: \"\", rate: \"\", timestamp: \"0\" };\n}\nexport const FundingRate = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.rate !== \"\") {\n            writer.uint32(18).string(message.rate);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseFundingRate();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.rate = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            rate: isSet(object.rate) ? String(object.rate) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.rate !== undefined && (obj.rate = message.rate);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return FundingRate.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c;\n        const message = createBaseFundingRate();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.rate = (_b = object.rate) !== null && _b !== void 0 ? _b : \"\";\n        message.timestamp = (_c = object.timestamp) !== null && _c !== void 0 ? _c : \"0\";\n        return message;\n    },\n};\nfunction createBaseStreamPositionsRequest() {\n    return { subaccountId: \"\", marketId: \"\", marketIds: [], subaccountIds: [], accountAddress: \"\" };\n}\nexport const StreamPositionsRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.subaccountId !== \"\") {\n            writer.uint32(10).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(26).string(v);\n        }\n        for (const v of message.subaccountIds) {\n            writer.uint32(34).string(v);\n        }\n        if (message.accountAddress !== \"\") {\n            writer.uint32(42).string(message.accountAddress);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamPositionsRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subaccountId = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 4:\n                    message.subaccountIds.push(reader.string());\n                    break;\n                case 5:\n                    message.accountAddress = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            subaccountIds: Array.isArray(object === null || object === void 0 ? void 0 : object.subaccountIds) ? object.subaccountIds.map((e) => String(e)) : [],\n            accountAddress: isSet(object.accountAddress) ? String(object.accountAddress) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        if (message.subaccountIds) {\n            obj.subaccountIds = message.subaccountIds.map((e) => e);\n        }\n        else {\n            obj.subaccountIds = [];\n        }\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        return obj;\n    },\n    create(base) {\n        return StreamPositionsRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e;\n        const message = createBaseStreamPositionsRequest();\n        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.marketIds = ((_c = object.marketIds) === null || _c === void 0 ? void 0 : _c.map((e) => e)) || [];\n        message.subaccountIds = ((_d = object.subaccountIds) === null || _d === void 0 ? void 0 : _d.map((e) => e)) || [];\n        message.accountAddress = (_e = object.accountAddress) !== null && _e !== void 0 ? _e : \"\";\n        return message;\n    },\n};\nfunction createBaseStreamPositionsResponse() {\n    return { position: undefined, timestamp: \"0\" };\n}\nexport const StreamPositionsResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.position !== undefined) {\n            DerivativePosition.encode(message.position, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(16).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamPositionsResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.position = DerivativePosition.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            position: isSet(object.position) ? DerivativePosition.fromJSON(object.position) : undefined,\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.position !== undefined &&\n            (obj.position = message.position ? DerivativePosition.toJSON(message.position) : undefined);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return StreamPositionsResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseStreamPositionsResponse();\n        message.position = (object.position !== undefined && object.position !== null)\n            ? DerivativePosition.fromPartial(object.position)\n            : undefined;\n        message.timestamp = (_a = object.timestamp) !== null && _a !== void 0 ? _a : \"0\";\n        return message;\n    },\n};\nfunction createBaseStreamOrdersRequest() {\n    return {\n        marketId: \"\",\n        orderSide: \"\",\n        subaccountId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        isConditional: \"\",\n        orderType: \"\",\n        includeInactive: false,\n        subaccountTotalOrders: false,\n        tradeId: \"\",\n        cid: \"\",\n    };\n}\nexport const StreamOrdersRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.orderSide !== \"\") {\n            writer.uint32(18).string(message.orderSide);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(26).string(message.subaccountId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(32).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(40).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(48).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(56).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(66).string(v);\n        }\n        if (message.isConditional !== \"\") {\n            writer.uint32(74).string(message.isConditional);\n        }\n        if (message.orderType !== \"\") {\n            writer.uint32(82).string(message.orderType);\n        }\n        if (message.includeInactive === true) {\n            writer.uint32(88).bool(message.includeInactive);\n        }\n        if (message.subaccountTotalOrders === true) {\n            writer.uint32(96).bool(message.subaccountTotalOrders);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(106).string(message.tradeId);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(114).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrdersRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.orderSide = reader.string();\n                    break;\n                case 3:\n                    message.subaccountId = reader.string();\n                    break;\n                case 4:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 5:\n                    message.limit = reader.sint32();\n                    break;\n                case 6:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 7:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 9:\n                    message.isConditional = reader.string();\n                    break;\n                case 10:\n                    message.orderType = reader.string();\n                    break;\n                case 11:\n                    message.includeInactive = reader.bool();\n                    break;\n                case 12:\n                    message.subaccountTotalOrders = reader.bool();\n                    break;\n                case 13:\n                    message.tradeId = reader.string();\n                    break;\n                case 14:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            orderSide: isSet(object.orderSide) ? String(object.orderSide) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            isConditional: isSet(object.isConditional) ? String(object.isConditional) : \"\",\n            orderType: isSet(object.orderType) ? String(object.orderType) : \"\",\n            includeInactive: isSet(object.includeInactive) ? Boolean(object.includeInactive) : false,\n            subaccountTotalOrders: isSet(object.subaccountTotalOrders) ? Boolean(object.subaccountTotalOrders) : false,\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.orderSide !== undefined && (obj.orderSide = message.orderSide);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        message.isConditional !== undefined && (obj.isConditional = message.isConditional);\n        message.orderType !== undefined && (obj.orderType = message.orderType);\n        message.includeInactive !== undefined && (obj.includeInactive = message.includeInactive);\n        message.subaccountTotalOrders !== undefined && (obj.subaccountTotalOrders = message.subaccountTotalOrders);\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return StreamOrdersRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const message = createBaseStreamOrdersRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.orderSide = (_b = object.orderSide) !== null && _b !== void 0 ? _b : \"\";\n        message.subaccountId = (_c = object.subaccountId) !== null && _c !== void 0 ? _c : \"\";\n        message.skip = (_d = object.skip) !== null && _d !== void 0 ? _d : \"0\";\n        message.limit = (_e = object.limit) !== null && _e !== void 0 ? _e : 0;\n        message.startTime = (_f = object.startTime) !== null && _f !== void 0 ? _f : \"0\";\n        message.endTime = (_g = object.endTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.marketIds = ((_h = object.marketIds) === null || _h === void 0 ? void 0 : _h.map((e) => e)) || [];\n        message.isConditional = (_j = object.isConditional) !== null && _j !== void 0 ? _j : \"\";\n        message.orderType = (_k = object.orderType) !== null && _k !== void 0 ? _k : \"\";\n        message.includeInactive = (_l = object.includeInactive) !== null && _l !== void 0 ? _l : false;\n        message.subaccountTotalOrders = (_m = object.subaccountTotalOrders) !== null && _m !== void 0 ? _m : false;\n        message.tradeId = (_o = object.tradeId) !== null && _o !== void 0 ? _o : \"\";\n        message.cid = (_p = object.cid) !== null && _p !== void 0 ? _p : \"\";\n        return message;\n    },\n};\nfunction createBaseStreamOrdersResponse() {\n    return { order: undefined, operationType: \"\", timestamp: \"0\" };\n}\nexport const StreamOrdersResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.order !== undefined) {\n            DerivativeLimitOrder.encode(message.order, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrdersResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.order = DerivativeLimitOrder.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            order: isSet(object.order) ? DerivativeLimitOrder.fromJSON(object.order) : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.order !== undefined && (obj.order = message.order ? DerivativeLimitOrder.toJSON(message.order) : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return StreamOrdersResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseStreamOrdersResponse();\n        message.order = (object.order !== undefined && object.order !== null)\n            ? DerivativeLimitOrder.fromPartial(object.order)\n            : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nfunction createBaseTradesRequest() {\n    return {\n        marketId: \"\",\n        executionSide: \"\",\n        direction: \"\",\n        subaccountId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        subaccountIds: [],\n        executionTypes: [],\n        tradeId: \"\",\n        accountAddress: \"\",\n        cid: \"\",\n    };\n}\nexport const TradesRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.executionSide !== \"\") {\n            writer.uint32(18).string(message.executionSide);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(26).string(message.direction);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(34).string(message.subaccountId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(40).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(48).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(56).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(64).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(74).string(v);\n        }\n        for (const v of message.subaccountIds) {\n            writer.uint32(82).string(v);\n        }\n        for (const v of message.executionTypes) {\n            writer.uint32(90).string(v);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(98).string(message.tradeId);\n        }\n        if (message.accountAddress !== \"\") {\n            writer.uint32(106).string(message.accountAddress);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(114).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTradesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.executionSide = reader.string();\n                    break;\n                case 3:\n                    message.direction = reader.string();\n                    break;\n                case 4:\n                    message.subaccountId = reader.string();\n                    break;\n                case 5:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 6:\n                    message.limit = reader.sint32();\n                    break;\n                case 7:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 9:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 10:\n                    message.subaccountIds.push(reader.string());\n                    break;\n                case 11:\n                    message.executionTypes.push(reader.string());\n                    break;\n                case 12:\n                    message.tradeId = reader.string();\n                    break;\n                case 13:\n                    message.accountAddress = reader.string();\n                    break;\n                case 14:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            executionSide: isSet(object.executionSide) ? String(object.executionSide) : \"\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            subaccountIds: Array.isArray(object === null || object === void 0 ? void 0 : object.subaccountIds) ? object.subaccountIds.map((e) => String(e)) : [],\n            executionTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.executionTypes) ? object.executionTypes.map((e) => String(e)) : [],\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            accountAddress: isSet(object.accountAddress) ? String(object.accountAddress) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.executionSide !== undefined && (obj.executionSide = message.executionSide);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        if (message.subaccountIds) {\n            obj.subaccountIds = message.subaccountIds.map((e) => e);\n        }\n        else {\n            obj.subaccountIds = [];\n        }\n        if (message.executionTypes) {\n            obj.executionTypes = message.executionTypes.map((e) => e);\n        }\n        else {\n            obj.executionTypes = [];\n        }\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return TradesRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const message = createBaseTradesRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.executionSide = (_b = object.executionSide) !== null && _b !== void 0 ? _b : \"\";\n        message.direction = (_c = object.direction) !== null && _c !== void 0 ? _c : \"\";\n        message.subaccountId = (_d = object.subaccountId) !== null && _d !== void 0 ? _d : \"\";\n        message.skip = (_e = object.skip) !== null && _e !== void 0 ? _e : \"0\";\n        message.limit = (_f = object.limit) !== null && _f !== void 0 ? _f : 0;\n        message.startTime = (_g = object.startTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.endTime = (_h = object.endTime) !== null && _h !== void 0 ? _h : \"0\";\n        message.marketIds = ((_j = object.marketIds) === null || _j === void 0 ? void 0 : _j.map((e) => e)) || [];\n        message.subaccountIds = ((_k = object.subaccountIds) === null || _k === void 0 ? void 0 : _k.map((e) => e)) || [];\n        message.executionTypes = ((_l = object.executionTypes) === null || _l === void 0 ? void 0 : _l.map((e) => e)) || [];\n        message.tradeId = (_m = object.tradeId) !== null && _m !== void 0 ? _m : \"\";\n        message.accountAddress = (_o = object.accountAddress) !== null && _o !== void 0 ? _o : \"\";\n        message.cid = (_p = object.cid) !== null && _p !== void 0 ? _p : \"\";\n        return message;\n    },\n};\nfunction createBaseTradesResponse() {\n    return { trades: [], paging: undefined };\n}\nexport const TradesResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.trades) {\n            DerivativeTrade.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTradesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.trades.push(DerivativeTrade.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            trades: Array.isArray(object === null || object === void 0 ? void 0 : object.trades) ? object.trades.map((e) => DerivativeTrade.fromJSON(e)) : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.trades) {\n            obj.trades = message.trades.map((e) => e ? DerivativeTrade.toJSON(e) : undefined);\n        }\n        else {\n            obj.trades = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return TradesResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseTradesResponse();\n        message.trades = ((_a = object.trades) === null || _a === void 0 ? void 0 : _a.map((e) => DerivativeTrade.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseDerivativeTrade() {\n    return {\n        orderHash: \"\",\n        subaccountId: \"\",\n        marketId: \"\",\n        tradeExecutionType: \"\",\n        isLiquidation: false,\n        positionDelta: undefined,\n        payout: \"\",\n        fee: \"\",\n        executedAt: \"0\",\n        feeRecipient: \"\",\n        tradeId: \"\",\n        executionSide: \"\",\n        cid: \"\",\n    };\n}\nexport const DerivativeTrade = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.orderHash !== \"\") {\n            writer.uint32(10).string(message.orderHash);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(18).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(26).string(message.marketId);\n        }\n        if (message.tradeExecutionType !== \"\") {\n            writer.uint32(34).string(message.tradeExecutionType);\n        }\n        if (message.isLiquidation === true) {\n            writer.uint32(40).bool(message.isLiquidation);\n        }\n        if (message.positionDelta !== undefined) {\n            PositionDelta.encode(message.positionDelta, writer.uint32(50).fork()).ldelim();\n        }\n        if (message.payout !== \"\") {\n            writer.uint32(58).string(message.payout);\n        }\n        if (message.fee !== \"\") {\n            writer.uint32(66).string(message.fee);\n        }\n        if (message.executedAt !== \"0\") {\n            writer.uint32(72).sint64(message.executedAt);\n        }\n        if (message.feeRecipient !== \"\") {\n            writer.uint32(82).string(message.feeRecipient);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(90).string(message.tradeId);\n        }\n        if (message.executionSide !== \"\") {\n            writer.uint32(98).string(message.executionSide);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(106).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDerivativeTrade();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderHash = reader.string();\n                    break;\n                case 2:\n                    message.subaccountId = reader.string();\n                    break;\n                case 3:\n                    message.marketId = reader.string();\n                    break;\n                case 4:\n                    message.tradeExecutionType = reader.string();\n                    break;\n                case 5:\n                    message.isLiquidation = reader.bool();\n                    break;\n                case 6:\n                    message.positionDelta = PositionDelta.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    message.payout = reader.string();\n                    break;\n                case 8:\n                    message.fee = reader.string();\n                    break;\n                case 9:\n                    message.executedAt = longToString(reader.sint64());\n                    break;\n                case 10:\n                    message.feeRecipient = reader.string();\n                    break;\n                case 11:\n                    message.tradeId = reader.string();\n                    break;\n                case 12:\n                    message.executionSide = reader.string();\n                    break;\n                case 13:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orderHash: isSet(object.orderHash) ? String(object.orderHash) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            tradeExecutionType: isSet(object.tradeExecutionType) ? String(object.tradeExecutionType) : \"\",\n            isLiquidation: isSet(object.isLiquidation) ? Boolean(object.isLiquidation) : false,\n            positionDelta: isSet(object.positionDelta) ? PositionDelta.fromJSON(object.positionDelta) : undefined,\n            payout: isSet(object.payout) ? String(object.payout) : \"\",\n            fee: isSet(object.fee) ? String(object.fee) : \"\",\n            executedAt: isSet(object.executedAt) ? String(object.executedAt) : \"0\",\n            feeRecipient: isSet(object.feeRecipient) ? String(object.feeRecipient) : \"\",\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            executionSide: isSet(object.executionSide) ? String(object.executionSide) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.orderHash !== undefined && (obj.orderHash = message.orderHash);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.tradeExecutionType !== undefined && (obj.tradeExecutionType = message.tradeExecutionType);\n        message.isLiquidation !== undefined && (obj.isLiquidation = message.isLiquidation);\n        message.positionDelta !== undefined &&\n            (obj.positionDelta = message.positionDelta ? PositionDelta.toJSON(message.positionDelta) : undefined);\n        message.payout !== undefined && (obj.payout = message.payout);\n        message.fee !== undefined && (obj.fee = message.fee);\n        message.executedAt !== undefined && (obj.executedAt = message.executedAt);\n        message.feeRecipient !== undefined && (obj.feeRecipient = message.feeRecipient);\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.executionSide !== undefined && (obj.executionSide = message.executionSide);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return DerivativeTrade.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n        const message = createBaseDerivativeTrade();\n        message.orderHash = (_a = object.orderHash) !== null && _a !== void 0 ? _a : \"\";\n        message.subaccountId = (_b = object.subaccountId) !== null && _b !== void 0 ? _b : \"\";\n        message.marketId = (_c = object.marketId) !== null && _c !== void 0 ? _c : \"\";\n        message.tradeExecutionType = (_d = object.tradeExecutionType) !== null && _d !== void 0 ? _d : \"\";\n        message.isLiquidation = (_e = object.isLiquidation) !== null && _e !== void 0 ? _e : false;\n        message.positionDelta = (object.positionDelta !== undefined && object.positionDelta !== null)\n            ? PositionDelta.fromPartial(object.positionDelta)\n            : undefined;\n        message.payout = (_f = object.payout) !== null && _f !== void 0 ? _f : \"\";\n        message.fee = (_g = object.fee) !== null && _g !== void 0 ? _g : \"\";\n        message.executedAt = (_h = object.executedAt) !== null && _h !== void 0 ? _h : \"0\";\n        message.feeRecipient = (_j = object.feeRecipient) !== null && _j !== void 0 ? _j : \"\";\n        message.tradeId = (_k = object.tradeId) !== null && _k !== void 0 ? _k : \"\";\n        message.executionSide = (_l = object.executionSide) !== null && _l !== void 0 ? _l : \"\";\n        message.cid = (_m = object.cid) !== null && _m !== void 0 ? _m : \"\";\n        return message;\n    },\n};\nfunction createBasePositionDelta() {\n    return { tradeDirection: \"\", executionPrice: \"\", executionQuantity: \"\", executionMargin: \"\" };\n}\nexport const PositionDelta = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.tradeDirection !== \"\") {\n            writer.uint32(10).string(message.tradeDirection);\n        }\n        if (message.executionPrice !== \"\") {\n            writer.uint32(18).string(message.executionPrice);\n        }\n        if (message.executionQuantity !== \"\") {\n            writer.uint32(26).string(message.executionQuantity);\n        }\n        if (message.executionMargin !== \"\") {\n            writer.uint32(34).string(message.executionMargin);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBasePositionDelta();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.tradeDirection = reader.string();\n                    break;\n                case 2:\n                    message.executionPrice = reader.string();\n                    break;\n                case 3:\n                    message.executionQuantity = reader.string();\n                    break;\n                case 4:\n                    message.executionMargin = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            tradeDirection: isSet(object.tradeDirection) ? String(object.tradeDirection) : \"\",\n            executionPrice: isSet(object.executionPrice) ? String(object.executionPrice) : \"\",\n            executionQuantity: isSet(object.executionQuantity) ? String(object.executionQuantity) : \"\",\n            executionMargin: isSet(object.executionMargin) ? String(object.executionMargin) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.tradeDirection !== undefined && (obj.tradeDirection = message.tradeDirection);\n        message.executionPrice !== undefined && (obj.executionPrice = message.executionPrice);\n        message.executionQuantity !== undefined && (obj.executionQuantity = message.executionQuantity);\n        message.executionMargin !== undefined && (obj.executionMargin = message.executionMargin);\n        return obj;\n    },\n    create(base) {\n        return PositionDelta.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBasePositionDelta();\n        message.tradeDirection = (_a = object.tradeDirection) !== null && _a !== void 0 ? _a : \"\";\n        message.executionPrice = (_b = object.executionPrice) !== null && _b !== void 0 ? _b : \"\";\n        message.executionQuantity = (_c = object.executionQuantity) !== null && _c !== void 0 ? _c : \"\";\n        message.executionMargin = (_d = object.executionMargin) !== null && _d !== void 0 ? _d : \"\";\n        return message;\n    },\n};\nfunction createBaseTradesV2Request() {\n    return {\n        marketId: \"\",\n        executionSide: \"\",\n        direction: \"\",\n        subaccountId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        subaccountIds: [],\n        executionTypes: [],\n        tradeId: \"\",\n        accountAddress: \"\",\n        cid: \"\",\n    };\n}\nexport const TradesV2Request = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.executionSide !== \"\") {\n            writer.uint32(18).string(message.executionSide);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(26).string(message.direction);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(34).string(message.subaccountId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(40).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(48).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(56).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(64).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(74).string(v);\n        }\n        for (const v of message.subaccountIds) {\n            writer.uint32(82).string(v);\n        }\n        for (const v of message.executionTypes) {\n            writer.uint32(90).string(v);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(98).string(message.tradeId);\n        }\n        if (message.accountAddress !== \"\") {\n            writer.uint32(106).string(message.accountAddress);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(114).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTradesV2Request();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.executionSide = reader.string();\n                    break;\n                case 3:\n                    message.direction = reader.string();\n                    break;\n                case 4:\n                    message.subaccountId = reader.string();\n                    break;\n                case 5:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 6:\n                    message.limit = reader.sint32();\n                    break;\n                case 7:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 9:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 10:\n                    message.subaccountIds.push(reader.string());\n                    break;\n                case 11:\n                    message.executionTypes.push(reader.string());\n                    break;\n                case 12:\n                    message.tradeId = reader.string();\n                    break;\n                case 13:\n                    message.accountAddress = reader.string();\n                    break;\n                case 14:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            executionSide: isSet(object.executionSide) ? String(object.executionSide) : \"\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            subaccountIds: Array.isArray(object === null || object === void 0 ? void 0 : object.subaccountIds) ? object.subaccountIds.map((e) => String(e)) : [],\n            executionTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.executionTypes) ? object.executionTypes.map((e) => String(e)) : [],\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            accountAddress: isSet(object.accountAddress) ? String(object.accountAddress) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.executionSide !== undefined && (obj.executionSide = message.executionSide);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        if (message.subaccountIds) {\n            obj.subaccountIds = message.subaccountIds.map((e) => e);\n        }\n        else {\n            obj.subaccountIds = [];\n        }\n        if (message.executionTypes) {\n            obj.executionTypes = message.executionTypes.map((e) => e);\n        }\n        else {\n            obj.executionTypes = [];\n        }\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return TradesV2Request.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const message = createBaseTradesV2Request();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.executionSide = (_b = object.executionSide) !== null && _b !== void 0 ? _b : \"\";\n        message.direction = (_c = object.direction) !== null && _c !== void 0 ? _c : \"\";\n        message.subaccountId = (_d = object.subaccountId) !== null && _d !== void 0 ? _d : \"\";\n        message.skip = (_e = object.skip) !== null && _e !== void 0 ? _e : \"0\";\n        message.limit = (_f = object.limit) !== null && _f !== void 0 ? _f : 0;\n        message.startTime = (_g = object.startTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.endTime = (_h = object.endTime) !== null && _h !== void 0 ? _h : \"0\";\n        message.marketIds = ((_j = object.marketIds) === null || _j === void 0 ? void 0 : _j.map((e) => e)) || [];\n        message.subaccountIds = ((_k = object.subaccountIds) === null || _k === void 0 ? void 0 : _k.map((e) => e)) || [];\n        message.executionTypes = ((_l = object.executionTypes) === null || _l === void 0 ? void 0 : _l.map((e) => e)) || [];\n        message.tradeId = (_m = object.tradeId) !== null && _m !== void 0 ? _m : \"\";\n        message.accountAddress = (_o = object.accountAddress) !== null && _o !== void 0 ? _o : \"\";\n        message.cid = (_p = object.cid) !== null && _p !== void 0 ? _p : \"\";\n        return message;\n    },\n};\nfunction createBaseTradesV2Response() {\n    return { trades: [], paging: undefined };\n}\nexport const TradesV2Response = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.trades) {\n            DerivativeTrade.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseTradesV2Response();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.trades.push(DerivativeTrade.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            trades: Array.isArray(object === null || object === void 0 ? void 0 : object.trades) ? object.trades.map((e) => DerivativeTrade.fromJSON(e)) : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.trades) {\n            obj.trades = message.trades.map((e) => e ? DerivativeTrade.toJSON(e) : undefined);\n        }\n        else {\n            obj.trades = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return TradesV2Response.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseTradesV2Response();\n        message.trades = ((_a = object.trades) === null || _a === void 0 ? void 0 : _a.map((e) => DerivativeTrade.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseStreamTradesRequest() {\n    return {\n        marketId: \"\",\n        executionSide: \"\",\n        direction: \"\",\n        subaccountId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        subaccountIds: [],\n        executionTypes: [],\n        tradeId: \"\",\n        accountAddress: \"\",\n        cid: \"\",\n    };\n}\nexport const StreamTradesRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.executionSide !== \"\") {\n            writer.uint32(18).string(message.executionSide);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(26).string(message.direction);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(34).string(message.subaccountId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(40).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(48).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(56).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(64).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(74).string(v);\n        }\n        for (const v of message.subaccountIds) {\n            writer.uint32(82).string(v);\n        }\n        for (const v of message.executionTypes) {\n            writer.uint32(90).string(v);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(98).string(message.tradeId);\n        }\n        if (message.accountAddress !== \"\") {\n            writer.uint32(106).string(message.accountAddress);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(114).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamTradesRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.executionSide = reader.string();\n                    break;\n                case 3:\n                    message.direction = reader.string();\n                    break;\n                case 4:\n                    message.subaccountId = reader.string();\n                    break;\n                case 5:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 6:\n                    message.limit = reader.sint32();\n                    break;\n                case 7:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 9:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 10:\n                    message.subaccountIds.push(reader.string());\n                    break;\n                case 11:\n                    message.executionTypes.push(reader.string());\n                    break;\n                case 12:\n                    message.tradeId = reader.string();\n                    break;\n                case 13:\n                    message.accountAddress = reader.string();\n                    break;\n                case 14:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            executionSide: isSet(object.executionSide) ? String(object.executionSide) : \"\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            subaccountIds: Array.isArray(object === null || object === void 0 ? void 0 : object.subaccountIds) ? object.subaccountIds.map((e) => String(e)) : [],\n            executionTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.executionTypes) ? object.executionTypes.map((e) => String(e)) : [],\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            accountAddress: isSet(object.accountAddress) ? String(object.accountAddress) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.executionSide !== undefined && (obj.executionSide = message.executionSide);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        if (message.subaccountIds) {\n            obj.subaccountIds = message.subaccountIds.map((e) => e);\n        }\n        else {\n            obj.subaccountIds = [];\n        }\n        if (message.executionTypes) {\n            obj.executionTypes = message.executionTypes.map((e) => e);\n        }\n        else {\n            obj.executionTypes = [];\n        }\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return StreamTradesRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const message = createBaseStreamTradesRequest();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.executionSide = (_b = object.executionSide) !== null && _b !== void 0 ? _b : \"\";\n        message.direction = (_c = object.direction) !== null && _c !== void 0 ? _c : \"\";\n        message.subaccountId = (_d = object.subaccountId) !== null && _d !== void 0 ? _d : \"\";\n        message.skip = (_e = object.skip) !== null && _e !== void 0 ? _e : \"0\";\n        message.limit = (_f = object.limit) !== null && _f !== void 0 ? _f : 0;\n        message.startTime = (_g = object.startTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.endTime = (_h = object.endTime) !== null && _h !== void 0 ? _h : \"0\";\n        message.marketIds = ((_j = object.marketIds) === null || _j === void 0 ? void 0 : _j.map((e) => e)) || [];\n        message.subaccountIds = ((_k = object.subaccountIds) === null || _k === void 0 ? void 0 : _k.map((e) => e)) || [];\n        message.executionTypes = ((_l = object.executionTypes) === null || _l === void 0 ? void 0 : _l.map((e) => e)) || [];\n        message.tradeId = (_m = object.tradeId) !== null && _m !== void 0 ? _m : \"\";\n        message.accountAddress = (_o = object.accountAddress) !== null && _o !== void 0 ? _o : \"\";\n        message.cid = (_p = object.cid) !== null && _p !== void 0 ? _p : \"\";\n        return message;\n    },\n};\nfunction createBaseStreamTradesResponse() {\n    return { trade: undefined, operationType: \"\", timestamp: \"0\" };\n}\nexport const StreamTradesResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.trade !== undefined) {\n            DerivativeTrade.encode(message.trade, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamTradesResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.trade = DerivativeTrade.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            trade: isSet(object.trade) ? DerivativeTrade.fromJSON(object.trade) : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.trade !== undefined && (obj.trade = message.trade ? DerivativeTrade.toJSON(message.trade) : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return StreamTradesResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseStreamTradesResponse();\n        message.trade = (object.trade !== undefined && object.trade !== null)\n            ? DerivativeTrade.fromPartial(object.trade)\n            : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nfunction createBaseStreamTradesV2Request() {\n    return {\n        marketId: \"\",\n        executionSide: \"\",\n        direction: \"\",\n        subaccountId: \"\",\n        skip: \"0\",\n        limit: 0,\n        startTime: \"0\",\n        endTime: \"0\",\n        marketIds: [],\n        subaccountIds: [],\n        executionTypes: [],\n        tradeId: \"\",\n        accountAddress: \"\",\n        cid: \"\",\n    };\n}\nexport const StreamTradesV2Request = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.marketId !== \"\") {\n            writer.uint32(10).string(message.marketId);\n        }\n        if (message.executionSide !== \"\") {\n            writer.uint32(18).string(message.executionSide);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(26).string(message.direction);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(34).string(message.subaccountId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(40).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(48).sint32(message.limit);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(56).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(64).sint64(message.endTime);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(74).string(v);\n        }\n        for (const v of message.subaccountIds) {\n            writer.uint32(82).string(v);\n        }\n        for (const v of message.executionTypes) {\n            writer.uint32(90).string(v);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(98).string(message.tradeId);\n        }\n        if (message.accountAddress !== \"\") {\n            writer.uint32(106).string(message.accountAddress);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(114).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamTradesV2Request();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.marketId = reader.string();\n                    break;\n                case 2:\n                    message.executionSide = reader.string();\n                    break;\n                case 3:\n                    message.direction = reader.string();\n                    break;\n                case 4:\n                    message.subaccountId = reader.string();\n                    break;\n                case 5:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 6:\n                    message.limit = reader.sint32();\n                    break;\n                case 7:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 9:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 10:\n                    message.subaccountIds.push(reader.string());\n                    break;\n                case 11:\n                    message.executionTypes.push(reader.string());\n                    break;\n                case 12:\n                    message.tradeId = reader.string();\n                    break;\n                case 13:\n                    message.accountAddress = reader.string();\n                    break;\n                case 14:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            executionSide: isSet(object.executionSide) ? String(object.executionSide) : \"\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            subaccountIds: Array.isArray(object === null || object === void 0 ? void 0 : object.subaccountIds) ? object.subaccountIds.map((e) => String(e)) : [],\n            executionTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.executionTypes) ? object.executionTypes.map((e) => String(e)) : [],\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            accountAddress: isSet(object.accountAddress) ? String(object.accountAddress) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.executionSide !== undefined && (obj.executionSide = message.executionSide);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        if (message.subaccountIds) {\n            obj.subaccountIds = message.subaccountIds.map((e) => e);\n        }\n        else {\n            obj.subaccountIds = [];\n        }\n        if (message.executionTypes) {\n            obj.executionTypes = message.executionTypes.map((e) => e);\n        }\n        else {\n            obj.executionTypes = [];\n        }\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.accountAddress !== undefined && (obj.accountAddress = message.accountAddress);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return StreamTradesV2Request.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n        const message = createBaseStreamTradesV2Request();\n        message.marketId = (_a = object.marketId) !== null && _a !== void 0 ? _a : \"\";\n        message.executionSide = (_b = object.executionSide) !== null && _b !== void 0 ? _b : \"\";\n        message.direction = (_c = object.direction) !== null && _c !== void 0 ? _c : \"\";\n        message.subaccountId = (_d = object.subaccountId) !== null && _d !== void 0 ? _d : \"\";\n        message.skip = (_e = object.skip) !== null && _e !== void 0 ? _e : \"0\";\n        message.limit = (_f = object.limit) !== null && _f !== void 0 ? _f : 0;\n        message.startTime = (_g = object.startTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.endTime = (_h = object.endTime) !== null && _h !== void 0 ? _h : \"0\";\n        message.marketIds = ((_j = object.marketIds) === null || _j === void 0 ? void 0 : _j.map((e) => e)) || [];\n        message.subaccountIds = ((_k = object.subaccountIds) === null || _k === void 0 ? void 0 : _k.map((e) => e)) || [];\n        message.executionTypes = ((_l = object.executionTypes) === null || _l === void 0 ? void 0 : _l.map((e) => e)) || [];\n        message.tradeId = (_m = object.tradeId) !== null && _m !== void 0 ? _m : \"\";\n        message.accountAddress = (_o = object.accountAddress) !== null && _o !== void 0 ? _o : \"\";\n        message.cid = (_p = object.cid) !== null && _p !== void 0 ? _p : \"\";\n        return message;\n    },\n};\nfunction createBaseStreamTradesV2Response() {\n    return { trade: undefined, operationType: \"\", timestamp: \"0\" };\n}\nexport const StreamTradesV2Response = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.trade !== undefined) {\n            DerivativeTrade.encode(message.trade, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamTradesV2Response();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.trade = DerivativeTrade.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            trade: isSet(object.trade) ? DerivativeTrade.fromJSON(object.trade) : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.trade !== undefined && (obj.trade = message.trade ? DerivativeTrade.toJSON(message.trade) : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return StreamTradesV2Response.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseStreamTradesV2Response();\n        message.trade = (object.trade !== undefined && object.trade !== null)\n            ? DerivativeTrade.fromPartial(object.trade)\n            : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nfunction createBaseSubaccountOrdersListRequest() {\n    return { subaccountId: \"\", marketId: \"\", skip: \"0\", limit: 0 };\n}\nexport const SubaccountOrdersListRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.subaccountId !== \"\") {\n            writer.uint32(10).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(24).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(32).sint32(message.limit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSubaccountOrdersListRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subaccountId = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 4:\n                    message.limit = reader.sint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        return obj;\n    },\n    create(base) {\n        return SubaccountOrdersListRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d;\n        const message = createBaseSubaccountOrdersListRequest();\n        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.skip = (_c = object.skip) !== null && _c !== void 0 ? _c : \"0\";\n        message.limit = (_d = object.limit) !== null && _d !== void 0 ? _d : 0;\n        return message;\n    },\n};\nfunction createBaseSubaccountOrdersListResponse() {\n    return { orders: [], paging: undefined };\n}\nexport const SubaccountOrdersListResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.orders) {\n            DerivativeLimitOrder.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSubaccountOrdersListResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orders.push(DerivativeLimitOrder.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orders: Array.isArray(object === null || object === void 0 ? void 0 : object.orders) ? object.orders.map((e) => DerivativeLimitOrder.fromJSON(e)) : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.orders) {\n            obj.orders = message.orders.map((e) => e ? DerivativeLimitOrder.toJSON(e) : undefined);\n        }\n        else {\n            obj.orders = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return SubaccountOrdersListResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseSubaccountOrdersListResponse();\n        message.orders = ((_a = object.orders) === null || _a === void 0 ? void 0 : _a.map((e) => DerivativeLimitOrder.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseSubaccountTradesListRequest() {\n    return { subaccountId: \"\", marketId: \"\", executionType: \"\", direction: \"\", skip: \"0\", limit: 0 };\n}\nexport const SubaccountTradesListRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.subaccountId !== \"\") {\n            writer.uint32(10).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.executionType !== \"\") {\n            writer.uint32(26).string(message.executionType);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(34).string(message.direction);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(40).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(48).sint32(message.limit);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSubaccountTradesListRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subaccountId = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.executionType = reader.string();\n                    break;\n                case 4:\n                    message.direction = reader.string();\n                    break;\n                case 5:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 6:\n                    message.limit = reader.sint32();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            executionType: isSet(object.executionType) ? String(object.executionType) : \"\",\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.executionType !== undefined && (obj.executionType = message.executionType);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        return obj;\n    },\n    create(base) {\n        return SubaccountTradesListRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f;\n        const message = createBaseSubaccountTradesListRequest();\n        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.executionType = (_c = object.executionType) !== null && _c !== void 0 ? _c : \"\";\n        message.direction = (_d = object.direction) !== null && _d !== void 0 ? _d : \"\";\n        message.skip = (_e = object.skip) !== null && _e !== void 0 ? _e : \"0\";\n        message.limit = (_f = object.limit) !== null && _f !== void 0 ? _f : 0;\n        return message;\n    },\n};\nfunction createBaseSubaccountTradesListResponse() {\n    return { trades: [] };\n}\nexport const SubaccountTradesListResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.trades) {\n            DerivativeTrade.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseSubaccountTradesListResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.trades.push(DerivativeTrade.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return { trades: Array.isArray(object === null || object === void 0 ? void 0 : object.trades) ? object.trades.map((e) => DerivativeTrade.fromJSON(e)) : [] };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.trades) {\n            obj.trades = message.trades.map((e) => e ? DerivativeTrade.toJSON(e) : undefined);\n        }\n        else {\n            obj.trades = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return SubaccountTradesListResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseSubaccountTradesListResponse();\n        message.trades = ((_a = object.trades) === null || _a === void 0 ? void 0 : _a.map((e) => DerivativeTrade.fromPartial(e))) || [];\n        return message;\n    },\n};\nfunction createBaseOrdersHistoryRequest() {\n    return {\n        subaccountId: \"\",\n        marketId: \"\",\n        skip: \"0\",\n        limit: 0,\n        orderTypes: [],\n        direction: \"\",\n        startTime: \"0\",\n        endTime: \"0\",\n        isConditional: \"\",\n        orderType: \"\",\n        state: \"\",\n        executionTypes: [],\n        marketIds: [],\n        tradeId: \"\",\n        activeMarketsOnly: false,\n        cid: \"\",\n    };\n}\nexport const OrdersHistoryRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.subaccountId !== \"\") {\n            writer.uint32(10).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.skip !== \"0\") {\n            writer.uint32(24).uint64(message.skip);\n        }\n        if (message.limit !== 0) {\n            writer.uint32(32).sint32(message.limit);\n        }\n        for (const v of message.orderTypes) {\n            writer.uint32(42).string(v);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(50).string(message.direction);\n        }\n        if (message.startTime !== \"0\") {\n            writer.uint32(56).sint64(message.startTime);\n        }\n        if (message.endTime !== \"0\") {\n            writer.uint32(64).sint64(message.endTime);\n        }\n        if (message.isConditional !== \"\") {\n            writer.uint32(74).string(message.isConditional);\n        }\n        if (message.orderType !== \"\") {\n            writer.uint32(82).string(message.orderType);\n        }\n        if (message.state !== \"\") {\n            writer.uint32(90).string(message.state);\n        }\n        for (const v of message.executionTypes) {\n            writer.uint32(98).string(v);\n        }\n        for (const v of message.marketIds) {\n            writer.uint32(106).string(v);\n        }\n        if (message.tradeId !== \"\") {\n            writer.uint32(114).string(message.tradeId);\n        }\n        if (message.activeMarketsOnly === true) {\n            writer.uint32(120).bool(message.activeMarketsOnly);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(130).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrdersHistoryRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subaccountId = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.skip = longToString(reader.uint64());\n                    break;\n                case 4:\n                    message.limit = reader.sint32();\n                    break;\n                case 5:\n                    message.orderTypes.push(reader.string());\n                    break;\n                case 6:\n                    message.direction = reader.string();\n                    break;\n                case 7:\n                    message.startTime = longToString(reader.sint64());\n                    break;\n                case 8:\n                    message.endTime = longToString(reader.sint64());\n                    break;\n                case 9:\n                    message.isConditional = reader.string();\n                    break;\n                case 10:\n                    message.orderType = reader.string();\n                    break;\n                case 11:\n                    message.state = reader.string();\n                    break;\n                case 12:\n                    message.executionTypes.push(reader.string());\n                    break;\n                case 13:\n                    message.marketIds.push(reader.string());\n                    break;\n                case 14:\n                    message.tradeId = reader.string();\n                    break;\n                case 15:\n                    message.activeMarketsOnly = reader.bool();\n                    break;\n                case 16:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            skip: isSet(object.skip) ? String(object.skip) : \"0\",\n            limit: isSet(object.limit) ? Number(object.limit) : 0,\n            orderTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.orderTypes) ? object.orderTypes.map((e) => String(e)) : [],\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            startTime: isSet(object.startTime) ? String(object.startTime) : \"0\",\n            endTime: isSet(object.endTime) ? String(object.endTime) : \"0\",\n            isConditional: isSet(object.isConditional) ? String(object.isConditional) : \"\",\n            orderType: isSet(object.orderType) ? String(object.orderType) : \"\",\n            state: isSet(object.state) ? String(object.state) : \"\",\n            executionTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.executionTypes) ? object.executionTypes.map((e) => String(e)) : [],\n            marketIds: Array.isArray(object === null || object === void 0 ? void 0 : object.marketIds) ? object.marketIds.map((e) => String(e)) : [],\n            tradeId: isSet(object.tradeId) ? String(object.tradeId) : \"\",\n            activeMarketsOnly: isSet(object.activeMarketsOnly) ? Boolean(object.activeMarketsOnly) : false,\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.skip !== undefined && (obj.skip = message.skip);\n        message.limit !== undefined && (obj.limit = Math.round(message.limit));\n        if (message.orderTypes) {\n            obj.orderTypes = message.orderTypes.map((e) => e);\n        }\n        else {\n            obj.orderTypes = [];\n        }\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.startTime !== undefined && (obj.startTime = message.startTime);\n        message.endTime !== undefined && (obj.endTime = message.endTime);\n        message.isConditional !== undefined && (obj.isConditional = message.isConditional);\n        message.orderType !== undefined && (obj.orderType = message.orderType);\n        message.state !== undefined && (obj.state = message.state);\n        if (message.executionTypes) {\n            obj.executionTypes = message.executionTypes.map((e) => e);\n        }\n        else {\n            obj.executionTypes = [];\n        }\n        if (message.marketIds) {\n            obj.marketIds = message.marketIds.map((e) => e);\n        }\n        else {\n            obj.marketIds = [];\n        }\n        message.tradeId !== undefined && (obj.tradeId = message.tradeId);\n        message.activeMarketsOnly !== undefined && (obj.activeMarketsOnly = message.activeMarketsOnly);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return OrdersHistoryRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r;\n        const message = createBaseOrdersHistoryRequest();\n        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.skip = (_c = object.skip) !== null && _c !== void 0 ? _c : \"0\";\n        message.limit = (_d = object.limit) !== null && _d !== void 0 ? _d : 0;\n        message.orderTypes = ((_e = object.orderTypes) === null || _e === void 0 ? void 0 : _e.map((e) => e)) || [];\n        message.direction = (_f = object.direction) !== null && _f !== void 0 ? _f : \"\";\n        message.startTime = (_g = object.startTime) !== null && _g !== void 0 ? _g : \"0\";\n        message.endTime = (_h = object.endTime) !== null && _h !== void 0 ? _h : \"0\";\n        message.isConditional = (_j = object.isConditional) !== null && _j !== void 0 ? _j : \"\";\n        message.orderType = (_k = object.orderType) !== null && _k !== void 0 ? _k : \"\";\n        message.state = (_l = object.state) !== null && _l !== void 0 ? _l : \"\";\n        message.executionTypes = ((_m = object.executionTypes) === null || _m === void 0 ? void 0 : _m.map((e) => e)) || [];\n        message.marketIds = ((_o = object.marketIds) === null || _o === void 0 ? void 0 : _o.map((e) => e)) || [];\n        message.tradeId = (_p = object.tradeId) !== null && _p !== void 0 ? _p : \"\";\n        message.activeMarketsOnly = (_q = object.activeMarketsOnly) !== null && _q !== void 0 ? _q : false;\n        message.cid = (_r = object.cid) !== null && _r !== void 0 ? _r : \"\";\n        return message;\n    },\n};\nfunction createBaseOrdersHistoryResponse() {\n    return { orders: [], paging: undefined };\n}\nexport const OrdersHistoryResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        for (const v of message.orders) {\n            DerivativeOrderHistory.encode(v, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.paging !== undefined) {\n            Paging.encode(message.paging, writer.uint32(18).fork()).ldelim();\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseOrdersHistoryResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orders.push(DerivativeOrderHistory.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.paging = Paging.decode(reader, reader.uint32());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orders: Array.isArray(object === null || object === void 0 ? void 0 : object.orders) ? object.orders.map((e) => DerivativeOrderHistory.fromJSON(e)) : [],\n            paging: isSet(object.paging) ? Paging.fromJSON(object.paging) : undefined,\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        if (message.orders) {\n            obj.orders = message.orders.map((e) => e ? DerivativeOrderHistory.toJSON(e) : undefined);\n        }\n        else {\n            obj.orders = [];\n        }\n        message.paging !== undefined && (obj.paging = message.paging ? Paging.toJSON(message.paging) : undefined);\n        return obj;\n    },\n    create(base) {\n        return OrdersHistoryResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a;\n        const message = createBaseOrdersHistoryResponse();\n        message.orders = ((_a = object.orders) === null || _a === void 0 ? void 0 : _a.map((e) => DerivativeOrderHistory.fromPartial(e))) || [];\n        message.paging = (object.paging !== undefined && object.paging !== null)\n            ? Paging.fromPartial(object.paging)\n            : undefined;\n        return message;\n    },\n};\nfunction createBaseDerivativeOrderHistory() {\n    return {\n        orderHash: \"\",\n        marketId: \"\",\n        isActive: false,\n        subaccountId: \"\",\n        executionType: \"\",\n        orderType: \"\",\n        price: \"\",\n        triggerPrice: \"\",\n        quantity: \"\",\n        filledQuantity: \"\",\n        state: \"\",\n        createdAt: \"0\",\n        updatedAt: \"0\",\n        isReduceOnly: false,\n        direction: \"\",\n        isConditional: false,\n        triggerAt: \"0\",\n        placedOrderHash: \"\",\n        margin: \"\",\n        txHash: \"\",\n        cid: \"\",\n    };\n}\nexport const DerivativeOrderHistory = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.orderHash !== \"\") {\n            writer.uint32(10).string(message.orderHash);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        if (message.isActive === true) {\n            writer.uint32(24).bool(message.isActive);\n        }\n        if (message.subaccountId !== \"\") {\n            writer.uint32(34).string(message.subaccountId);\n        }\n        if (message.executionType !== \"\") {\n            writer.uint32(42).string(message.executionType);\n        }\n        if (message.orderType !== \"\") {\n            writer.uint32(50).string(message.orderType);\n        }\n        if (message.price !== \"\") {\n            writer.uint32(58).string(message.price);\n        }\n        if (message.triggerPrice !== \"\") {\n            writer.uint32(66).string(message.triggerPrice);\n        }\n        if (message.quantity !== \"\") {\n            writer.uint32(74).string(message.quantity);\n        }\n        if (message.filledQuantity !== \"\") {\n            writer.uint32(82).string(message.filledQuantity);\n        }\n        if (message.state !== \"\") {\n            writer.uint32(90).string(message.state);\n        }\n        if (message.createdAt !== \"0\") {\n            writer.uint32(96).sint64(message.createdAt);\n        }\n        if (message.updatedAt !== \"0\") {\n            writer.uint32(104).sint64(message.updatedAt);\n        }\n        if (message.isReduceOnly === true) {\n            writer.uint32(112).bool(message.isReduceOnly);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(122).string(message.direction);\n        }\n        if (message.isConditional === true) {\n            writer.uint32(128).bool(message.isConditional);\n        }\n        if (message.triggerAt !== \"0\") {\n            writer.uint32(136).uint64(message.triggerAt);\n        }\n        if (message.placedOrderHash !== \"\") {\n            writer.uint32(146).string(message.placedOrderHash);\n        }\n        if (message.margin !== \"\") {\n            writer.uint32(154).string(message.margin);\n        }\n        if (message.txHash !== \"\") {\n            writer.uint32(162).string(message.txHash);\n        }\n        if (message.cid !== \"\") {\n            writer.uint32(170).string(message.cid);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseDerivativeOrderHistory();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.orderHash = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.isActive = reader.bool();\n                    break;\n                case 4:\n                    message.subaccountId = reader.string();\n                    break;\n                case 5:\n                    message.executionType = reader.string();\n                    break;\n                case 6:\n                    message.orderType = reader.string();\n                    break;\n                case 7:\n                    message.price = reader.string();\n                    break;\n                case 8:\n                    message.triggerPrice = reader.string();\n                    break;\n                case 9:\n                    message.quantity = reader.string();\n                    break;\n                case 10:\n                    message.filledQuantity = reader.string();\n                    break;\n                case 11:\n                    message.state = reader.string();\n                    break;\n                case 12:\n                    message.createdAt = longToString(reader.sint64());\n                    break;\n                case 13:\n                    message.updatedAt = longToString(reader.sint64());\n                    break;\n                case 14:\n                    message.isReduceOnly = reader.bool();\n                    break;\n                case 15:\n                    message.direction = reader.string();\n                    break;\n                case 16:\n                    message.isConditional = reader.bool();\n                    break;\n                case 17:\n                    message.triggerAt = longToString(reader.uint64());\n                    break;\n                case 18:\n                    message.placedOrderHash = reader.string();\n                    break;\n                case 19:\n                    message.margin = reader.string();\n                    break;\n                case 20:\n                    message.txHash = reader.string();\n                    break;\n                case 21:\n                    message.cid = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            orderHash: isSet(object.orderHash) ? String(object.orderHash) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            isActive: isSet(object.isActive) ? Boolean(object.isActive) : false,\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            executionType: isSet(object.executionType) ? String(object.executionType) : \"\",\n            orderType: isSet(object.orderType) ? String(object.orderType) : \"\",\n            price: isSet(object.price) ? String(object.price) : \"\",\n            triggerPrice: isSet(object.triggerPrice) ? String(object.triggerPrice) : \"\",\n            quantity: isSet(object.quantity) ? String(object.quantity) : \"\",\n            filledQuantity: isSet(object.filledQuantity) ? String(object.filledQuantity) : \"\",\n            state: isSet(object.state) ? String(object.state) : \"\",\n            createdAt: isSet(object.createdAt) ? String(object.createdAt) : \"0\",\n            updatedAt: isSet(object.updatedAt) ? String(object.updatedAt) : \"0\",\n            isReduceOnly: isSet(object.isReduceOnly) ? Boolean(object.isReduceOnly) : false,\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            isConditional: isSet(object.isConditional) ? Boolean(object.isConditional) : false,\n            triggerAt: isSet(object.triggerAt) ? String(object.triggerAt) : \"0\",\n            placedOrderHash: isSet(object.placedOrderHash) ? String(object.placedOrderHash) : \"\",\n            margin: isSet(object.margin) ? String(object.margin) : \"\",\n            txHash: isSet(object.txHash) ? String(object.txHash) : \"\",\n            cid: isSet(object.cid) ? String(object.cid) : \"\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.orderHash !== undefined && (obj.orderHash = message.orderHash);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        message.isActive !== undefined && (obj.isActive = message.isActive);\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.executionType !== undefined && (obj.executionType = message.executionType);\n        message.orderType !== undefined && (obj.orderType = message.orderType);\n        message.price !== undefined && (obj.price = message.price);\n        message.triggerPrice !== undefined && (obj.triggerPrice = message.triggerPrice);\n        message.quantity !== undefined && (obj.quantity = message.quantity);\n        message.filledQuantity !== undefined && (obj.filledQuantity = message.filledQuantity);\n        message.state !== undefined && (obj.state = message.state);\n        message.createdAt !== undefined && (obj.createdAt = message.createdAt);\n        message.updatedAt !== undefined && (obj.updatedAt = message.updatedAt);\n        message.isReduceOnly !== undefined && (obj.isReduceOnly = message.isReduceOnly);\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.isConditional !== undefined && (obj.isConditional = message.isConditional);\n        message.triggerAt !== undefined && (obj.triggerAt = message.triggerAt);\n        message.placedOrderHash !== undefined && (obj.placedOrderHash = message.placedOrderHash);\n        message.margin !== undefined && (obj.margin = message.margin);\n        message.txHash !== undefined && (obj.txHash = message.txHash);\n        message.cid !== undefined && (obj.cid = message.cid);\n        return obj;\n    },\n    create(base) {\n        return DerivativeOrderHistory.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p, _q, _r, _s, _t, _u, _v, _w;\n        const message = createBaseDerivativeOrderHistory();\n        message.orderHash = (_a = object.orderHash) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.isActive = (_c = object.isActive) !== null && _c !== void 0 ? _c : false;\n        message.subaccountId = (_d = object.subaccountId) !== null && _d !== void 0 ? _d : \"\";\n        message.executionType = (_e = object.executionType) !== null && _e !== void 0 ? _e : \"\";\n        message.orderType = (_f = object.orderType) !== null && _f !== void 0 ? _f : \"\";\n        message.price = (_g = object.price) !== null && _g !== void 0 ? _g : \"\";\n        message.triggerPrice = (_h = object.triggerPrice) !== null && _h !== void 0 ? _h : \"\";\n        message.quantity = (_j = object.quantity) !== null && _j !== void 0 ? _j : \"\";\n        message.filledQuantity = (_k = object.filledQuantity) !== null && _k !== void 0 ? _k : \"\";\n        message.state = (_l = object.state) !== null && _l !== void 0 ? _l : \"\";\n        message.createdAt = (_m = object.createdAt) !== null && _m !== void 0 ? _m : \"0\";\n        message.updatedAt = (_o = object.updatedAt) !== null && _o !== void 0 ? _o : \"0\";\n        message.isReduceOnly = (_p = object.isReduceOnly) !== null && _p !== void 0 ? _p : false;\n        message.direction = (_q = object.direction) !== null && _q !== void 0 ? _q : \"\";\n        message.isConditional = (_r = object.isConditional) !== null && _r !== void 0 ? _r : false;\n        message.triggerAt = (_s = object.triggerAt) !== null && _s !== void 0 ? _s : \"0\";\n        message.placedOrderHash = (_t = object.placedOrderHash) !== null && _t !== void 0 ? _t : \"\";\n        message.margin = (_u = object.margin) !== null && _u !== void 0 ? _u : \"\";\n        message.txHash = (_v = object.txHash) !== null && _v !== void 0 ? _v : \"\";\n        message.cid = (_w = object.cid) !== null && _w !== void 0 ? _w : \"\";\n        return message;\n    },\n};\nfunction createBaseStreamOrdersHistoryRequest() {\n    return { subaccountId: \"\", marketId: \"\", orderTypes: [], direction: \"\", state: \"\", executionTypes: [] };\n}\nexport const StreamOrdersHistoryRequest = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.subaccountId !== \"\") {\n            writer.uint32(10).string(message.subaccountId);\n        }\n        if (message.marketId !== \"\") {\n            writer.uint32(18).string(message.marketId);\n        }\n        for (const v of message.orderTypes) {\n            writer.uint32(26).string(v);\n        }\n        if (message.direction !== \"\") {\n            writer.uint32(34).string(message.direction);\n        }\n        if (message.state !== \"\") {\n            writer.uint32(42).string(message.state);\n        }\n        for (const v of message.executionTypes) {\n            writer.uint32(50).string(v);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrdersHistoryRequest();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.subaccountId = reader.string();\n                    break;\n                case 2:\n                    message.marketId = reader.string();\n                    break;\n                case 3:\n                    message.orderTypes.push(reader.string());\n                    break;\n                case 4:\n                    message.direction = reader.string();\n                    break;\n                case 5:\n                    message.state = reader.string();\n                    break;\n                case 6:\n                    message.executionTypes.push(reader.string());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            subaccountId: isSet(object.subaccountId) ? String(object.subaccountId) : \"\",\n            marketId: isSet(object.marketId) ? String(object.marketId) : \"\",\n            orderTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.orderTypes) ? object.orderTypes.map((e) => String(e)) : [],\n            direction: isSet(object.direction) ? String(object.direction) : \"\",\n            state: isSet(object.state) ? String(object.state) : \"\",\n            executionTypes: Array.isArray(object === null || object === void 0 ? void 0 : object.executionTypes) ? object.executionTypes.map((e) => String(e)) : [],\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.subaccountId !== undefined && (obj.subaccountId = message.subaccountId);\n        message.marketId !== undefined && (obj.marketId = message.marketId);\n        if (message.orderTypes) {\n            obj.orderTypes = message.orderTypes.map((e) => e);\n        }\n        else {\n            obj.orderTypes = [];\n        }\n        message.direction !== undefined && (obj.direction = message.direction);\n        message.state !== undefined && (obj.state = message.state);\n        if (message.executionTypes) {\n            obj.executionTypes = message.executionTypes.map((e) => e);\n        }\n        else {\n            obj.executionTypes = [];\n        }\n        return obj;\n    },\n    create(base) {\n        return StreamOrdersHistoryRequest.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b, _c, _d, _e, _f;\n        const message = createBaseStreamOrdersHistoryRequest();\n        message.subaccountId = (_a = object.subaccountId) !== null && _a !== void 0 ? _a : \"\";\n        message.marketId = (_b = object.marketId) !== null && _b !== void 0 ? _b : \"\";\n        message.orderTypes = ((_c = object.orderTypes) === null || _c === void 0 ? void 0 : _c.map((e) => e)) || [];\n        message.direction = (_d = object.direction) !== null && _d !== void 0 ? _d : \"\";\n        message.state = (_e = object.state) !== null && _e !== void 0 ? _e : \"\";\n        message.executionTypes = ((_f = object.executionTypes) === null || _f === void 0 ? void 0 : _f.map((e) => e)) || [];\n        return message;\n    },\n};\nfunction createBaseStreamOrdersHistoryResponse() {\n    return { order: undefined, operationType: \"\", timestamp: \"0\" };\n}\nexport const StreamOrdersHistoryResponse = {\n    encode(message, writer = _m0.Writer.create()) {\n        if (message.order !== undefined) {\n            DerivativeOrderHistory.encode(message.order, writer.uint32(10).fork()).ldelim();\n        }\n        if (message.operationType !== \"\") {\n            writer.uint32(18).string(message.operationType);\n        }\n        if (message.timestamp !== \"0\") {\n            writer.uint32(24).sint64(message.timestamp);\n        }\n        return writer;\n    },\n    decode(input, length) {\n        const reader = input instanceof _m0.Reader ? input : new _m0.Reader(input);\n        let end = length === undefined ? reader.len : reader.pos + length;\n        const message = createBaseStreamOrdersHistoryResponse();\n        while (reader.pos < end) {\n            const tag = reader.uint32();\n            switch (tag >>> 3) {\n                case 1:\n                    message.order = DerivativeOrderHistory.decode(reader, reader.uint32());\n                    break;\n                case 2:\n                    message.operationType = reader.string();\n                    break;\n                case 3:\n                    message.timestamp = longToString(reader.sint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n            }\n        }\n        return message;\n    },\n    fromJSON(object) {\n        return {\n            order: isSet(object.order) ? DerivativeOrderHistory.fromJSON(object.order) : undefined,\n            operationType: isSet(object.operationType) ? String(object.operationType) : \"\",\n            timestamp: isSet(object.timestamp) ? String(object.timestamp) : \"0\",\n        };\n    },\n    toJSON(message) {\n        const obj = {};\n        message.order !== undefined &&\n            (obj.order = message.order ? DerivativeOrderHistory.toJSON(message.order) : undefined);\n        message.operationType !== undefined && (obj.operationType = message.operationType);\n        message.timestamp !== undefined && (obj.timestamp = message.timestamp);\n        return obj;\n    },\n    create(base) {\n        return StreamOrdersHistoryResponse.fromPartial(base !== null && base !== void 0 ? base : {});\n    },\n    fromPartial(object) {\n        var _a, _b;\n        const message = createBaseStreamOrdersHistoryResponse();\n        message.order = (object.order !== undefined && object.order !== null)\n            ? DerivativeOrderHistory.fromPartial(object.order)\n            : undefined;\n        message.operationType = (_a = object.operationType) !== null && _a !== void 0 ? _a : \"\";\n        message.timestamp = (_b = object.timestamp) !== null && _b !== void 0 ? _b : \"0\";\n        return message;\n    },\n};\nexport class InjectiveDerivativeExchangeRPCClientImpl {\n    constructor(rpc) {\n        this.rpc = rpc;\n        this.Markets = this.Markets.bind(this);\n        this.Market = this.Market.bind(this);\n        this.StreamMarket = this.StreamMarket.bind(this);\n        this.BinaryOptionsMarkets = this.BinaryOptionsMarkets.bind(this);\n        this.BinaryOptionsMarket = this.BinaryOptionsMarket.bind(this);\n        this.OrderbookV2 = this.OrderbookV2.bind(this);\n        this.OrderbooksV2 = this.OrderbooksV2.bind(this);\n        this.StreamOrderbookV2 = this.StreamOrderbookV2.bind(this);\n        this.StreamOrderbookUpdate = this.StreamOrderbookUpdate.bind(this);\n        this.Orders = this.Orders.bind(this);\n        this.Positions = this.Positions.bind(this);\n        this.PositionsV2 = this.PositionsV2.bind(this);\n        this.LiquidablePositions = this.LiquidablePositions.bind(this);\n        this.FundingPayments = this.FundingPayments.bind(this);\n        this.FundingRates = this.FundingRates.bind(this);\n        this.StreamPositions = this.StreamPositions.bind(this);\n        this.StreamOrders = this.StreamOrders.bind(this);\n        this.Trades = this.Trades.bind(this);\n        this.TradesV2 = this.TradesV2.bind(this);\n        this.StreamTrades = this.StreamTrades.bind(this);\n        this.StreamTradesV2 = this.StreamTradesV2.bind(this);\n        this.SubaccountOrdersList = this.SubaccountOrdersList.bind(this);\n        this.SubaccountTradesList = this.SubaccountTradesList.bind(this);\n        this.OrdersHistory = this.OrdersHistory.bind(this);\n        this.StreamOrdersHistory = this.StreamOrdersHistory.bind(this);\n    }\n    Markets(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCMarketsDesc, MarketsRequest.fromPartial(request), metadata);\n    }\n    Market(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCMarketDesc, MarketRequest.fromPartial(request), metadata);\n    }\n    StreamMarket(request, metadata) {\n        return this.rpc.invoke(InjectiveDerivativeExchangeRPCStreamMarketDesc, StreamMarketRequest.fromPartial(request), metadata);\n    }\n    BinaryOptionsMarkets(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCBinaryOptionsMarketsDesc, BinaryOptionsMarketsRequest.fromPartial(request), metadata);\n    }\n    BinaryOptionsMarket(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCBinaryOptionsMarketDesc, BinaryOptionsMarketRequest.fromPartial(request), metadata);\n    }\n    OrderbookV2(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCOrderbookV2Desc, OrderbookV2Request.fromPartial(request), metadata);\n    }\n    OrderbooksV2(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCOrderbooksV2Desc, OrderbooksV2Request.fromPartial(request), metadata);\n    }\n    StreamOrderbookV2(request, metadata) {\n        return this.rpc.invoke(InjectiveDerivativeExchangeRPCStreamOrderbookV2Desc, StreamOrderbookV2Request.fromPartial(request), metadata);\n    }\n    StreamOrderbookUpdate(request, metadata) {\n        return this.rpc.invoke(InjectiveDerivativeExchangeRPCStreamOrderbookUpdateDesc, StreamOrderbookUpdateRequest.fromPartial(request), metadata);\n    }\n    Orders(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCOrdersDesc, OrdersRequest.fromPartial(request), metadata);\n    }\n    Positions(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCPositionsDesc, PositionsRequest.fromPartial(request), metadata);\n    }\n    PositionsV2(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCPositionsV2Desc, PositionsV2Request.fromPartial(request), metadata);\n    }\n    LiquidablePositions(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCLiquidablePositionsDesc, LiquidablePositionsRequest.fromPartial(request), metadata);\n    }\n    FundingPayments(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCFundingPaymentsDesc, FundingPaymentsRequest.fromPartial(request), metadata);\n    }\n    FundingRates(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCFundingRatesDesc, FundingRatesRequest.fromPartial(request), metadata);\n    }\n    StreamPositions(request, metadata) {\n        return this.rpc.invoke(InjectiveDerivativeExchangeRPCStreamPositionsDesc, StreamPositionsRequest.fromPartial(request), metadata);\n    }\n    StreamOrders(request, metadata) {\n        return this.rpc.invoke(InjectiveDerivativeExchangeRPCStreamOrdersDesc, StreamOrdersRequest.fromPartial(request), metadata);\n    }\n    Trades(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCTradesDesc, TradesRequest.fromPartial(request), metadata);\n    }\n    TradesV2(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCTradesV2Desc, TradesV2Request.fromPartial(request), metadata);\n    }\n    StreamTrades(request, metadata) {\n        return this.rpc.invoke(InjectiveDerivativeExchangeRPCStreamTradesDesc, StreamTradesRequest.fromPartial(request), metadata);\n    }\n    StreamTradesV2(request, metadata) {\n        return this.rpc.invoke(InjectiveDerivativeExchangeRPCStreamTradesV2Desc, StreamTradesV2Request.fromPartial(request), metadata);\n    }\n    SubaccountOrdersList(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCSubaccountOrdersListDesc, SubaccountOrdersListRequest.fromPartial(request), metadata);\n    }\n    SubaccountTradesList(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCSubaccountTradesListDesc, SubaccountTradesListRequest.fromPartial(request), metadata);\n    }\n    OrdersHistory(request, metadata) {\n        return this.rpc.unary(InjectiveDerivativeExchangeRPCOrdersHistoryDesc, OrdersHistoryRequest.fromPartial(request), metadata);\n    }\n    StreamOrdersHistory(request, metadata) {\n        return this.rpc.invoke(InjectiveDerivativeExchangeRPCStreamOrdersHistoryDesc, StreamOrdersHistoryRequest.fromPartial(request), metadata);\n    }\n}\nexport const InjectiveDerivativeExchangeRPCDesc = {\n    serviceName: \"injective_derivative_exchange_rpc.InjectiveDerivativeExchangeRPC\",\n};\nexport const InjectiveDerivativeExchangeRPCMarketsDesc = {\n    methodName: \"Markets\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return MarketsRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = MarketsResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCMarketDesc = {\n    methodName: \"Market\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return MarketRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = MarketResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCStreamMarketDesc = {\n    methodName: \"StreamMarket\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamMarketRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamMarketResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCBinaryOptionsMarketsDesc = {\n    methodName: \"BinaryOptionsMarkets\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return BinaryOptionsMarketsRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = BinaryOptionsMarketsResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCBinaryOptionsMarketDesc = {\n    methodName: \"BinaryOptionsMarket\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return BinaryOptionsMarketRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = BinaryOptionsMarketResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCOrderbookV2Desc = {\n    methodName: \"OrderbookV2\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return OrderbookV2Request.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = OrderbookV2Response.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCOrderbooksV2Desc = {\n    methodName: \"OrderbooksV2\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return OrderbooksV2Request.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = OrderbooksV2Response.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCStreamOrderbookV2Desc = {\n    methodName: \"StreamOrderbookV2\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamOrderbookV2Request.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamOrderbookV2Response.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCStreamOrderbookUpdateDesc = {\n    methodName: \"StreamOrderbookUpdate\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamOrderbookUpdateRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamOrderbookUpdateResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCOrdersDesc = {\n    methodName: \"Orders\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return OrdersRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = OrdersResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCPositionsDesc = {\n    methodName: \"Positions\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return PositionsRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = PositionsResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCPositionsV2Desc = {\n    methodName: \"PositionsV2\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return PositionsV2Request.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = PositionsV2Response.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCLiquidablePositionsDesc = {\n    methodName: \"LiquidablePositions\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return LiquidablePositionsRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = LiquidablePositionsResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCFundingPaymentsDesc = {\n    methodName: \"FundingPayments\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return FundingPaymentsRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = FundingPaymentsResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCFundingRatesDesc = {\n    methodName: \"FundingRates\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return FundingRatesRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = FundingRatesResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCStreamPositionsDesc = {\n    methodName: \"StreamPositions\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamPositionsRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamPositionsResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCStreamOrdersDesc = {\n    methodName: \"StreamOrders\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamOrdersRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamOrdersResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCTradesDesc = {\n    methodName: \"Trades\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return TradesRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = TradesResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCTradesV2Desc = {\n    methodName: \"TradesV2\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return TradesV2Request.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = TradesV2Response.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCStreamTradesDesc = {\n    methodName: \"StreamTrades\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamTradesRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamTradesResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCStreamTradesV2Desc = {\n    methodName: \"StreamTradesV2\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamTradesV2Request.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamTradesV2Response.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCSubaccountOrdersListDesc = {\n    methodName: \"SubaccountOrdersList\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return SubaccountOrdersListRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = SubaccountOrdersListResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCSubaccountTradesListDesc = {\n    methodName: \"SubaccountTradesList\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return SubaccountTradesListRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = SubaccountTradesListResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCOrdersHistoryDesc = {\n    methodName: \"OrdersHistory\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: false,\n    requestType: {\n        serializeBinary() {\n            return OrdersHistoryRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = OrdersHistoryResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport const InjectiveDerivativeExchangeRPCStreamOrdersHistoryDesc = {\n    methodName: \"StreamOrdersHistory\",\n    service: InjectiveDerivativeExchangeRPCDesc,\n    requestStream: false,\n    responseStream: true,\n    requestType: {\n        serializeBinary() {\n            return StreamOrdersHistoryRequest.encode(this).finish();\n        },\n    },\n    responseType: {\n        deserializeBinary(data) {\n            const value = StreamOrdersHistoryResponse.decode(data);\n            return Object.assign(Object.assign({}, value), { toObject() {\n                    return value;\n                } });\n        },\n    },\n};\nexport class GrpcWebImpl {\n    constructor(host, options) {\n        this.host = host;\n        this.options = options;\n    }\n    unary(methodDesc, _request, metadata) {\n        var _a;\n        const request = Object.assign(Object.assign({}, _request), methodDesc.requestType);\n        const maybeCombinedMetadata = metadata && this.options.metadata\n            ? new BrowserHeaders(Object.assign(Object.assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap))\n            : metadata || this.options.metadata;\n        return new Promise((resolve, reject) => {\n            grpc.unary(methodDesc, {\n                request,\n                host: this.host,\n                metadata: maybeCombinedMetadata,\n                transport: this.options.transport,\n                debug: this.options.debug,\n                onEnd: function (response) {\n                    if (response.status === grpc.Code.OK) {\n                        resolve(response.message.toObject());\n                    }\n                    else {\n                        const err = new GrpcWebError(response.statusMessage, response.status, response.trailers);\n                        reject(err);\n                    }\n                },\n            });\n        });\n    }\n    invoke(methodDesc, _request, metadata) {\n        var _a;\n        const upStreamCodes = this.options.upStreamRetryCodes || [];\n        const DEFAULT_TIMEOUT_TIME = 3000;\n        const request = Object.assign(Object.assign({}, _request), methodDesc.requestType);\n        const maybeCombinedMetadata = metadata && this.options.metadata\n            ? new BrowserHeaders(Object.assign(Object.assign({}, (_a = this.options) === null || _a === void 0 ? void 0 : _a.metadata.headersMap), metadata === null || metadata === void 0 ? void 0 : metadata.headersMap))\n            : metadata || this.options.metadata;\n        return new Observable((observer) => {\n            const upStream = (() => {\n                const client = grpc.invoke(methodDesc, {\n                    host: this.host,\n                    request,\n                    transport: this.options.streamingTransport || this.options.transport,\n                    metadata: maybeCombinedMetadata,\n                    debug: this.options.debug,\n                    onMessage: (next) => observer.next(next),\n                    onEnd: (code, message, trailers) => {\n                        if (code === 0) {\n                            observer.complete();\n                        }\n                        else if (upStreamCodes.includes(code)) {\n                            setTimeout(upStream, DEFAULT_TIMEOUT_TIME);\n                        }\n                        else {\n                            const err = new Error(message);\n                            err.code = code;\n                            err.metadata = trailers;\n                            observer.error(err);\n                        }\n                    },\n                });\n                observer.add(() => client.close());\n            });\n            upStream();\n        }).pipe(share());\n    }\n}\nvar tsProtoGlobalThis = (() => {\n    if (typeof globalThis !== \"undefined\") {\n        return globalThis;\n    }\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    if (typeof window !== \"undefined\") {\n        return window;\n    }\n    if (typeof global !== \"undefined\") {\n        return global;\n    }\n    throw \"Unable to locate global object\";\n})();\nfunction longToString(long) {\n    return long.toString();\n}\nif (_m0.util.Long !== Long) {\n    _m0.util.Long = Long;\n    _m0.configure();\n}\nfunction isSet(value) {\n    return value !== null && value !== undefined;\n}\nexport class GrpcWebError extends tsProtoGlobalThis.Error {\n    constructor(message, code, metadata) {\n        super(message);\n        this.code = code;\n        this.metadata = metadata;\n    }\n}\n"],"names":["protobufPackage","MarketsRequest","encode","message","writer","create","marketStatus","uint32","string","quoteDenom","v","marketStatuses","decode","input","length","reader","end","undefined","len","pos","tag","push","skipType","fromJSON","object","isSet","String","Array","isArray","map","e","toJSON","obj","base","fromPartial","_a","_b","_c","MarketsResponse","markets","DerivativeMarketInfo","fork","ldelim","marketId","ticker","oracleBase","oracleQuote","oracleType","oracleScaleFactor","initialMarginRatio","maintenanceMarginRatio","quoteTokenMeta","TokenMeta","makerFeeRate","takerFeeRate","serviceProviderFee","isPerpetual","bool","minPriceTickSize","minQuantityTickSize","perpetualMarketInfo","PerpetualMarketInfo","perpetualMarketFunding","PerpetualMarketFunding","expiryFuturesMarketInfo","ExpiryFuturesMarketInfo","Number","Boolean","Math","round","_d","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","_q","_r","name","address","symbol","logo","decimals","sint32","updatedAt","sint64","longToString","hourlyFundingRateCap","hourlyInterestRate","nextFundingTimestamp","fundingInterval","cumulativeFunding","cumulativePrice","lastTimestamp","expirationTimestamp","settlementPrice","MarketRequest","MarketResponse","market","StreamMarketRequest","marketIds","StreamMarketResponse","operationType","timestamp","BinaryOptionsMarketsRequest","skip","uint64","limit","BinaryOptionsMarketsResponse","BinaryOptionsMarketInfo","paging","Paging","oracleSymbol","oracleProvider","settlementTimestamp","total","from","to","countBySubaccount","next","BinaryOptionsMarketRequest","BinaryOptionsMarketResponse","OrderbookV2Request","OrderbookV2Response","orderbook","DerivativeLimitOrderbookV2","buys","PriceLevel","sells","sequence","price","quantity","OrderbooksV2Request","OrderbooksV2Response","orderbooks","SingleDerivativeLimitOrderbookV2","StreamOrderbookV2Request","StreamOrderbookV2Response","StreamOrderbookUpdateRequest","StreamOrderbookUpdateResponse","orderbookLevelUpdates","OrderbookLevelUpdates","PriceLevelUpdate","isActive","OrdersRequest","orderSide","subaccountId","startTime","endTime","isConditional","orderType","includeInactive","subaccountTotalOrders","tradeId","cid","OrdersResponse","orders","DerivativeLimitOrder","orderHash","isReduceOnly","margin","unfilledQuantity","triggerPrice","feeRecipient","state","createdAt","orderNumber","triggerAt","placedOrderHash","executionType","txHash","_s","_t","_u","_v","_w","_x","PositionsRequest","direction","subaccountTotalPositions","accountAddress","PositionsResponse","positions","DerivativePosition","entryPrice","liquidationPrice","markPrice","aggregateReduceOnlyQuantity","PositionsV2Request","PositionsV2Response","DerivativePositionV2","denom","LiquidablePositionsRequest","LiquidablePositionsResponse","FundingPaymentsRequest","FundingPaymentsResponse","payments","FundingPayment","amount","FundingRatesRequest","FundingRatesResponse","fundingRates","FundingRate","rate","StreamPositionsRequest","subaccountIds","StreamPositionsResponse","position","StreamOrdersRequest","StreamOrdersResponse","order","TradesRequest","executionSide","executionTypes","TradesResponse","trades","DerivativeTrade","tradeExecutionType","isLiquidation","positionDelta","PositionDelta","payout","fee","executedAt","tradeDirection","executionPrice","executionQuantity","executionMargin","TradesV2Request","TradesV2Response","StreamTradesRequest","StreamTradesResponse","trade","StreamTradesV2Request","StreamTradesV2Response","SubaccountOrdersListRequest","SubaccountOrdersListResponse","SubaccountTradesListRequest","SubaccountTradesListResponse","OrdersHistoryRequest","orderTypes","activeMarketsOnly","OrdersHistoryResponse","DerivativeOrderHistory","filledQuantity","StreamOrdersHistoryRequest","StreamOrdersHistoryResponse","InjectiveDerivativeExchangeRPCClientImpl","constructor","rpc","this","Markets","bind","Market","StreamMarket","BinaryOptionsMarkets","BinaryOptionsMarket","OrderbookV2","OrderbooksV2","StreamOrderbookV2","StreamOrderbookUpdate","Orders","Positions","PositionsV2","LiquidablePositions","FundingPayments","FundingRates","StreamPositions","StreamOrders","Trades","TradesV2","StreamTrades","StreamTradesV2","SubaccountOrdersList","SubaccountTradesList","OrdersHistory","StreamOrdersHistory","request","metadata","unary","InjectiveDerivativeExchangeRPCMarketsDesc","InjectiveDerivativeExchangeRPCMarketDesc","invoke","InjectiveDerivativeExchangeRPCStreamMarketDesc","InjectiveDerivativeExchangeRPCBinaryOptionsMarketsDesc","InjectiveDerivativeExchangeRPCBinaryOptionsMarketDesc","InjectiveDerivativeExchangeRPCOrderbookV2Desc","InjectiveDerivativeExchangeRPCOrderbooksV2Desc","InjectiveDerivativeExchangeRPCStreamOrderbookV2Desc","InjectiveDerivativeExchangeRPCStreamOrderbookUpdateDesc","InjectiveDerivativeExchangeRPCOrdersDesc","InjectiveDerivativeExchangeRPCPositionsDesc","InjectiveDerivativeExchangeRPCPositionsV2Desc","InjectiveDerivativeExchangeRPCLiquidablePositionsDesc","InjectiveDerivativeExchangeRPCFundingPaymentsDesc","InjectiveDerivativeExchangeRPCFundingRatesDesc","InjectiveDerivativeExchangeRPCStreamPositionsDesc","InjectiveDerivativeExchangeRPCStreamOrdersDesc","InjectiveDerivativeExchangeRPCTradesDesc","InjectiveDerivativeExchangeRPCTradesV2Desc","InjectiveDerivativeExchangeRPCStreamTradesDesc","InjectiveDerivativeExchangeRPCStreamTradesV2Desc","InjectiveDerivativeExchangeRPCSubaccountOrdersListDesc","InjectiveDerivativeExchangeRPCSubaccountTradesListDesc","InjectiveDerivativeExchangeRPCOrdersHistoryDesc","InjectiveDerivativeExchangeRPCStreamOrdersHistoryDesc","InjectiveDerivativeExchangeRPCDesc","serviceName","methodName","service","requestStream","responseStream","requestType","serializeBinary","finish","responseType","deserializeBinary","data","value","Object","assign","toObject","GrpcWebImpl","host","options","methodDesc","_request","maybeCombinedMetadata","BrowserHeaders","headersMap","Promise","resolve","reject","grpc","transport","debug","onEnd","response","status","Code","OK","err","GrpcWebError","statusMessage","trailers","upStreamCodes","upStreamRetryCodes","observer","upStream","client","streamingTransport","onMessage","code","complete","includes","setTimeout","Error","error","add","close","pipe","tsProtoGlobalThis","globalThis","self","window","global","long","toString","Long","super"],"sourceRoot":""}