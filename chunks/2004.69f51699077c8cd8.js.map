{"version":3,"file":"static/chunks/2004.69f51699077c8cd8.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/version.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/utils.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/messageFormatter.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/methods.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/communication/index.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/types/sdk.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/txs/index.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/eth/constants.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/eth/index.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/safe/signatures.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/types/permissions.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/wallet/index.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/decorators/requirePermissions.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/safe/index.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/sdk.js","webpack://_N_E/./node_modules/@safe-global/safe-apps-sdk/dist/esm/index.js"],"sourcesContent":["export const getSDKVersion = () => '9.1.0';\n//# sourceMappingURL=version.js.map","// i.e. 0-255 -> '00'-'ff'\nconst dec2hex = (dec) => dec.toString(16).padStart(2, '0');\nconst generateId = (len) => {\n    const arr = new Uint8Array((len || 40) / 2);\n    window.crypto.getRandomValues(arr);\n    return Array.from(arr, dec2hex).join('');\n};\nconst generateRequestId = () => {\n    if (typeof window !== 'undefined') {\n        return generateId(10);\n    }\n    return new Date().getTime().toString(36);\n};\nexport { generateRequestId };\n//# sourceMappingURL=utils.js.map","import { getSDKVersion } from '../version.js';\nimport { generateRequestId } from './utils.js';\nclass MessageFormatter {\n}\nMessageFormatter.makeRequest = (method, params) => {\n    const id = generateRequestId();\n    return {\n        id,\n        method,\n        params,\n        env: {\n            sdkVersion: getSDKVersion(),\n        },\n    };\n};\nMessageFormatter.makeResponse = (id, data, version) => ({\n    id,\n    success: true,\n    version,\n    data,\n});\nMessageFormatter.makeErrorResponse = (id, error, version) => ({\n    id,\n    success: false,\n    error,\n    version,\n});\nexport { MessageFormatter };\n//# sourceMappingURL=messageFormatter.js.map","export var Methods;\n(function (Methods) {\n    Methods[\"sendTransactions\"] = \"sendTransactions\";\n    Methods[\"rpcCall\"] = \"rpcCall\";\n    Methods[\"getChainInfo\"] = \"getChainInfo\";\n    Methods[\"getSafeInfo\"] = \"getSafeInfo\";\n    Methods[\"getTxBySafeTxHash\"] = \"getTxBySafeTxHash\";\n    Methods[\"getSafeBalances\"] = \"getSafeBalances\";\n    Methods[\"signMessage\"] = \"signMessage\";\n    Methods[\"signTypedMessage\"] = \"signTypedMessage\";\n    Methods[\"getEnvironmentInfo\"] = \"getEnvironmentInfo\";\n    Methods[\"getOffChainSignature\"] = \"getOffChainSignature\";\n    Methods[\"requestAddressBook\"] = \"requestAddressBook\";\n    Methods[\"wallet_getPermissions\"] = \"wallet_getPermissions\";\n    Methods[\"wallet_requestPermissions\"] = \"wallet_requestPermissions\";\n})(Methods || (Methods = {}));\nexport var RestrictedMethods;\n(function (RestrictedMethods) {\n    RestrictedMethods[\"requestAddressBook\"] = \"requestAddressBook\";\n})(RestrictedMethods || (RestrictedMethods = {}));\n//# sourceMappingURL=methods.js.map","import { MessageFormatter } from './messageFormatter.js';\nclass PostMessageCommunicator {\n    constructor(allowedOrigins = null, debugMode = false) {\n        this.allowedOrigins = null;\n        this.callbacks = new Map();\n        this.debugMode = false;\n        this.isServer = typeof window === 'undefined';\n        this.isValidMessage = ({ origin, data, source }) => {\n            const emptyOrMalformed = !data;\n            const sentFromParentEl = !this.isServer && source === window.parent;\n            const majorVersionNumber = typeof data.version !== 'undefined' && parseInt(data.version.split('.')[0]);\n            const allowedSDKVersion = typeof majorVersionNumber === 'number' && majorVersionNumber >= 1;\n            let validOrigin = true;\n            if (Array.isArray(this.allowedOrigins)) {\n                validOrigin = this.allowedOrigins.find((regExp) => regExp.test(origin)) !== undefined;\n            }\n            return !emptyOrMalformed && sentFromParentEl && allowedSDKVersion && validOrigin;\n        };\n        this.logIncomingMessage = (msg) => {\n            console.info(`Safe Apps SDK v1: A message was received from origin ${msg.origin}. `, msg.data);\n        };\n        this.onParentMessage = (msg) => {\n            if (this.isValidMessage(msg)) {\n                this.debugMode && this.logIncomingMessage(msg);\n                this.handleIncomingMessage(msg.data);\n            }\n        };\n        this.handleIncomingMessage = (payload) => {\n            const { id } = payload;\n            const cb = this.callbacks.get(id);\n            if (cb) {\n                cb(payload);\n                this.callbacks.delete(id);\n            }\n        };\n        this.send = (method, params) => {\n            const request = MessageFormatter.makeRequest(method, params);\n            if (this.isServer) {\n                throw new Error(\"Window doesn't exist\");\n            }\n            window.parent.postMessage(request, '*');\n            return new Promise((resolve, reject) => {\n                this.callbacks.set(request.id, (response) => {\n                    if (!response.success) {\n                        reject(new Error(response.error));\n                        return;\n                    }\n                    resolve(response);\n                });\n            });\n        };\n        this.allowedOrigins = allowedOrigins;\n        this.debugMode = debugMode;\n        if (!this.isServer) {\n            window.addEventListener('message', this.onParentMessage);\n        }\n    }\n}\nexport default PostMessageCommunicator;\nexport * from './methods.js';\n//# sourceMappingURL=index.js.map","export const isObjectEIP712TypedData = (obj) => {\n    return typeof obj === 'object' && obj != null && 'domain' in obj && 'types' in obj && 'message' in obj;\n};\n//# sourceMappingURL=sdk.js.map","import { Methods } from '../communication/methods.js';\nimport { isObjectEIP712TypedData, } from '../types/index.js';\nclass TXs {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getBySafeTxHash(safeTxHash) {\n        if (!safeTxHash) {\n            throw new Error('Invalid safeTxHash');\n        }\n        const response = await this.communicator.send(Methods.getTxBySafeTxHash, { safeTxHash });\n        return response.data;\n    }\n    async signMessage(message) {\n        const messagePayload = {\n            message,\n        };\n        const response = await this.communicator.send(Methods.signMessage, messagePayload);\n        return response.data;\n    }\n    async signTypedMessage(typedData) {\n        if (!isObjectEIP712TypedData(typedData)) {\n            throw new Error('Invalid typed data');\n        }\n        const response = await this.communicator.send(Methods.signTypedMessage, { typedData });\n        return response.data;\n    }\n    async send({ txs, params }) {\n        if (!txs || !txs.length) {\n            throw new Error('No transactions were passed');\n        }\n        const messagePayload = {\n            txs,\n            params,\n        };\n        const response = await this.communicator.send(Methods.sendTransactions, messagePayload);\n        return response.data;\n    }\n}\nexport { TXs };\n//# sourceMappingURL=index.js.map","export const RPC_CALLS = {\n    eth_call: 'eth_call',\n    eth_gasPrice: 'eth_gasPrice',\n    eth_getLogs: 'eth_getLogs',\n    eth_getBalance: 'eth_getBalance',\n    eth_getCode: 'eth_getCode',\n    eth_getBlockByHash: 'eth_getBlockByHash',\n    eth_getBlockByNumber: 'eth_getBlockByNumber',\n    eth_getStorageAt: 'eth_getStorageAt',\n    eth_getTransactionByHash: 'eth_getTransactionByHash',\n    eth_getTransactionReceipt: 'eth_getTransactionReceipt',\n    eth_getTransactionCount: 'eth_getTransactionCount',\n    eth_estimateGas: 'eth_estimateGas',\n    safe_setSettings: 'safe_setSettings',\n};\n//# sourceMappingURL=constants.js.map","import { RPC_CALLS } from '../eth/constants.js';\nimport { Methods } from '../communication/methods.js';\nconst inputFormatters = {\n    defaultBlockParam: (arg = 'latest') => arg,\n    returnFullTxObjectParam: (arg = false) => arg,\n    blockNumberToHex: (arg) => Number.isInteger(arg) ? `0x${arg.toString(16)}` : arg,\n};\nclass Eth {\n    constructor(communicator) {\n        this.communicator = communicator;\n        this.call = this.buildRequest({\n            call: RPC_CALLS.eth_call,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getBalance = this.buildRequest({\n            call: RPC_CALLS.eth_getBalance,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getCode = this.buildRequest({\n            call: RPC_CALLS.eth_getCode,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getStorageAt = this.buildRequest({\n            call: RPC_CALLS.eth_getStorageAt,\n            formatters: [null, inputFormatters.blockNumberToHex, inputFormatters.defaultBlockParam],\n        });\n        this.getPastLogs = this.buildRequest({\n            call: RPC_CALLS.eth_getLogs,\n        });\n        this.getBlockByHash = this.buildRequest({\n            call: RPC_CALLS.eth_getBlockByHash,\n            formatters: [null, inputFormatters.returnFullTxObjectParam],\n        });\n        this.getBlockByNumber = this.buildRequest({\n            call: RPC_CALLS.eth_getBlockByNumber,\n            formatters: [inputFormatters.blockNumberToHex, inputFormatters.returnFullTxObjectParam],\n        });\n        this.getTransactionByHash = this.buildRequest({\n            call: RPC_CALLS.eth_getTransactionByHash,\n        });\n        this.getTransactionReceipt = this.buildRequest({\n            call: RPC_CALLS.eth_getTransactionReceipt,\n        });\n        this.getTransactionCount = this.buildRequest({\n            call: RPC_CALLS.eth_getTransactionCount,\n            formatters: [null, inputFormatters.defaultBlockParam],\n        });\n        this.getGasPrice = this.buildRequest({\n            call: RPC_CALLS.eth_gasPrice,\n        });\n        this.getEstimateGas = (transaction) => this.buildRequest({\n            call: RPC_CALLS.eth_estimateGas,\n        })([transaction]);\n        this.setSafeSettings = this.buildRequest({\n            call: RPC_CALLS.safe_setSettings,\n        });\n    }\n    buildRequest(args) {\n        const { call, formatters } = args;\n        return async (params) => {\n            if (formatters && Array.isArray(params)) {\n                formatters.forEach((formatter, i) => {\n                    if (formatter) {\n                        params[i] = formatter(params[i]);\n                    }\n                });\n            }\n            const payload = {\n                call,\n                params: params || [],\n            };\n            const response = await this.communicator.send(Methods.rpcCall, payload);\n            return response.data;\n        };\n    }\n}\nexport { Eth };\n//# sourceMappingURL=index.js.map","const MAGIC_VALUE = '0x1626ba7e';\nconst MAGIC_VALUE_BYTES = '0x20c13b0b';\nexport { MAGIC_VALUE, MAGIC_VALUE_BYTES };\n//# sourceMappingURL=signatures.js.map","export const PERMISSIONS_REQUEST_REJECTED = 4001;\nexport class PermissionsError extends Error {\n    constructor(message, code, data) {\n        super(message);\n        this.code = code;\n        this.data = data;\n        // Should adjust prototype manually because how TS handles the type extension compilation\n        // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n        Object.setPrototypeOf(this, PermissionsError.prototype);\n    }\n}\n//# sourceMappingURL=permissions.js.map","import { Methods, RestrictedMethods } from '../communication/methods.js';\nimport { PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\nclass Wallet {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getPermissions() {\n        const response = await this.communicator.send(Methods.wallet_getPermissions, undefined);\n        return response.data;\n    }\n    async requestPermissions(permissions) {\n        if (!this.isPermissionRequestValid(permissions)) {\n            throw new PermissionsError('Permissions request is invalid', PERMISSIONS_REQUEST_REJECTED);\n        }\n        try {\n            const response = await this.communicator.send(Methods.wallet_requestPermissions, permissions);\n            return response.data;\n        }\n        catch {\n            throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n        }\n    }\n    isPermissionRequestValid(permissions) {\n        return permissions.every((pr) => {\n            if (typeof pr === 'object') {\n                return Object.keys(pr).every((method) => {\n                    if (Object.values(RestrictedMethods).includes(method)) {\n                        return true;\n                    }\n                    return false;\n                });\n            }\n            return false;\n        });\n    }\n}\nexport { Wallet };\n//# sourceMappingURL=index.js.map","import { Wallet } from '../wallet/index.js';\nimport { PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\nconst hasPermission = (required, permissions) => permissions.some((permission) => permission.parentCapability === required);\nconst requirePermission = () => (_, propertyKey, descriptor) => {\n    const originalMethod = descriptor.value;\n    descriptor.value = async function () {\n        // @ts-expect-error accessing private property from decorator. 'this' context is the class instance\n        const wallet = new Wallet(this.communicator);\n        let currentPermissions = await wallet.getPermissions();\n        if (!hasPermission(propertyKey, currentPermissions)) {\n            currentPermissions = await wallet.requestPermissions([{ [propertyKey]: {} }]);\n        }\n        if (!hasPermission(propertyKey, currentPermissions)) {\n            throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n        }\n        return originalMethod.apply(this);\n    };\n    return descriptor;\n};\nexport default requirePermission;\n//# sourceMappingURL=requirePermissions.js.map","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { encodeFunctionData, hashMessage, hashTypedData } from 'viem';\nimport { MAGIC_VALUE_BYTES, MAGIC_VALUE } from './signatures.js';\nimport { Methods } from '../communication/methods.js';\nimport { RPC_CALLS } from '../eth/constants.js';\nimport { isObjectEIP712TypedData, } from '../types/index.js';\nimport requirePermission from '../decorators/requirePermissions.js';\nclass Safe {\n    constructor(communicator) {\n        this.communicator = communicator;\n    }\n    async getChainInfo() {\n        const response = await this.communicator.send(Methods.getChainInfo, undefined);\n        return response.data;\n    }\n    async getInfo() {\n        const response = await this.communicator.send(Methods.getSafeInfo, undefined);\n        return response.data;\n    }\n    // There is a possibility that this method will change because we may add pagination to the endpoint\n    async experimental_getBalances({ currency = 'usd' } = {}) {\n        const response = await this.communicator.send(Methods.getSafeBalances, {\n            currency,\n        });\n        return response.data;\n    }\n    async check1271Signature(messageHash, signature = '0x') {\n        const safeInfo = await this.getInfo();\n        const encodedIsValidSignatureCall = encodeFunctionData({\n            abi: [\n                {\n                    constant: false,\n                    inputs: [\n                        {\n                            name: '_dataHash',\n                            type: 'bytes32',\n                        },\n                        {\n                            name: '_signature',\n                            type: 'bytes',\n                        },\n                    ],\n                    name: 'isValidSignature',\n                    outputs: [\n                        {\n                            name: '',\n                            type: 'bytes4',\n                        },\n                    ],\n                    payable: false,\n                    stateMutability: 'nonpayable',\n                    type: 'function',\n                },\n            ],\n            functionName: 'isValidSignature',\n            args: [messageHash, signature],\n        });\n        const payload = {\n            call: RPC_CALLS.eth_call,\n            params: [\n                {\n                    to: safeInfo.safeAddress,\n                    data: encodedIsValidSignatureCall,\n                },\n                'latest',\n            ],\n        };\n        try {\n            const response = await this.communicator.send(Methods.rpcCall, payload);\n            return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    async check1271SignatureBytes(messageHash, signature = '0x') {\n        const safeInfo = await this.getInfo();\n        const encodedIsValidSignatureCall = encodeFunctionData({\n            abi: [\n                {\n                    constant: false,\n                    inputs: [\n                        {\n                            name: '_data',\n                            type: 'bytes',\n                        },\n                        {\n                            name: '_signature',\n                            type: 'bytes',\n                        },\n                    ],\n                    name: 'isValidSignature',\n                    outputs: [\n                        {\n                            name: '',\n                            type: 'bytes4',\n                        },\n                    ],\n                    payable: false,\n                    stateMutability: 'nonpayable',\n                    type: 'function',\n                },\n            ],\n            functionName: 'isValidSignature',\n            args: [messageHash, signature],\n        });\n        const payload = {\n            call: RPC_CALLS.eth_call,\n            params: [\n                {\n                    to: safeInfo.safeAddress,\n                    data: encodedIsValidSignatureCall,\n                },\n                'latest',\n            ],\n        };\n        try {\n            const response = await this.communicator.send(Methods.rpcCall, payload);\n            return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE_BYTES;\n        }\n        catch (err) {\n            return false;\n        }\n    }\n    calculateMessageHash(message) {\n        return hashMessage(message);\n    }\n    calculateTypedMessageHash(typedMessage) {\n        const chainId = typeof typedMessage.domain.chainId === 'object'\n            ? typedMessage.domain.chainId.toNumber()\n            : Number(typedMessage.domain.chainId);\n        let primaryType = typedMessage.primaryType;\n        if (!primaryType) {\n            const fields = Object.values(typedMessage.types);\n            // We try to infer primaryType (simplified ether's version)\n            const primaryTypes = Object.keys(typedMessage.types).filter((typeName) => fields.every((dataTypes) => dataTypes.every(({ type }) => type.replace('[', '').replace(']', '') !== typeName)));\n            if (primaryTypes.length === 0 || primaryTypes.length > 1)\n                throw new Error('Please specify primaryType');\n            primaryType = primaryTypes[0];\n        }\n        return hashTypedData({\n            message: typedMessage.message,\n            domain: {\n                ...typedMessage.domain,\n                chainId,\n                verifyingContract: typedMessage.domain.verifyingContract,\n                salt: typedMessage.domain.salt,\n            },\n            types: typedMessage.types,\n            primaryType,\n        });\n    }\n    async getOffChainSignature(messageHash) {\n        const response = await this.communicator.send(Methods.getOffChainSignature, messageHash);\n        return response.data;\n    }\n    async isMessageSigned(message, signature = '0x') {\n        let check;\n        if (typeof message === 'string') {\n            check = async () => {\n                const messageHash = this.calculateMessageHash(message);\n                const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n                return messageHashSigned;\n            };\n        }\n        if (isObjectEIP712TypedData(message)) {\n            check = async () => {\n                const messageHash = this.calculateTypedMessageHash(message);\n                const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n                return messageHashSigned;\n            };\n        }\n        if (check) {\n            const isValid = await check();\n            return isValid;\n        }\n        throw new Error('Invalid message type');\n    }\n    async isMessageHashSigned(messageHash, signature = '0x') {\n        const checks = [this.check1271Signature.bind(this), this.check1271SignatureBytes.bind(this)];\n        for (const check of checks) {\n            const isValid = await check(messageHash, signature);\n            if (isValid) {\n                return true;\n            }\n        }\n        return false;\n    }\n    async getEnvironmentInfo() {\n        const response = await this.communicator.send(Methods.getEnvironmentInfo, undefined);\n        return response.data;\n    }\n    async requestAddressBook() {\n        const response = await this.communicator.send(Methods.requestAddressBook, undefined);\n        return response.data;\n    }\n}\n__decorate([\n    requirePermission()\n], Safe.prototype, \"requestAddressBook\", null);\nexport { Safe };\n//# sourceMappingURL=index.js.map","import InterfaceCommunicator from './communication/index.js';\nimport { TXs } from './txs/index.js';\nimport { Eth } from './eth/index.js';\nimport { Safe } from './safe/index.js';\nimport { Wallet } from './wallet/index.js';\nclass SafeAppsSDK {\n    constructor(opts = {}) {\n        const { allowedDomains = null, debug = false } = opts;\n        this.communicator = new InterfaceCommunicator(allowedDomains, debug);\n        this.eth = new Eth(this.communicator);\n        this.txs = new TXs(this.communicator);\n        this.safe = new Safe(this.communicator);\n        this.wallet = new Wallet(this.communicator);\n    }\n}\nexport default SafeAppsSDK;\n//# sourceMappingURL=sdk.js.map","import SDK from './sdk.js';\nexport default SDK;\nexport * from './sdk.js';\nexport * from './types/index.js';\nexport * from './communication/methods.js';\nexport * from './communication/messageFormatter.js';\nexport { getSDKVersion } from './version.js';\nexport * from './eth/constants.js';\n//# sourceMappingURL=index.js.map"],"names":["dec2hex","dec","toString","padStart","generateRequestId","window","len","arr","Uint8Array","crypto","getRandomValues","Array","from","join","generateId","Date","getTime","MessageFormatter","Methods","RestrictedMethods","makeRequest","method","params","id","env","sdkVersion","makeResponse","data","version","success","makeErrorResponse","error","constructor","allowedOrigins","debugMode","this","callbacks","Map","isServer","isValidMessage","origin","source","emptyOrMalformed","sentFromParentEl","parent","majorVersionNumber","parseInt","split","allowedSDKVersion","validOrigin","isArray","undefined","find","regExp","test","logIncomingMessage","msg","console","info","onParentMessage","handleIncomingMessage","payload","cb","get","delete","send","request","Error","postMessage","Promise","resolve","reject","set","response","addEventListener","isObjectEIP712TypedData","obj","TXs","communicator","getBySafeTxHash","safeTxHash","getTxBySafeTxHash","signMessage","message","messagePayload","signTypedMessage","typedData","txs","length","sendTransactions","RPC_CALLS","inputFormatters","defaultBlockParam","arg","returnFullTxObjectParam","blockNumberToHex","Number","isInteger","Eth","call","buildRequest","formatters","getBalance","getCode","getStorageAt","getPastLogs","getBlockByHash","getBlockByNumber","getTransactionByHash","getTransactionReceipt","getTransactionCount","getGasPrice","getEstimateGas","transaction","setSafeSettings","args","async","forEach","formatter","i","rpcCall","PERMISSIONS_REQUEST_REJECTED","PermissionsError","code","super","Object","setPrototypeOf","prototype","Wallet","getPermissions","wallet_getPermissions","requestPermissions","permissions","isPermissionRequestValid","wallet_requestPermissions","every","pr","keys","values","includes","hasPermission","required","some","permission","parentCapability","_","propertyKey","descriptor","originalMethod","value","wallet","currentPermissions","apply","__decorate","decorators","target","key","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Safe","getChainInfo","getInfo","getSafeInfo","experimental_getBalances","currency","getSafeBalances","check1271Signature","messageHash","signature","safeInfo","encodedIsValidSignatureCall","encodeFunctionData","abi","constant","inputs","name","type","outputs","payable","stateMutability","functionName","to","safeAddress","slice","toLowerCase","err","check1271SignatureBytes","calculateMessageHash","hashMessage","calculateTypedMessageHash","typedMessage","chainId","domain","toNumber","primaryType","fields","types","primaryTypes","filter","typeName","dataTypes","replace","hashTypedData","verifyingContract","salt","getOffChainSignature","isMessageSigned","check","isMessageHashSigned","checks","bind","getEnvironmentInfo","requestAddressBook","opts","allowedDomains","debug","eth","safe"],"sourceRoot":""}